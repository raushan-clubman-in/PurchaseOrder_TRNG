'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ndataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ndataset
    Inherits Global.System.Data.DataSet
    
    Private tablePO_VIEW_VENDOR_CATEGORY As PO_VIEW_VENDOR_CATEGORYDataTable
    
    Private tableVW_PO_POBILL As VW_PO_POBILLDataTable
    
    Private tableVIEW_PO_REPORT As VIEW_PO_REPORTDataTable
    
    Private tableVIEW_HO_REPORT As VIEW_HO_REPORTDataTable
    
    Private tablePO_WORKINDENT As PO_WORKINDENTDataTable
    
    Private tableVW_POPRINT_RPT As VW_POPRINT_RPTDataTable
    
    Private tableVW_PO_POBILL_DET As VW_PO_POBILL_DETDataTable
    
    Private tableVw_pending_auth As Vw_pending_authDataTable
    
    Private tableVw_INDGRNITEMS As Vw_INDGRNITEMSDataTable
    
    Private tableVw_Indent_GRN As Vw_Indent_GRNDataTable
    
    Private tableVw_PO_GRN As Vw_PO_GRNDataTable
    
    Private tableVw_POGRNITEMS As Vw_POGRNITEMSDataTable
    
    Private tableVw_POGRNITEMS_pending As Vw_POGRNITEMS_pendingDataTable
    
    Private tableVW_PO_WOBBILL2 As VW_PO_WOBBILL2DataTable
    
    Private tableVIEW_WO_REPORT As VIEW_WO_REPORTDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PO_VIEW_VENDOR_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New PO_VIEW_VENDOR_CATEGORYDataTable(ds.Tables("PO_VIEW_VENDOR_CATEGORY")))
            End If
            If (Not (ds.Tables("VW_PO_POBILL")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_POBILLDataTable(ds.Tables("VW_PO_POBILL")))
            End If
            If (Not (ds.Tables("VIEW_PO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_PO_REPORTDataTable(ds.Tables("VIEW_PO_REPORT")))
            End If
            If (Not (ds.Tables("VIEW_HO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_HO_REPORTDataTable(ds.Tables("VIEW_HO_REPORT")))
            End If
            If (Not (ds.Tables("PO_WORKINDENT")) Is Nothing) Then
                MyBase.Tables.Add(New PO_WORKINDENTDataTable(ds.Tables("PO_WORKINDENT")))
            End If
            If (Not (ds.Tables("VW_POPRINT_RPT")) Is Nothing) Then
                MyBase.Tables.Add(New VW_POPRINT_RPTDataTable(ds.Tables("VW_POPRINT_RPT")))
            End If
            If (Not (ds.Tables("VW_PO_POBILL_DET")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_POBILL_DETDataTable(ds.Tables("VW_PO_POBILL_DET")))
            End If
            If (Not (ds.Tables("Vw_pending_auth")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_pending_authDataTable(ds.Tables("Vw_pending_auth")))
            End If
            If (Not (ds.Tables("Vw_INDGRNITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_INDGRNITEMSDataTable(ds.Tables("Vw_INDGRNITEMS")))
            End If
            If (Not (ds.Tables("Vw_Indent_GRN")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Indent_GRNDataTable(ds.Tables("Vw_Indent_GRN")))
            End If
            If (Not (ds.Tables("Vw_PO_GRN")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_PO_GRNDataTable(ds.Tables("Vw_PO_GRN")))
            End If
            If (Not (ds.Tables("Vw_POGRNITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_POGRNITEMSDataTable(ds.Tables("Vw_POGRNITEMS")))
            End If
            If (Not (ds.Tables("Vw_POGRNITEMS_pending")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_POGRNITEMS_pendingDataTable(ds.Tables("Vw_POGRNITEMS_pending")))
            End If
            If (Not (ds.Tables("VW_PO_WOBBILL2")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_WOBBILL2DataTable(ds.Tables("VW_PO_WOBBILL2")))
            End If
            If (Not (ds.Tables("VIEW_WO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_WO_REPORTDataTable(ds.Tables("VIEW_WO_REPORT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PO_VIEW_VENDOR_CATEGORY() As PO_VIEW_VENDOR_CATEGORYDataTable
        Get
            Return Me.tablePO_VIEW_VENDOR_CATEGORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_PO_POBILL() As VW_PO_POBILLDataTable
        Get
            Return Me.tableVW_PO_POBILL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_PO_REPORT() As VIEW_PO_REPORTDataTable
        Get
            Return Me.tableVIEW_PO_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_HO_REPORT() As VIEW_HO_REPORTDataTable
        Get
            Return Me.tableVIEW_HO_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PO_WORKINDENT() As PO_WORKINDENTDataTable
        Get
            Return Me.tablePO_WORKINDENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_POPRINT_RPT() As VW_POPRINT_RPTDataTable
        Get
            Return Me.tableVW_POPRINT_RPT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_PO_POBILL_DET() As VW_PO_POBILL_DETDataTable
        Get
            Return Me.tableVW_PO_POBILL_DET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_pending_auth() As Vw_pending_authDataTable
        Get
            Return Me.tableVw_pending_auth
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_INDGRNITEMS() As Vw_INDGRNITEMSDataTable
        Get
            Return Me.tableVw_INDGRNITEMS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_Indent_GRN() As Vw_Indent_GRNDataTable
        Get
            Return Me.tableVw_Indent_GRN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_PO_GRN() As Vw_PO_GRNDataTable
        Get
            Return Me.tableVw_PO_GRN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_POGRNITEMS() As Vw_POGRNITEMSDataTable
        Get
            Return Me.tableVw_POGRNITEMS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_POGRNITEMS_pending() As Vw_POGRNITEMS_pendingDataTable
        Get
            Return Me.tableVw_POGRNITEMS_pending
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_PO_WOBBILL2() As VW_PO_WOBBILL2DataTable
        Get
            Return Me.tableVW_PO_WOBBILL2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_WO_REPORT() As VIEW_WO_REPORTDataTable
        Get
            Return Me.tableVIEW_WO_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ndataset = CType(MyBase.Clone,ndataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PO_VIEW_VENDOR_CATEGORY")) Is Nothing) Then
                MyBase.Tables.Add(New PO_VIEW_VENDOR_CATEGORYDataTable(ds.Tables("PO_VIEW_VENDOR_CATEGORY")))
            End If
            If (Not (ds.Tables("VW_PO_POBILL")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_POBILLDataTable(ds.Tables("VW_PO_POBILL")))
            End If
            If (Not (ds.Tables("VIEW_PO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_PO_REPORTDataTable(ds.Tables("VIEW_PO_REPORT")))
            End If
            If (Not (ds.Tables("VIEW_HO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_HO_REPORTDataTable(ds.Tables("VIEW_HO_REPORT")))
            End If
            If (Not (ds.Tables("PO_WORKINDENT")) Is Nothing) Then
                MyBase.Tables.Add(New PO_WORKINDENTDataTable(ds.Tables("PO_WORKINDENT")))
            End If
            If (Not (ds.Tables("VW_POPRINT_RPT")) Is Nothing) Then
                MyBase.Tables.Add(New VW_POPRINT_RPTDataTable(ds.Tables("VW_POPRINT_RPT")))
            End If
            If (Not (ds.Tables("VW_PO_POBILL_DET")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_POBILL_DETDataTable(ds.Tables("VW_PO_POBILL_DET")))
            End If
            If (Not (ds.Tables("Vw_pending_auth")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_pending_authDataTable(ds.Tables("Vw_pending_auth")))
            End If
            If (Not (ds.Tables("Vw_INDGRNITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_INDGRNITEMSDataTable(ds.Tables("Vw_INDGRNITEMS")))
            End If
            If (Not (ds.Tables("Vw_Indent_GRN")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Indent_GRNDataTable(ds.Tables("Vw_Indent_GRN")))
            End If
            If (Not (ds.Tables("Vw_PO_GRN")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_PO_GRNDataTable(ds.Tables("Vw_PO_GRN")))
            End If
            If (Not (ds.Tables("Vw_POGRNITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_POGRNITEMSDataTable(ds.Tables("Vw_POGRNITEMS")))
            End If
            If (Not (ds.Tables("Vw_POGRNITEMS_pending")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_POGRNITEMS_pendingDataTable(ds.Tables("Vw_POGRNITEMS_pending")))
            End If
            If (Not (ds.Tables("VW_PO_WOBBILL2")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PO_WOBBILL2DataTable(ds.Tables("VW_PO_WOBBILL2")))
            End If
            If (Not (ds.Tables("VIEW_WO_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_WO_REPORTDataTable(ds.Tables("VIEW_WO_REPORT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePO_VIEW_VENDOR_CATEGORY = CType(MyBase.Tables("PO_VIEW_VENDOR_CATEGORY"),PO_VIEW_VENDOR_CATEGORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePO_VIEW_VENDOR_CATEGORY) Is Nothing) Then
                Me.tablePO_VIEW_VENDOR_CATEGORY.InitVars
            End If
        End If
        Me.tableVW_PO_POBILL = CType(MyBase.Tables("VW_PO_POBILL"),VW_PO_POBILLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_PO_POBILL) Is Nothing) Then
                Me.tableVW_PO_POBILL.InitVars
            End If
        End If
        Me.tableVIEW_PO_REPORT = CType(MyBase.Tables("VIEW_PO_REPORT"),VIEW_PO_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_PO_REPORT) Is Nothing) Then
                Me.tableVIEW_PO_REPORT.InitVars
            End If
        End If
        Me.tableVIEW_HO_REPORT = CType(MyBase.Tables("VIEW_HO_REPORT"),VIEW_HO_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_HO_REPORT) Is Nothing) Then
                Me.tableVIEW_HO_REPORT.InitVars
            End If
        End If
        Me.tablePO_WORKINDENT = CType(MyBase.Tables("PO_WORKINDENT"),PO_WORKINDENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePO_WORKINDENT) Is Nothing) Then
                Me.tablePO_WORKINDENT.InitVars
            End If
        End If
        Me.tableVW_POPRINT_RPT = CType(MyBase.Tables("VW_POPRINT_RPT"),VW_POPRINT_RPTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_POPRINT_RPT) Is Nothing) Then
                Me.tableVW_POPRINT_RPT.InitVars
            End If
        End If
        Me.tableVW_PO_POBILL_DET = CType(MyBase.Tables("VW_PO_POBILL_DET"),VW_PO_POBILL_DETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_PO_POBILL_DET) Is Nothing) Then
                Me.tableVW_PO_POBILL_DET.InitVars
            End If
        End If
        Me.tableVw_pending_auth = CType(MyBase.Tables("Vw_pending_auth"),Vw_pending_authDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_pending_auth) Is Nothing) Then
                Me.tableVw_pending_auth.InitVars
            End If
        End If
        Me.tableVw_INDGRNITEMS = CType(MyBase.Tables("Vw_INDGRNITEMS"),Vw_INDGRNITEMSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_INDGRNITEMS) Is Nothing) Then
                Me.tableVw_INDGRNITEMS.InitVars
            End If
        End If
        Me.tableVw_Indent_GRN = CType(MyBase.Tables("Vw_Indent_GRN"),Vw_Indent_GRNDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_Indent_GRN) Is Nothing) Then
                Me.tableVw_Indent_GRN.InitVars
            End If
        End If
        Me.tableVw_PO_GRN = CType(MyBase.Tables("Vw_PO_GRN"),Vw_PO_GRNDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_PO_GRN) Is Nothing) Then
                Me.tableVw_PO_GRN.InitVars
            End If
        End If
        Me.tableVw_POGRNITEMS = CType(MyBase.Tables("Vw_POGRNITEMS"),Vw_POGRNITEMSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_POGRNITEMS) Is Nothing) Then
                Me.tableVw_POGRNITEMS.InitVars
            End If
        End If
        Me.tableVw_POGRNITEMS_pending = CType(MyBase.Tables("Vw_POGRNITEMS_pending"),Vw_POGRNITEMS_pendingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_POGRNITEMS_pending) Is Nothing) Then
                Me.tableVw_POGRNITEMS_pending.InitVars
            End If
        End If
        Me.tableVW_PO_WOBBILL2 = CType(MyBase.Tables("VW_PO_WOBBILL2"),VW_PO_WOBBILL2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_PO_WOBBILL2) Is Nothing) Then
                Me.tableVW_PO_WOBBILL2.InitVars
            End If
        End If
        Me.tableVIEW_WO_REPORT = CType(MyBase.Tables("VIEW_WO_REPORT"),VIEW_WO_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_WO_REPORT) Is Nothing) Then
                Me.tableVIEW_WO_REPORT.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ndataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ndataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePO_VIEW_VENDOR_CATEGORY = New PO_VIEW_VENDOR_CATEGORYDataTable()
        MyBase.Tables.Add(Me.tablePO_VIEW_VENDOR_CATEGORY)
        Me.tableVW_PO_POBILL = New VW_PO_POBILLDataTable()
        MyBase.Tables.Add(Me.tableVW_PO_POBILL)
        Me.tableVIEW_PO_REPORT = New VIEW_PO_REPORTDataTable()
        MyBase.Tables.Add(Me.tableVIEW_PO_REPORT)
        Me.tableVIEW_HO_REPORT = New VIEW_HO_REPORTDataTable()
        MyBase.Tables.Add(Me.tableVIEW_HO_REPORT)
        Me.tablePO_WORKINDENT = New PO_WORKINDENTDataTable()
        MyBase.Tables.Add(Me.tablePO_WORKINDENT)
        Me.tableVW_POPRINT_RPT = New VW_POPRINT_RPTDataTable()
        MyBase.Tables.Add(Me.tableVW_POPRINT_RPT)
        Me.tableVW_PO_POBILL_DET = New VW_PO_POBILL_DETDataTable()
        MyBase.Tables.Add(Me.tableVW_PO_POBILL_DET)
        Me.tableVw_pending_auth = New Vw_pending_authDataTable()
        MyBase.Tables.Add(Me.tableVw_pending_auth)
        Me.tableVw_INDGRNITEMS = New Vw_INDGRNITEMSDataTable()
        MyBase.Tables.Add(Me.tableVw_INDGRNITEMS)
        Me.tableVw_Indent_GRN = New Vw_Indent_GRNDataTable()
        MyBase.Tables.Add(Me.tableVw_Indent_GRN)
        Me.tableVw_PO_GRN = New Vw_PO_GRNDataTable()
        MyBase.Tables.Add(Me.tableVw_PO_GRN)
        Me.tableVw_POGRNITEMS = New Vw_POGRNITEMSDataTable()
        MyBase.Tables.Add(Me.tableVw_POGRNITEMS)
        Me.tableVw_POGRNITEMS_pending = New Vw_POGRNITEMS_pendingDataTable()
        MyBase.Tables.Add(Me.tableVw_POGRNITEMS_pending)
        Me.tableVW_PO_WOBBILL2 = New VW_PO_WOBBILL2DataTable()
        MyBase.Tables.Add(Me.tableVW_PO_WOBBILL2)
        Me.tableVIEW_WO_REPORT = New VIEW_WO_REPORTDataTable()
        MyBase.Tables.Add(Me.tableVIEW_WO_REPORT)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePO_VIEW_VENDOR_CATEGORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_PO_POBILL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEW_PO_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEW_HO_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePO_WORKINDENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_POPRINT_RPT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_PO_POBILL_DET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_pending_auth() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_INDGRNITEMS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_Indent_GRN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_PO_GRN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_POGRNITEMS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVw_POGRNITEMS_pending() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_PO_WOBBILL2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEW_WO_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ndataset = New ndataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PO_VIEW_VENDOR_CATEGORYRowChangeEventHandler(ByVal sender As Object, ByVal e As PO_VIEW_VENDOR_CATEGORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_PO_POBILLRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_PO_POBILLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEW_PO_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_PO_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEW_HO_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_HO_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PO_WORKINDENTRowChangeEventHandler(ByVal sender As Object, ByVal e As PO_WORKINDENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_POPRINT_RPTRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_POPRINT_RPTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_PO_POBILL_DETRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_PO_POBILL_DETRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_pending_authRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_pending_authRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_INDGRNITEMSRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_INDGRNITEMSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_Indent_GRNRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_Indent_GRNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_PO_GRNRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_PO_GRNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_POGRNITEMSRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_POGRNITEMSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Vw_POGRNITEMS_pendingRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_POGRNITEMS_pendingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_PO_WOBBILL2RowChangeEventHandler(ByVal sender As Object, ByVal e As VW_PO_WOBBILL2RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEW_WO_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_WO_REPORTRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PO_VIEW_VENDOR_CATEGORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of PO_VIEW_VENDOR_CATEGORYRow)
        
        Private columnTABNAME As Global.System.Data.DataColumn
        
        Private columnvendorcode As Global.System.Data.DataColumn
        
        Private columnvendorname As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnSLTYPE As Global.System.Data.DataColumn
        
        Private columnPINCODE As Global.System.Data.DataColumn
        
        Private columnPHONE As Global.System.Data.DataColumn
        
        Private columnMOBILE As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnCONTACTPERSON As Global.System.Data.DataColumn
        
        Private columnVATNO As Global.System.Data.DataColumn
        
        Private columnCSTNO As Global.System.Data.DataColumn
        
        Private columnTINNO As Global.System.Data.DataColumn
        
        Private columnPANNO As Global.System.Data.DataColumn
        
        Private columncategory As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PO_VIEW_VENDOR_CATEGORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendorcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSLTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PINCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOBILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOBILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACTPERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTPERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVATNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TINNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PANNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPANNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property categoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PO_VIEW_VENDOR_CATEGORYRow
            Get
                Return CType(Me.Rows(index),PO_VIEW_VENDOR_CATEGORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDOR_CATEGORYRowChanging As PO_VIEW_VENDOR_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDOR_CATEGORYRowChanged As PO_VIEW_VENDOR_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDOR_CATEGORYRowDeleting As PO_VIEW_VENDOR_CATEGORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDOR_CATEGORYRowDeleted As PO_VIEW_VENDOR_CATEGORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPO_VIEW_VENDOR_CATEGORYRow(ByVal row As PO_VIEW_VENDOR_CATEGORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPO_VIEW_VENDOR_CATEGORYRow( _
                    ByVal TABNAME As String,  _
                    ByVal vendorcode As String,  _
                    ByVal vendorname As String,  _
                    ByVal address As String,  _
                    ByVal city As String,  _
                    ByVal state As String,  _
                    ByVal SLTYPE As String,  _
                    ByVal PINCODE As String,  _
                    ByVal PHONE As String,  _
                    ByVal MOBILE As String,  _
                    ByVal FAX As String,  _
                    ByVal EMAIL As String,  _
                    ByVal CONTACTPERSON As String,  _
                    ByVal VATNO As String,  _
                    ByVal CSTNO As String,  _
                    ByVal TINNO As String,  _
                    ByVal PANNO As String,  _
                    ByVal category As String) As PO_VIEW_VENDOR_CATEGORYRow
            Dim rowPO_VIEW_VENDOR_CATEGORYRow As PO_VIEW_VENDOR_CATEGORYRow = CType(Me.NewRow,PO_VIEW_VENDOR_CATEGORYRow)
            Dim columnValuesArray() As Object = New Object() {TABNAME, vendorcode, vendorname, address, city, state, SLTYPE, PINCODE, PHONE, MOBILE, FAX, EMAIL, CONTACTPERSON, VATNO, CSTNO, TINNO, PANNO, category}
            rowPO_VIEW_VENDOR_CATEGORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPO_VIEW_VENDOR_CATEGORYRow)
            Return rowPO_VIEW_VENDOR_CATEGORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PO_VIEW_VENDOR_CATEGORYDataTable = CType(MyBase.Clone,PO_VIEW_VENDOR_CATEGORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PO_VIEW_VENDOR_CATEGORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTABNAME = MyBase.Columns("TABNAME")
            Me.columnvendorcode = MyBase.Columns("vendorcode")
            Me.columnvendorname = MyBase.Columns("vendorname")
            Me.columnaddress = MyBase.Columns("address")
            Me.columncity = MyBase.Columns("city")
            Me.columnstate = MyBase.Columns("state")
            Me.columnSLTYPE = MyBase.Columns("SLTYPE")
            Me.columnPINCODE = MyBase.Columns("PINCODE")
            Me.columnPHONE = MyBase.Columns("PHONE")
            Me.columnMOBILE = MyBase.Columns("MOBILE")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCONTACTPERSON = MyBase.Columns("CONTACTPERSON")
            Me.columnVATNO = MyBase.Columns("VATNO")
            Me.columnCSTNO = MyBase.Columns("CSTNO")
            Me.columnTINNO = MyBase.Columns("TINNO")
            Me.columnPANNO = MyBase.Columns("PANNO")
            Me.columncategory = MyBase.Columns("category")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTABNAME = New Global.System.Data.DataColumn("TABNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABNAME)
            Me.columnvendorcode = New Global.System.Data.DataColumn("vendorcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorcode)
            Me.columnvendorname = New Global.System.Data.DataColumn("vendorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorname)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnSLTYPE = New Global.System.Data.DataColumn("SLTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSLTYPE)
            Me.columnPINCODE = New Global.System.Data.DataColumn("PINCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINCODE)
            Me.columnPHONE = New Global.System.Data.DataColumn("PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE)
            Me.columnMOBILE = New Global.System.Data.DataColumn("MOBILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOBILE)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCONTACTPERSON = New Global.System.Data.DataColumn("CONTACTPERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTPERSON)
            Me.columnVATNO = New Global.System.Data.DataColumn("VATNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVATNO)
            Me.columnCSTNO = New Global.System.Data.DataColumn("CSTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTNO)
            Me.columnTINNO = New Global.System.Data.DataColumn("TINNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINNO)
            Me.columnPANNO = New Global.System.Data.DataColumn("PANNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPANNO)
            Me.columncategory = New Global.System.Data.DataColumn("category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategory)
            Me.columnTABNAME.AllowDBNull = false
            Me.columnTABNAME.MaxLength = 23
            Me.columnvendorcode.AllowDBNull = false
            Me.columnvendorcode.MaxLength = 255
            Me.columnvendorname.AllowDBNull = false
            Me.columnvendorname.MaxLength = 255
            Me.columnaddress.AllowDBNull = false
            Me.columnaddress.MaxLength = 511
            Me.columncity.AllowDBNull = false
            Me.columncity.MaxLength = 255
            Me.columnstate.AllowDBNull = false
            Me.columnstate.MaxLength = 532
            Me.columnSLTYPE.AllowDBNull = false
            Me.columnSLTYPE.MaxLength = 255
            Me.columnPINCODE.AllowDBNull = false
            Me.columnPINCODE.MaxLength = 20
            Me.columnPHONE.AllowDBNull = false
            Me.columnPHONE.MaxLength = 20
            Me.columnMOBILE.AllowDBNull = false
            Me.columnMOBILE.MaxLength = 255
            Me.columnFAX.AllowDBNull = false
            Me.columnFAX.MaxLength = 20
            Me.columnEMAIL.AllowDBNull = false
            Me.columnEMAIL.MaxLength = 25
            Me.columnCONTACTPERSON.AllowDBNull = false
            Me.columnCONTACTPERSON.MaxLength = 25
            Me.columnVATNO.AllowDBNull = false
            Me.columnVATNO.MaxLength = 255
            Me.columnCSTNO.AllowDBNull = false
            Me.columnCSTNO.MaxLength = 255
            Me.columnTINNO.AllowDBNull = false
            Me.columnTINNO.MaxLength = 255
            Me.columnPANNO.AllowDBNull = false
            Me.columnPANNO.MaxLength = 255
            Me.columncategory.AllowDBNull = false
            Me.columncategory.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPO_VIEW_VENDOR_CATEGORYRow() As PO_VIEW_VENDOR_CATEGORYRow
            Return CType(Me.NewRow,PO_VIEW_VENDOR_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PO_VIEW_VENDOR_CATEGORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PO_VIEW_VENDOR_CATEGORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PO_VIEW_VENDOR_CATEGORYRowChangedEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDOR_CATEGORYRowChanged(Me, New PO_VIEW_VENDOR_CATEGORYRowChangeEvent(CType(e.Row,PO_VIEW_VENDOR_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PO_VIEW_VENDOR_CATEGORYRowChangingEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDOR_CATEGORYRowChanging(Me, New PO_VIEW_VENDOR_CATEGORYRowChangeEvent(CType(e.Row,PO_VIEW_VENDOR_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PO_VIEW_VENDOR_CATEGORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDOR_CATEGORYRowDeleted(Me, New PO_VIEW_VENDOR_CATEGORYRowChangeEvent(CType(e.Row,PO_VIEW_VENDOR_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PO_VIEW_VENDOR_CATEGORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDOR_CATEGORYRowDeleting(Me, New PO_VIEW_VENDOR_CATEGORYRowChangeEvent(CType(e.Row,PO_VIEW_VENDOR_CATEGORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePO_VIEW_VENDOR_CATEGORYRow(ByVal row As PO_VIEW_VENDOR_CATEGORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PO_VIEW_VENDOR_CATEGORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_PO_POBILLDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_PO_POBILLRow)
        
        Private columnPONO As Global.System.Data.DataColumn
        
        Private columnPODATE As Global.System.Data.DataColumn
        
        Private columnCATEGORY As Global.System.Data.DataColumn
        
        Private columnINDENTNO As Global.System.Data.DataColumn
        
        Private columnINDENTDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnAUTH_DOCNO As Global.System.Data.DataColumn
        
        Private columnQUOTNO As Global.System.Data.DataColumn
        
        Private columnDEPARTMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVEDBY As Global.System.Data.DataColumn
        
        Private columnPOSTATUS As Global.System.Data.DataColumn
        
        Private columnPOTOTAL As Global.System.Data.DataColumn
        
        Private columnTOT_VAT As Global.System.Data.DataColumn
        
        Private columnTOT_TAX As Global.System.Data.DataColumn
        
        Private columnTOT_DISCOUNT As Global.System.Data.DataColumn
        
        Private columnADVANCE As Global.System.Data.DataColumn
        
        Private columnoveralldisc As Global.System.Data.DataColumn
        
        Private columnPOCF As Global.System.Data.DataColumn
        
        Private columnPOTRANSPORT As Global.System.Data.DataColumn
        
        Private columnPODELIVERYAMT As Global.System.Data.DataColumn
        
        Private columnPAYMENTTERMS As Global.System.Data.DataColumn
        
        Private columnPOREMARKS As Global.System.Data.DataColumn
        
        Private columnDELIVERYTERMS As Global.System.Data.DataColumn
        
        Private columnADDRESS As Global.System.Data.DataColumn
        
        Private columnADDRESS2 As Global.System.Data.DataColumn
        
        Private columnADDRESS3 As Global.System.Data.DataColumn
        
        Private columnCITY As Global.System.Data.DataColumn
        
        Private columnSTATE As Global.System.Data.DataColumn
        
        Private columnMOBILENO As Global.System.Data.DataColumn
        
        Private columnPINCODE As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnDISCOUNT As Global.System.Data.DataColumn
        
        Private columnVATAMT As Global.System.Data.DataColumn
        
        Private columnVAT As Global.System.Data.DataColumn
        
        Private columnTOTAL As Global.System.Data.DataColumn
        
        Private columnDISCAMT As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnFREEZE As Global.System.Data.DataColumn
        
        Private columnADDUSER As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEUSER As Global.System.Data.DataColumn
        
        Private columnUPDATETIME As Global.System.Data.DataColumn
        
        Private columnSUBJECT As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnCSTNO As Global.System.Data.DataColumn
        
        Private columnTINNO As Global.System.Data.DataColumn
        
        Private columnPANNO As Global.System.Data.DataColumn
        
        Private columnCONTACTPERSON As Global.System.Data.DataColumn
        
        Private columnPOCST As Global.System.Data.DataColumn
        
        Private columnPOED As Global.System.Data.DataColumn
        
        Private columnPOMODVAT As Global.System.Data.DataColumn
        
        Private columnPOPTAX As Global.System.Data.DataColumn
        
        Private columnPOOCTRA As Global.System.Data.DataColumn
        
        Private columnPOINSURANCE As Global.System.Data.DataColumn
        
        Private columnPOLST As Global.System.Data.DataColumn
        
        Private columnPOADVPERC As Global.System.Data.DataColumn
        
        Private columnPOSALET As Global.System.Data.DataColumn
        
        Private columnPODESPMODE As Global.System.Data.DataColumn
        
        Private columnPODOCSTHROUGH As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_PO_POBILL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTH_DOCNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTH_DOCNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUOTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUOTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_VATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_VAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_TAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_DISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADVANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADVANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property overalldiscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoveralldisc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POCFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POTRANSPORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTRANSPORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODELIVERYAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODELIVERYAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAYMENTTERMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTTERMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POREMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELIVERYTERMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIVERYTERMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESS3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOBILENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOBILENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PINCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVATAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FREEZEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREEZE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBJECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBJECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TINNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PANNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPANNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACTPERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTPERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POCSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POMODVATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOMODVAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POPTAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOPTAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POOCTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOCTRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POINSURANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOINSURANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POLSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOLST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POADVPERCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOADVPERC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSALETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSALET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODESPMODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODESPMODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODOCSTHROUGHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODOCSTHROUGH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_PO_POBILLRow
            Get
                Return CType(Me.Rows(index),VW_PO_POBILLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILLRowChanging As VW_PO_POBILLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILLRowChanged As VW_PO_POBILLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILLRowDeleting As VW_PO_POBILLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILLRowDeleted As VW_PO_POBILLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_PO_POBILLRow(ByVal row As VW_PO_POBILLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_PO_POBILLRow( _
                    ByVal PONO As String,  _
                    ByVal PODATE As Date,  _
                    ByVal CATEGORY As String,  _
                    ByVal INDENTNO As String,  _
                    ByVal INDENTDATE As Date,  _
                    ByVal SUPPLIERCODE As String,  _
                    ByVal SUPPLIERNAME As String,  _
                    ByVal AUTH_DOCNO As String,  _
                    ByVal QUOTNO As String,  _
                    ByVal DEPARTMENT As String,  _
                    ByVal APPROVEDBY As String,  _
                    ByVal POSTATUS As String,  _
                    ByVal POTOTAL As Decimal,  _
                    ByVal TOT_VAT As Decimal,  _
                    ByVal TOT_TAX As Decimal,  _
                    ByVal TOT_DISCOUNT As Decimal,  _
                    ByVal ADVANCE As Decimal,  _
                    ByVal overalldisc As Decimal,  _
                    ByVal POCF As Decimal,  _
                    ByVal POTRANSPORT As Decimal,  _
                    ByVal PODELIVERYAMT As Decimal,  _
                    ByVal PAYMENTTERMS As String,  _
                    ByVal POREMARKS As String,  _
                    ByVal DELIVERYTERMS As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal ADDRESS2 As String,  _
                    ByVal ADDRESS3 As String,  _
                    ByVal CITY As String,  _
                    ByVal STATE As String,  _
                    ByVal MOBILENO As String,  _
                    ByVal PINCODE As String,  _
                    ByVal EMAIL As String,  _
                    ByVal ITEMCODE As String,  _
                    ByVal ITEMNAME As String,  _
                    ByVal UOM As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal RATE As Decimal,  _
                    ByVal DISCOUNT As Decimal,  _
                    ByVal VATAMT As Decimal,  _
                    ByVal VAT As Decimal,  _
                    ByVal TOTAL As Decimal,  _
                    ByVal DISCAMT As Decimal,  _
                    ByVal AMOUNT As Decimal,  _
                    ByVal FREEZE As String,  _
                    ByVal ADDUSER As String,  _
                    ByVal ADDDATE As Date,  _
                    ByVal UPDATEUSER As String,  _
                    ByVal UPDATETIME As Date,  _
                    ByVal SUBJECT As String,  _
                    ByVal FAX As String,  _
                    ByVal CSTNO As String,  _
                    ByVal TINNO As String,  _
                    ByVal PANNO As String,  _
                    ByVal CONTACTPERSON As String,  _
                    ByVal POCST As Decimal,  _
                    ByVal POED As Decimal,  _
                    ByVal POMODVAT As Decimal,  _
                    ByVal POPTAX As Decimal,  _
                    ByVal POOCTRA As Decimal,  _
                    ByVal POINSURANCE As Decimal,  _
                    ByVal POLST As Decimal,  _
                    ByVal POADVPERC As Decimal,  _
                    ByVal POSALET As String,  _
                    ByVal PODESPMODE As String,  _
                    ByVal PODOCSTHROUGH As String) As VW_PO_POBILLRow
            Dim rowVW_PO_POBILLRow As VW_PO_POBILLRow = CType(Me.NewRow,VW_PO_POBILLRow)
            Dim columnValuesArray() As Object = New Object() {PONO, PODATE, CATEGORY, INDENTNO, INDENTDATE, SUPPLIERCODE, SUPPLIERNAME, AUTH_DOCNO, QUOTNO, DEPARTMENT, APPROVEDBY, POSTATUS, POTOTAL, TOT_VAT, TOT_TAX, TOT_DISCOUNT, ADVANCE, overalldisc, POCF, POTRANSPORT, PODELIVERYAMT, PAYMENTTERMS, POREMARKS, DELIVERYTERMS, ADDRESS, ADDRESS2, ADDRESS3, CITY, STATE, MOBILENO, PINCODE, EMAIL, ITEMCODE, ITEMNAME, UOM, QTY, RATE, DISCOUNT, VATAMT, VAT, TOTAL, DISCAMT, AMOUNT, FREEZE, ADDUSER, ADDDATE, UPDATEUSER, UPDATETIME, SUBJECT, FAX, CSTNO, TINNO, PANNO, CONTACTPERSON, POCST, POED, POMODVAT, POPTAX, POOCTRA, POINSURANCE, POLST, POADVPERC, POSALET, PODESPMODE, PODOCSTHROUGH}
            rowVW_PO_POBILLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_PO_POBILLRow)
            Return rowVW_PO_POBILLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_PO_POBILLDataTable = CType(MyBase.Clone,VW_PO_POBILLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_PO_POBILLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPONO = MyBase.Columns("PONO")
            Me.columnPODATE = MyBase.Columns("PODATE")
            Me.columnCATEGORY = MyBase.Columns("CATEGORY")
            Me.columnINDENTNO = MyBase.Columns("INDENTNO")
            Me.columnINDENTDATE = MyBase.Columns("INDENTDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnAUTH_DOCNO = MyBase.Columns("AUTH_DOCNO")
            Me.columnQUOTNO = MyBase.Columns("QUOTNO")
            Me.columnDEPARTMENT = MyBase.Columns("DEPARTMENT")
            Me.columnAPPROVEDBY = MyBase.Columns("APPROVEDBY")
            Me.columnPOSTATUS = MyBase.Columns("POSTATUS")
            Me.columnPOTOTAL = MyBase.Columns("POTOTAL")
            Me.columnTOT_VAT = MyBase.Columns("TOT_VAT")
            Me.columnTOT_TAX = MyBase.Columns("TOT_TAX")
            Me.columnTOT_DISCOUNT = MyBase.Columns("TOT_DISCOUNT")
            Me.columnADVANCE = MyBase.Columns("ADVANCE")
            Me.columnoveralldisc = MyBase.Columns("overalldisc")
            Me.columnPOCF = MyBase.Columns("POCF")
            Me.columnPOTRANSPORT = MyBase.Columns("POTRANSPORT")
            Me.columnPODELIVERYAMT = MyBase.Columns("PODELIVERYAMT")
            Me.columnPAYMENTTERMS = MyBase.Columns("PAYMENTTERMS")
            Me.columnPOREMARKS = MyBase.Columns("POREMARKS")
            Me.columnDELIVERYTERMS = MyBase.Columns("DELIVERYTERMS")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnADDRESS2 = MyBase.Columns("ADDRESS2")
            Me.columnADDRESS3 = MyBase.Columns("ADDRESS3")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnSTATE = MyBase.Columns("STATE")
            Me.columnMOBILENO = MyBase.Columns("MOBILENO")
            Me.columnPINCODE = MyBase.Columns("PINCODE")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnDISCOUNT = MyBase.Columns("DISCOUNT")
            Me.columnVATAMT = MyBase.Columns("VATAMT")
            Me.columnVAT = MyBase.Columns("VAT")
            Me.columnTOTAL = MyBase.Columns("TOTAL")
            Me.columnDISCAMT = MyBase.Columns("DISCAMT")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnFREEZE = MyBase.Columns("FREEZE")
            Me.columnADDUSER = MyBase.Columns("ADDUSER")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnUPDATEUSER = MyBase.Columns("UPDATEUSER")
            Me.columnUPDATETIME = MyBase.Columns("UPDATETIME")
            Me.columnSUBJECT = MyBase.Columns("SUBJECT")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnCSTNO = MyBase.Columns("CSTNO")
            Me.columnTINNO = MyBase.Columns("TINNO")
            Me.columnPANNO = MyBase.Columns("PANNO")
            Me.columnCONTACTPERSON = MyBase.Columns("CONTACTPERSON")
            Me.columnPOCST = MyBase.Columns("POCST")
            Me.columnPOED = MyBase.Columns("POED")
            Me.columnPOMODVAT = MyBase.Columns("POMODVAT")
            Me.columnPOPTAX = MyBase.Columns("POPTAX")
            Me.columnPOOCTRA = MyBase.Columns("POOCTRA")
            Me.columnPOINSURANCE = MyBase.Columns("POINSURANCE")
            Me.columnPOLST = MyBase.Columns("POLST")
            Me.columnPOADVPERC = MyBase.Columns("POADVPERC")
            Me.columnPOSALET = MyBase.Columns("POSALET")
            Me.columnPODESPMODE = MyBase.Columns("PODESPMODE")
            Me.columnPODOCSTHROUGH = MyBase.Columns("PODOCSTHROUGH")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPONO = New Global.System.Data.DataColumn("PONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPONO)
            Me.columnPODATE = New Global.System.Data.DataColumn("PODATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODATE)
            Me.columnCATEGORY = New Global.System.Data.DataColumn("CATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORY)
            Me.columnINDENTNO = New Global.System.Data.DataColumn("INDENTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTNO)
            Me.columnINDENTDATE = New Global.System.Data.DataColumn("INDENTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnAUTH_DOCNO = New Global.System.Data.DataColumn("AUTH_DOCNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTH_DOCNO)
            Me.columnQUOTNO = New Global.System.Data.DataColumn("QUOTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUOTNO)
            Me.columnDEPARTMENT = New Global.System.Data.DataColumn("DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTMENT)
            Me.columnAPPROVEDBY = New Global.System.Data.DataColumn("APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDBY)
            Me.columnPOSTATUS = New Global.System.Data.DataColumn("POSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTATUS)
            Me.columnPOTOTAL = New Global.System.Data.DataColumn("POTOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTOTAL)
            Me.columnTOT_VAT = New Global.System.Data.DataColumn("TOT_VAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_VAT)
            Me.columnTOT_TAX = New Global.System.Data.DataColumn("TOT_TAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_TAX)
            Me.columnTOT_DISCOUNT = New Global.System.Data.DataColumn("TOT_DISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_DISCOUNT)
            Me.columnADVANCE = New Global.System.Data.DataColumn("ADVANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADVANCE)
            Me.columnoveralldisc = New Global.System.Data.DataColumn("overalldisc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoveralldisc)
            Me.columnPOCF = New Global.System.Data.DataColumn("POCF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCF)
            Me.columnPOTRANSPORT = New Global.System.Data.DataColumn("POTRANSPORT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTRANSPORT)
            Me.columnPODELIVERYAMT = New Global.System.Data.DataColumn("PODELIVERYAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODELIVERYAMT)
            Me.columnPAYMENTTERMS = New Global.System.Data.DataColumn("PAYMENTTERMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTTERMS)
            Me.columnPOREMARKS = New Global.System.Data.DataColumn("POREMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOREMARKS)
            Me.columnDELIVERYTERMS = New Global.System.Data.DataColumn("DELIVERYTERMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIVERYTERMS)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnADDRESS2 = New Global.System.Data.DataColumn("ADDRESS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS2)
            Me.columnADDRESS3 = New Global.System.Data.DataColumn("ADDRESS3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS3)
            Me.columnCITY = New Global.System.Data.DataColumn("CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnSTATE = New Global.System.Data.DataColumn("STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATE)
            Me.columnMOBILENO = New Global.System.Data.DataColumn("MOBILENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOBILENO)
            Me.columnPINCODE = New Global.System.Data.DataColumn("PINCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINCODE)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnDISCOUNT = New Global.System.Data.DataColumn("DISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNT)
            Me.columnVATAMT = New Global.System.Data.DataColumn("VATAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVATAMT)
            Me.columnVAT = New Global.System.Data.DataColumn("VAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT)
            Me.columnTOTAL = New Global.System.Data.DataColumn("TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL)
            Me.columnDISCAMT = New Global.System.Data.DataColumn("DISCAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCAMT)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnFREEZE = New Global.System.Data.DataColumn("FREEZE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREEZE)
            Me.columnADDUSER = New Global.System.Data.DataColumn("ADDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDUSER)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnUPDATEUSER = New Global.System.Data.DataColumn("UPDATEUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEUSER)
            Me.columnUPDATETIME = New Global.System.Data.DataColumn("UPDATETIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATETIME)
            Me.columnSUBJECT = New Global.System.Data.DataColumn("SUBJECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBJECT)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnCSTNO = New Global.System.Data.DataColumn("CSTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTNO)
            Me.columnTINNO = New Global.System.Data.DataColumn("TINNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINNO)
            Me.columnPANNO = New Global.System.Data.DataColumn("PANNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPANNO)
            Me.columnCONTACTPERSON = New Global.System.Data.DataColumn("CONTACTPERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTPERSON)
            Me.columnPOCST = New Global.System.Data.DataColumn("POCST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCST)
            Me.columnPOED = New Global.System.Data.DataColumn("POED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOED)
            Me.columnPOMODVAT = New Global.System.Data.DataColumn("POMODVAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOMODVAT)
            Me.columnPOPTAX = New Global.System.Data.DataColumn("POPTAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOPTAX)
            Me.columnPOOCTRA = New Global.System.Data.DataColumn("POOCTRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOCTRA)
            Me.columnPOINSURANCE = New Global.System.Data.DataColumn("POINSURANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOINSURANCE)
            Me.columnPOLST = New Global.System.Data.DataColumn("POLST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOLST)
            Me.columnPOADVPERC = New Global.System.Data.DataColumn("POADVPERC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOADVPERC)
            Me.columnPOSALET = New Global.System.Data.DataColumn("POSALET", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSALET)
            Me.columnPODESPMODE = New Global.System.Data.DataColumn("PODESPMODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODESPMODE)
            Me.columnPODOCSTHROUGH = New Global.System.Data.DataColumn("PODOCSTHROUGH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODOCSTHROUGH)
            Me.columnPONO.ReadOnly = true
            Me.columnPONO.MaxLength = 25
            Me.columnCATEGORY.ReadOnly = true
            Me.columnCATEGORY.MaxLength = 50
            Me.columnINDENTNO.ReadOnly = true
            Me.columnINDENTNO.MaxLength = 50
            Me.columnINDENTDATE.ReadOnly = true
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 10
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 255
            Me.columnAUTH_DOCNO.ReadOnly = true
            Me.columnAUTH_DOCNO.MaxLength = 20
            Me.columnQUOTNO.ReadOnly = true
            Me.columnQUOTNO.MaxLength = 10
            Me.columnDEPARTMENT.ReadOnly = true
            Me.columnDEPARTMENT.MaxLength = 40
            Me.columnAPPROVEDBY.ReadOnly = true
            Me.columnAPPROVEDBY.MaxLength = 25
            Me.columnPOSTATUS.ReadOnly = true
            Me.columnPOSTATUS.MaxLength = 25
            Me.columnPOTOTAL.ReadOnly = true
            Me.columnTOT_VAT.ReadOnly = true
            Me.columnTOT_TAX.ReadOnly = true
            Me.columnTOT_DISCOUNT.ReadOnly = true
            Me.columnADVANCE.ReadOnly = true
            Me.columnoveralldisc.ReadOnly = true
            Me.columnPOCF.ReadOnly = true
            Me.columnPOTRANSPORT.ReadOnly = true
            Me.columnPODELIVERYAMT.ReadOnly = true
            Me.columnPAYMENTTERMS.ReadOnly = true
            Me.columnPAYMENTTERMS.MaxLength = 25
            Me.columnPOREMARKS.ReadOnly = true
            Me.columnPOREMARKS.MaxLength = 100
            Me.columnDELIVERYTERMS.ReadOnly = true
            Me.columnDELIVERYTERMS.MaxLength = 25
            Me.columnADDRESS.ReadOnly = true
            Me.columnADDRESS.MaxLength = 255
            Me.columnADDRESS2.ReadOnly = true
            Me.columnADDRESS2.MaxLength = 255
            Me.columnADDRESS3.ReadOnly = true
            Me.columnADDRESS3.MaxLength = 255
            Me.columnCITY.ReadOnly = true
            Me.columnCITY.MaxLength = 255
            Me.columnSTATE.ReadOnly = true
            Me.columnSTATE.MaxLength = 276
            Me.columnMOBILENO.ReadOnly = true
            Me.columnMOBILENO.MaxLength = 255
            Me.columnPINCODE.ReadOnly = true
            Me.columnPINCODE.MaxLength = 20
            Me.columnEMAIL.ReadOnly = true
            Me.columnEMAIL.MaxLength = 50
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.ReadOnly = true
            Me.columnITEMNAME.MaxLength = 2000
            Me.columnUOM.ReadOnly = true
            Me.columnUOM.MaxLength = 10
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnDISCOUNT.ReadOnly = true
            Me.columnVATAMT.ReadOnly = true
            Me.columnVAT.ReadOnly = true
            Me.columnTOTAL.ReadOnly = true
            Me.columnDISCAMT.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnFREEZE.ReadOnly = true
            Me.columnFREEZE.MaxLength = 2
            Me.columnADDUSER.ReadOnly = true
            Me.columnADDUSER.MaxLength = 25
            Me.columnADDDATE.ReadOnly = true
            Me.columnUPDATEUSER.ReadOnly = true
            Me.columnUPDATEUSER.MaxLength = 25
            Me.columnUPDATETIME.ReadOnly = true
            Me.columnSUBJECT.ReadOnly = true
            Me.columnSUBJECT.MaxLength = 100
            Me.columnFAX.ReadOnly = true
            Me.columnFAX.MaxLength = 20
            Me.columnCSTNO.ReadOnly = true
            Me.columnCSTNO.MaxLength = 255
            Me.columnTINNO.ReadOnly = true
            Me.columnTINNO.MaxLength = 255
            Me.columnPANNO.ReadOnly = true
            Me.columnPANNO.MaxLength = 255
            Me.columnCONTACTPERSON.ReadOnly = true
            Me.columnCONTACTPERSON.MaxLength = 25
            Me.columnPOCST.ReadOnly = true
            Me.columnPOED.ReadOnly = true
            Me.columnPOMODVAT.ReadOnly = true
            Me.columnPOPTAX.ReadOnly = true
            Me.columnPOOCTRA.ReadOnly = true
            Me.columnPOINSURANCE.ReadOnly = true
            Me.columnPOLST.ReadOnly = true
            Me.columnPOADVPERC.ReadOnly = true
            Me.columnPOSALET.ReadOnly = true
            Me.columnPOSALET.MaxLength = 100
            Me.columnPODESPMODE.ReadOnly = true
            Me.columnPODESPMODE.MaxLength = 100
            Me.columnPODOCSTHROUGH.ReadOnly = true
            Me.columnPODOCSTHROUGH.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_PO_POBILLRow() As VW_PO_POBILLRow
            Return CType(Me.NewRow,VW_PO_POBILLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_PO_POBILLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_PO_POBILLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_PO_POBILLRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILLRowChanged(Me, New VW_PO_POBILLRowChangeEvent(CType(e.Row,VW_PO_POBILLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_PO_POBILLRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILLRowChanging(Me, New VW_PO_POBILLRowChangeEvent(CType(e.Row,VW_PO_POBILLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_PO_POBILLRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILLRowDeleted(Me, New VW_PO_POBILLRowChangeEvent(CType(e.Row,VW_PO_POBILLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_PO_POBILLRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILLRowDeleting(Me, New VW_PO_POBILLRowChangeEvent(CType(e.Row,VW_PO_POBILLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_PO_POBILLRow(ByVal row As VW_PO_POBILLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_PO_POBILLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_PO_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEW_PO_REPORTRow)
        
        Private columnPONO As Global.System.Data.DataColumn
        
        Private columnPODATE As Global.System.Data.DataColumn
        
        Private columnPOVENDORCODE As Global.System.Data.DataColumn
        
        Private columnPOVALUE As Global.System.Data.DataColumn
        
        Private columnVENDORNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_PO_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POVENDORCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOVENDORCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENDORNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENDORNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_PO_REPORTRow
            Get
                Return CType(Me.Rows(index),VIEW_PO_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_PO_REPORTRowChanging As VIEW_PO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_PO_REPORTRowChanged As VIEW_PO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_PO_REPORTRowDeleting As VIEW_PO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_PO_REPORTRowDeleted As VIEW_PO_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEW_PO_REPORTRow(ByVal row As VIEW_PO_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEW_PO_REPORTRow(ByVal PONO As String, ByVal PODATE As Date, ByVal POVENDORCODE As String, ByVal POVALUE As Decimal, ByVal VENDORNAME As String) As VIEW_PO_REPORTRow
            Dim rowVIEW_PO_REPORTRow As VIEW_PO_REPORTRow = CType(Me.NewRow,VIEW_PO_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {PONO, PODATE, POVENDORCODE, POVALUE, VENDORNAME}
            rowVIEW_PO_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_PO_REPORTRow)
            Return rowVIEW_PO_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_PO_REPORTDataTable = CType(MyBase.Clone,VIEW_PO_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_PO_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPONO = MyBase.Columns("PONO")
            Me.columnPODATE = MyBase.Columns("PODATE")
            Me.columnPOVENDORCODE = MyBase.Columns("POVENDORCODE")
            Me.columnPOVALUE = MyBase.Columns("POVALUE")
            Me.columnVENDORNAME = MyBase.Columns("VENDORNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPONO = New Global.System.Data.DataColumn("PONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPONO)
            Me.columnPODATE = New Global.System.Data.DataColumn("PODATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODATE)
            Me.columnPOVENDORCODE = New Global.System.Data.DataColumn("POVENDORCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOVENDORCODE)
            Me.columnPOVALUE = New Global.System.Data.DataColumn("POVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOVALUE)
            Me.columnVENDORNAME = New Global.System.Data.DataColumn("VENDORNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENDORNAME)
            Me.columnPONO.ReadOnly = true
            Me.columnPONO.MaxLength = 25
            Me.columnPODATE.ReadOnly = true
            Me.columnPOVENDORCODE.ReadOnly = true
            Me.columnPOVENDORCODE.MaxLength = 10
            Me.columnPOVALUE.ReadOnly = true
            Me.columnVENDORNAME.ReadOnly = true
            Me.columnVENDORNAME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEW_PO_REPORTRow() As VIEW_PO_REPORTRow
            Return CType(Me.NewRow,VIEW_PO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_PO_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_PO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_PO_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_PO_REPORTRowChanged(Me, New VIEW_PO_REPORTRowChangeEvent(CType(e.Row,VIEW_PO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_PO_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_PO_REPORTRowChanging(Me, New VIEW_PO_REPORTRowChangeEvent(CType(e.Row,VIEW_PO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_PO_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_PO_REPORTRowDeleted(Me, New VIEW_PO_REPORTRowChangeEvent(CType(e.Row,VIEW_PO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_PO_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_PO_REPORTRowDeleting(Me, New VIEW_PO_REPORTRowChangeEvent(CType(e.Row,VIEW_PO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEW_PO_REPORTRow(ByVal row As VIEW_PO_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_PO_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_HO_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEW_HO_REPORTRow)
        
        Private columnGRNNO As Global.System.Data.DataColumn
        
        Private columnGRNDETAILS As Global.System.Data.DataColumn
        
        Private columnGRNDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnTOTALAMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_HO_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_HO_REPORTRow
            Get
                Return CType(Me.Rows(index),VIEW_HO_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_HO_REPORTRowChanging As VIEW_HO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_HO_REPORTRowChanged As VIEW_HO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_HO_REPORTRowDeleting As VIEW_HO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_HO_REPORTRowDeleted As VIEW_HO_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEW_HO_REPORTRow(ByVal row As VIEW_HO_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEW_HO_REPORTRow(ByVal GRNNO As String, ByVal GRNDETAILS As String, ByVal GRNDATE As Date, ByVal SUPPLIERCODE As String, ByVal SUPPLIERNAME As String, ByVal TOTALAMOUNT As Decimal) As VIEW_HO_REPORTRow
            Dim rowVIEW_HO_REPORTRow As VIEW_HO_REPORTRow = CType(Me.NewRow,VIEW_HO_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {GRNNO, GRNDETAILS, GRNDATE, SUPPLIERCODE, SUPPLIERNAME, TOTALAMOUNT}
            rowVIEW_HO_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_HO_REPORTRow)
            Return rowVIEW_HO_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_HO_REPORTDataTable = CType(MyBase.Clone,VIEW_HO_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_HO_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGRNNO = MyBase.Columns("GRNNO")
            Me.columnGRNDETAILS = MyBase.Columns("GRNDETAILS")
            Me.columnGRNDATE = MyBase.Columns("GRNDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnTOTALAMOUNT = MyBase.Columns("TOTALAMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGRNNO = New Global.System.Data.DataColumn("GRNNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNNO)
            Me.columnGRNDETAILS = New Global.System.Data.DataColumn("GRNDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDETAILS)
            Me.columnGRNDATE = New Global.System.Data.DataColumn("GRNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnTOTALAMOUNT = New Global.System.Data.DataColumn("TOTALAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALAMOUNT)
            Me.columnGRNNO.ReadOnly = true
            Me.columnGRNNO.MaxLength = 50
            Me.columnGRNDETAILS.ReadOnly = true
            Me.columnGRNDETAILS.MaxLength = 50
            Me.columnGRNDATE.ReadOnly = true
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 50
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 50
            Me.columnTOTALAMOUNT.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEW_HO_REPORTRow() As VIEW_HO_REPORTRow
            Return CType(Me.NewRow,VIEW_HO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_HO_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_HO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_HO_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_HO_REPORTRowChanged(Me, New VIEW_HO_REPORTRowChangeEvent(CType(e.Row,VIEW_HO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_HO_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_HO_REPORTRowChanging(Me, New VIEW_HO_REPORTRowChangeEvent(CType(e.Row,VIEW_HO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_HO_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_HO_REPORTRowDeleted(Me, New VIEW_HO_REPORTRowChangeEvent(CType(e.Row,VIEW_HO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_HO_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_HO_REPORTRowDeleting(Me, New VIEW_HO_REPORTRowChangeEvent(CType(e.Row,VIEW_HO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEW_HO_REPORTRow(ByVal row As VIEW_HO_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_HO_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PO_WORKINDENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PO_WORKINDENTRow)
        
        Private columnAUTOID As Global.System.Data.DataColumn
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENTDATE As Global.System.Data.DataColumn
        
        Private columnWORKDESC As Global.System.Data.DataColumn
        
        Private columnREQUESTEDBY As Global.System.Data.DataColumn
        
        Private columnINDENTSTATUS As Global.System.Data.DataColumn
        
        Private columnAPPROVEDBY As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnREMARKS As Global.System.Data.DataColumn
        
        Private columnVOID As Global.System.Data.DataColumn
        
        Private columnADDUSER As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEUSER As Global.System.Data.DataColumn
        
        Private columnUPDATEDATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PO_WORKINDENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REQUESTEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQUESTEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PO_WORKINDENTRow
            Get
                Return CType(Me.Rows(index),PO_WORKINDENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_WORKINDENTRowChanging As PO_WORKINDENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_WORKINDENTRowChanged As PO_WORKINDENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_WORKINDENTRowDeleting As PO_WORKINDENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_WORKINDENTRowDeleted As PO_WORKINDENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPO_WORKINDENTRow(ByVal row As PO_WORKINDENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPO_WORKINDENTRow(ByVal INDENT_NO As String, ByVal INDENTDATE As Date, ByVal WORKDESC As String, ByVal REQUESTEDBY As String, ByVal INDENTSTATUS As String, ByVal APPROVEDBY As String, ByVal COMPLETIONDATE As Date, ByVal SUPPLIERCODE As String, ByVal SUPPLIERNAME As String, ByVal REMARKS As String, ByVal VOID As String, ByVal ADDUSER As String, ByVal ADDDATE As Date, ByVal UPDATEUSER As String, ByVal UPDATEDATE As Date) As PO_WORKINDENTRow
            Dim rowPO_WORKINDENTRow As PO_WORKINDENTRow = CType(Me.NewRow,PO_WORKINDENTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, INDENT_NO, INDENTDATE, WORKDESC, REQUESTEDBY, INDENTSTATUS, APPROVEDBY, COMPLETIONDATE, SUPPLIERCODE, SUPPLIERNAME, REMARKS, VOID, ADDUSER, ADDDATE, UPDATEUSER, UPDATEDATE}
            rowPO_WORKINDENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPO_WORKINDENTRow)
            Return rowPO_WORKINDENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PO_WORKINDENTDataTable = CType(MyBase.Clone,PO_WORKINDENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PO_WORKINDENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAUTOID = MyBase.Columns("AUTOID")
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENTDATE = MyBase.Columns("INDENTDATE")
            Me.columnWORKDESC = MyBase.Columns("WORKDESC")
            Me.columnREQUESTEDBY = MyBase.Columns("REQUESTEDBY")
            Me.columnINDENTSTATUS = MyBase.Columns("INDENTSTATUS")
            Me.columnAPPROVEDBY = MyBase.Columns("APPROVEDBY")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnREMARKS = MyBase.Columns("REMARKS")
            Me.columnVOID = MyBase.Columns("VOID")
            Me.columnADDUSER = MyBase.Columns("ADDUSER")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnUPDATEUSER = MyBase.Columns("UPDATEUSER")
            Me.columnUPDATEDATE = MyBase.Columns("UPDATEDATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAUTOID = New Global.System.Data.DataColumn("AUTOID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTOID)
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENTDATE = New Global.System.Data.DataColumn("INDENTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTDATE)
            Me.columnWORKDESC = New Global.System.Data.DataColumn("WORKDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKDESC)
            Me.columnREQUESTEDBY = New Global.System.Data.DataColumn("REQUESTEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQUESTEDBY)
            Me.columnINDENTSTATUS = New Global.System.Data.DataColumn("INDENTSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTSTATUS)
            Me.columnAPPROVEDBY = New Global.System.Data.DataColumn("APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDBY)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnREMARKS = New Global.System.Data.DataColumn("REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS)
            Me.columnVOID = New Global.System.Data.DataColumn("VOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOID)
            Me.columnADDUSER = New Global.System.Data.DataColumn("ADDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDUSER)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnUPDATEUSER = New Global.System.Data.DataColumn("UPDATEUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEUSER)
            Me.columnUPDATEDATE = New Global.System.Data.DataColumn("UPDATEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEDATE)
            Me.columnAUTOID.AutoIncrement = true
            Me.columnAUTOID.AutoIncrementSeed = -1
            Me.columnAUTOID.AutoIncrementStep = -1
            Me.columnAUTOID.AllowDBNull = false
            Me.columnAUTOID.ReadOnly = true
            Me.columnINDENT_NO.MaxLength = 20
            Me.columnWORKDESC.MaxLength = 1000
            Me.columnREQUESTEDBY.MaxLength = 50
            Me.columnINDENTSTATUS.MaxLength = 50
            Me.columnAPPROVEDBY.MaxLength = 50
            Me.columnSUPPLIERCODE.MaxLength = 50
            Me.columnSUPPLIERNAME.MaxLength = 50
            Me.columnREMARKS.MaxLength = 50
            Me.columnVOID.MaxLength = 1
            Me.columnADDUSER.MaxLength = 50
            Me.columnUPDATEUSER.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPO_WORKINDENTRow() As PO_WORKINDENTRow
            Return CType(Me.NewRow,PO_WORKINDENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PO_WORKINDENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PO_WORKINDENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PO_WORKINDENTRowChangedEvent) Is Nothing) Then
                RaiseEvent PO_WORKINDENTRowChanged(Me, New PO_WORKINDENTRowChangeEvent(CType(e.Row,PO_WORKINDENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PO_WORKINDENTRowChangingEvent) Is Nothing) Then
                RaiseEvent PO_WORKINDENTRowChanging(Me, New PO_WORKINDENTRowChangeEvent(CType(e.Row,PO_WORKINDENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PO_WORKINDENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PO_WORKINDENTRowDeleted(Me, New PO_WORKINDENTRowChangeEvent(CType(e.Row,PO_WORKINDENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PO_WORKINDENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PO_WORKINDENTRowDeleting(Me, New PO_WORKINDENTRowChangeEvent(CType(e.Row,PO_WORKINDENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePO_WORKINDENTRow(ByVal row As PO_WORKINDENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PO_WORKINDENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_POPRINT_RPTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_POPRINT_RPTRow)
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnautoid As Global.System.Data.DataColumn
        
        Private columnPONO As Global.System.Data.DataColumn
        
        Private columnPODATE As Global.System.Data.DataColumn
        
        Private columnCATEGORY As Global.System.Data.DataColumn
        
        Private columnINDENTNO As Global.System.Data.DataColumn
        
        Private columnINDENTDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnAUTH_DOCNO As Global.System.Data.DataColumn
        
        Private columnQUOTNO As Global.System.Data.DataColumn
        
        Private columnDEPARTMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVEDBY As Global.System.Data.DataColumn
        
        Private columnPOSTATUS As Global.System.Data.DataColumn
        
        Private columnPOTOTAL As Global.System.Data.DataColumn
        
        Private columnTOT_VAT As Global.System.Data.DataColumn
        
        Private columnTOT_TAX As Global.System.Data.DataColumn
        
        Private columnTOT_DISCOUNT As Global.System.Data.DataColumn
        
        Private columnADVANCE As Global.System.Data.DataColumn
        
        Private columnoveralldisc As Global.System.Data.DataColumn
        
        Private columnPOCF As Global.System.Data.DataColumn
        
        Private columnPOTRANSPORT As Global.System.Data.DataColumn
        
        Private columnPODELIVERYAMT As Global.System.Data.DataColumn
        
        Private columnPAYMENTTERMS As Global.System.Data.DataColumn
        
        Private columnPOREMARKS As Global.System.Data.DataColumn
        
        Private columnDELIVERYTERMS As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnDISCOUNT As Global.System.Data.DataColumn
        
        Private columnVATAMT As Global.System.Data.DataColumn
        
        Private columnVAT As Global.System.Data.DataColumn
        
        Private columnTOTAL As Global.System.Data.DataColumn
        
        Private columnDISCAMT As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnAMOUNT1 As Global.System.Data.DataColumn
        
        Private columnFREEZE As Global.System.Data.DataColumn
        
        Private columnADDUSER As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnUPDATEUSER As Global.System.Data.DataColumn
        
        Private columnUPDATETIME As Global.System.Data.DataColumn
        
        Private columnSUBJECT As Global.System.Data.DataColumn
        
        Private columnPOCST As Global.System.Data.DataColumn
        
        Private columnPOED As Global.System.Data.DataColumn
        
        Private columnPOMODVAT As Global.System.Data.DataColumn
        
        Private columnPOPTAX As Global.System.Data.DataColumn
        
        Private columnPOOCTRA As Global.System.Data.DataColumn
        
        Private columnPOINSURANCE As Global.System.Data.DataColumn
        
        Private columnPOLST As Global.System.Data.DataColumn
        
        Private columnPOADVPERC As Global.System.Data.DataColumn
        
        Private columnPOSALET As Global.System.Data.DataColumn
        
        Private columnPODESPMODE As Global.System.Data.DataColumn
        
        Private columnPODOCSTHROUGH As Global.System.Data.DataColumn
        
        Private columnED As Global.System.Data.DataColumn
        
        Private columnCST As Global.System.Data.DataColumn
        
        Private columnMODVATVAL As Global.System.Data.DataColumn
        
        Private columnquot_date As Global.System.Data.DataColumn
        
        Private columnpoquotno As Global.System.Data.DataColumn
        
        Private columnser_Ch As Global.System.Data.DataColumn
        
        Private columnWARRANTY As Global.System.Data.DataColumn
        
        Private columnDELIVERYTERMDESC As Global.System.Data.DataColumn
        
        Private columnPAYMENTTERMDESC As Global.System.Data.DataColumn
        
        Private columnvendorcode As Global.System.Data.DataColumn
        
        Private columnvendorname As Global.System.Data.DataColumn
        
        Private columnaddress1 As Global.System.Data.DataColumn
        
        Private columnaddress2 As Global.System.Data.DataColumn
        
        Private columnaddress3 As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnpincode As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnphone1 As Global.System.Data.DataColumn
        
        Private columnphone2 As Global.System.Data.DataColumn
        
        Private columnfax As Global.System.Data.DataColumn
        
        Private columncontactperson As Global.System.Data.DataColumn
        
        Private columntinno As Global.System.Data.DataColumn
        
        Private columnpanno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_POPRINT_RPT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property autoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnautoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTH_DOCNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTH_DOCNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUOTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUOTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEPARTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_VATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_VAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_TAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOT_DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_DISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADVANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADVANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property overalldiscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoveralldisc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POCFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POTRANSPORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTRANSPORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODELIVERYAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODELIVERYAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAYMENTTERMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTTERMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POREMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELIVERYTERMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIVERYTERMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVATAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FREEZEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREEZE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATEUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATEUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBJECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBJECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POCSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOCST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POMODVATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOMODVAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POPTAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOPTAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POOCTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOCTRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POINSURANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOINSURANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POLSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOLST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POADVPERCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOADVPERC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSALETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSALET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODESPMODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODESPMODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODOCSTHROUGHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODOCSTHROUGH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODVATVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODVATVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quot_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquot_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property poquotnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoquotno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ser_ChColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnser_Ch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WARRANTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWARRANTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DELIVERYTERMDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDELIVERYTERMDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAYMENTTERMDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTTERMDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendorcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pincodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpincode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property phone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property phone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactpersonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactperson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tinnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntinno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pannoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpanno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_POPRINT_RPTRow
            Get
                Return CType(Me.Rows(index),VW_POPRINT_RPTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_POPRINT_RPTRowChanging As VW_POPRINT_RPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_POPRINT_RPTRowChanged As VW_POPRINT_RPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_POPRINT_RPTRowDeleting As VW_POPRINT_RPTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_POPRINT_RPTRowDeleted As VW_POPRINT_RPTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_POPRINT_RPTRow(ByVal row As VW_POPRINT_RPTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_POPRINT_RPTRow( _
                    ByVal ITEMCODE As String,  _
                    ByVal autoid As Decimal,  _
                    ByVal PONO As String,  _
                    ByVal PODATE As Date,  _
                    ByVal CATEGORY As String,  _
                    ByVal INDENTNO As String,  _
                    ByVal INDENTDATE As Date,  _
                    ByVal SUPPLIERCODE As String,  _
                    ByVal SUPPLIERNAME As String,  _
                    ByVal AUTH_DOCNO As String,  _
                    ByVal QUOTNO As String,  _
                    ByVal DEPARTMENT As String,  _
                    ByVal APPROVEDBY As String,  _
                    ByVal POSTATUS As String,  _
                    ByVal POTOTAL As Decimal,  _
                    ByVal TOT_VAT As Decimal,  _
                    ByVal TOT_TAX As Decimal,  _
                    ByVal TOT_DISCOUNT As Decimal,  _
                    ByVal ADVANCE As Decimal,  _
                    ByVal overalldisc As Decimal,  _
                    ByVal POCF As Decimal,  _
                    ByVal POTRANSPORT As Decimal,  _
                    ByVal PODELIVERYAMT As Decimal,  _
                    ByVal PAYMENTTERMS As String,  _
                    ByVal POREMARKS As String,  _
                    ByVal DELIVERYTERMS As String,  _
                    ByVal ITEMNAME As String,  _
                    ByVal UOM As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal RATE As Decimal,  _
                    ByVal DISCOUNT As Decimal,  _
                    ByVal VATAMT As Decimal,  _
                    ByVal VAT As Decimal,  _
                    ByVal TOTAL As Decimal,  _
                    ByVal DISCAMT As Decimal,  _
                    ByVal AMOUNT As Decimal,  _
                    ByVal AMOUNT1 As Decimal,  _
                    ByVal FREEZE As String,  _
                    ByVal ADDUSER As String,  _
                    ByVal ADDDATE As Date,  _
                    ByVal UPDATEUSER As String,  _
                    ByVal UPDATETIME As Date,  _
                    ByVal SUBJECT As String,  _
                    ByVal POCST As Decimal,  _
                    ByVal POED As Decimal,  _
                    ByVal POMODVAT As Decimal,  _
                    ByVal POPTAX As Decimal,  _
                    ByVal POOCTRA As Decimal,  _
                    ByVal POINSURANCE As Decimal,  _
                    ByVal POLST As Decimal,  _
                    ByVal POADVPERC As Decimal,  _
                    ByVal POSALET As String,  _
                    ByVal PODESPMODE As String,  _
                    ByVal PODOCSTHROUGH As String,  _
                    ByVal ED As Decimal,  _
                    ByVal CST As Decimal,  _
                    ByVal MODVATVAL As Decimal,  _
                    ByVal quot_date As Date,  _
                    ByVal poquotno As String,  _
                    ByVal ser_Ch As String,  _
                    ByVal WARRANTY As String,  _
                    ByVal DELIVERYTERMDESC As String,  _
                    ByVal PAYMENTTERMDESC As String,  _
                    ByVal vendorcode As String,  _
                    ByVal vendorname As String,  _
                    ByVal address1 As String,  _
                    ByVal address2 As String,  _
                    ByVal address3 As String,  _
                    ByVal city As String,  _
                    ByVal pincode As String,  _
                    ByVal email As String,  _
                    ByVal phone1 As String,  _
                    ByVal phone2 As String,  _
                    ByVal fax As String,  _
                    ByVal contactperson As String,  _
                    ByVal tinno As String,  _
                    ByVal panno As String) As VW_POPRINT_RPTRow
            Dim rowVW_POPRINT_RPTRow As VW_POPRINT_RPTRow = CType(Me.NewRow,VW_POPRINT_RPTRow)
            Dim columnValuesArray() As Object = New Object() {ITEMCODE, autoid, PONO, PODATE, CATEGORY, INDENTNO, INDENTDATE, SUPPLIERCODE, SUPPLIERNAME, AUTH_DOCNO, QUOTNO, DEPARTMENT, APPROVEDBY, POSTATUS, POTOTAL, TOT_VAT, TOT_TAX, TOT_DISCOUNT, ADVANCE, overalldisc, POCF, POTRANSPORT, PODELIVERYAMT, PAYMENTTERMS, POREMARKS, DELIVERYTERMS, ITEMNAME, UOM, QTY, RATE, DISCOUNT, VATAMT, VAT, TOTAL, DISCAMT, AMOUNT, AMOUNT1, FREEZE, ADDUSER, ADDDATE, UPDATEUSER, UPDATETIME, SUBJECT, POCST, POED, POMODVAT, POPTAX, POOCTRA, POINSURANCE, POLST, POADVPERC, POSALET, PODESPMODE, PODOCSTHROUGH, ED, CST, MODVATVAL, quot_date, poquotno, ser_Ch, WARRANTY, DELIVERYTERMDESC, PAYMENTTERMDESC, vendorcode, vendorname, address1, address2, address3, city, pincode, email, phone1, phone2, fax, contactperson, tinno, panno}
            rowVW_POPRINT_RPTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_POPRINT_RPTRow)
            Return rowVW_POPRINT_RPTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_POPRINT_RPTDataTable = CType(MyBase.Clone,VW_POPRINT_RPTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_POPRINT_RPTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnautoid = MyBase.Columns("autoid")
            Me.columnPONO = MyBase.Columns("PONO")
            Me.columnPODATE = MyBase.Columns("PODATE")
            Me.columnCATEGORY = MyBase.Columns("CATEGORY")
            Me.columnINDENTNO = MyBase.Columns("INDENTNO")
            Me.columnINDENTDATE = MyBase.Columns("INDENTDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnAUTH_DOCNO = MyBase.Columns("AUTH_DOCNO")
            Me.columnQUOTNO = MyBase.Columns("QUOTNO")
            Me.columnDEPARTMENT = MyBase.Columns("DEPARTMENT")
            Me.columnAPPROVEDBY = MyBase.Columns("APPROVEDBY")
            Me.columnPOSTATUS = MyBase.Columns("POSTATUS")
            Me.columnPOTOTAL = MyBase.Columns("POTOTAL")
            Me.columnTOT_VAT = MyBase.Columns("TOT_VAT")
            Me.columnTOT_TAX = MyBase.Columns("TOT_TAX")
            Me.columnTOT_DISCOUNT = MyBase.Columns("TOT_DISCOUNT")
            Me.columnADVANCE = MyBase.Columns("ADVANCE")
            Me.columnoveralldisc = MyBase.Columns("overalldisc")
            Me.columnPOCF = MyBase.Columns("POCF")
            Me.columnPOTRANSPORT = MyBase.Columns("POTRANSPORT")
            Me.columnPODELIVERYAMT = MyBase.Columns("PODELIVERYAMT")
            Me.columnPAYMENTTERMS = MyBase.Columns("PAYMENTTERMS")
            Me.columnPOREMARKS = MyBase.Columns("POREMARKS")
            Me.columnDELIVERYTERMS = MyBase.Columns("DELIVERYTERMS")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnDISCOUNT = MyBase.Columns("DISCOUNT")
            Me.columnVATAMT = MyBase.Columns("VATAMT")
            Me.columnVAT = MyBase.Columns("VAT")
            Me.columnTOTAL = MyBase.Columns("TOTAL")
            Me.columnDISCAMT = MyBase.Columns("DISCAMT")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnAMOUNT1 = MyBase.Columns("AMOUNT1")
            Me.columnFREEZE = MyBase.Columns("FREEZE")
            Me.columnADDUSER = MyBase.Columns("ADDUSER")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnUPDATEUSER = MyBase.Columns("UPDATEUSER")
            Me.columnUPDATETIME = MyBase.Columns("UPDATETIME")
            Me.columnSUBJECT = MyBase.Columns("SUBJECT")
            Me.columnPOCST = MyBase.Columns("POCST")
            Me.columnPOED = MyBase.Columns("POED")
            Me.columnPOMODVAT = MyBase.Columns("POMODVAT")
            Me.columnPOPTAX = MyBase.Columns("POPTAX")
            Me.columnPOOCTRA = MyBase.Columns("POOCTRA")
            Me.columnPOINSURANCE = MyBase.Columns("POINSURANCE")
            Me.columnPOLST = MyBase.Columns("POLST")
            Me.columnPOADVPERC = MyBase.Columns("POADVPERC")
            Me.columnPOSALET = MyBase.Columns("POSALET")
            Me.columnPODESPMODE = MyBase.Columns("PODESPMODE")
            Me.columnPODOCSTHROUGH = MyBase.Columns("PODOCSTHROUGH")
            Me.columnED = MyBase.Columns("ED")
            Me.columnCST = MyBase.Columns("CST")
            Me.columnMODVATVAL = MyBase.Columns("MODVATVAL")
            Me.columnquot_date = MyBase.Columns("quot_date")
            Me.columnpoquotno = MyBase.Columns("poquotno")
            Me.columnser_Ch = MyBase.Columns("ser_Ch")
            Me.columnWARRANTY = MyBase.Columns("WARRANTY")
            Me.columnDELIVERYTERMDESC = MyBase.Columns("DELIVERYTERMDESC")
            Me.columnPAYMENTTERMDESC = MyBase.Columns("PAYMENTTERMDESC")
            Me.columnvendorcode = MyBase.Columns("vendorcode")
            Me.columnvendorname = MyBase.Columns("vendorname")
            Me.columnaddress1 = MyBase.Columns("address1")
            Me.columnaddress2 = MyBase.Columns("address2")
            Me.columnaddress3 = MyBase.Columns("address3")
            Me.columncity = MyBase.Columns("city")
            Me.columnpincode = MyBase.Columns("pincode")
            Me.columnemail = MyBase.Columns("email")
            Me.columnphone1 = MyBase.Columns("phone1")
            Me.columnphone2 = MyBase.Columns("phone2")
            Me.columnfax = MyBase.Columns("fax")
            Me.columncontactperson = MyBase.Columns("contactperson")
            Me.columntinno = MyBase.Columns("tinno")
            Me.columnpanno = MyBase.Columns("panno")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnautoid = New Global.System.Data.DataColumn("autoid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnautoid)
            Me.columnPONO = New Global.System.Data.DataColumn("PONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPONO)
            Me.columnPODATE = New Global.System.Data.DataColumn("PODATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODATE)
            Me.columnCATEGORY = New Global.System.Data.DataColumn("CATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORY)
            Me.columnINDENTNO = New Global.System.Data.DataColumn("INDENTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTNO)
            Me.columnINDENTDATE = New Global.System.Data.DataColumn("INDENTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnAUTH_DOCNO = New Global.System.Data.DataColumn("AUTH_DOCNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTH_DOCNO)
            Me.columnQUOTNO = New Global.System.Data.DataColumn("QUOTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUOTNO)
            Me.columnDEPARTMENT = New Global.System.Data.DataColumn("DEPARTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTMENT)
            Me.columnAPPROVEDBY = New Global.System.Data.DataColumn("APPROVEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVEDBY)
            Me.columnPOSTATUS = New Global.System.Data.DataColumn("POSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTATUS)
            Me.columnPOTOTAL = New Global.System.Data.DataColumn("POTOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTOTAL)
            Me.columnTOT_VAT = New Global.System.Data.DataColumn("TOT_VAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_VAT)
            Me.columnTOT_TAX = New Global.System.Data.DataColumn("TOT_TAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_TAX)
            Me.columnTOT_DISCOUNT = New Global.System.Data.DataColumn("TOT_DISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_DISCOUNT)
            Me.columnADVANCE = New Global.System.Data.DataColumn("ADVANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADVANCE)
            Me.columnoveralldisc = New Global.System.Data.DataColumn("overalldisc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoveralldisc)
            Me.columnPOCF = New Global.System.Data.DataColumn("POCF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCF)
            Me.columnPOTRANSPORT = New Global.System.Data.DataColumn("POTRANSPORT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTRANSPORT)
            Me.columnPODELIVERYAMT = New Global.System.Data.DataColumn("PODELIVERYAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODELIVERYAMT)
            Me.columnPAYMENTTERMS = New Global.System.Data.DataColumn("PAYMENTTERMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTTERMS)
            Me.columnPOREMARKS = New Global.System.Data.DataColumn("POREMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOREMARKS)
            Me.columnDELIVERYTERMS = New Global.System.Data.DataColumn("DELIVERYTERMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIVERYTERMS)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnDISCOUNT = New Global.System.Data.DataColumn("DISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNT)
            Me.columnVATAMT = New Global.System.Data.DataColumn("VATAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVATAMT)
            Me.columnVAT = New Global.System.Data.DataColumn("VAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT)
            Me.columnTOTAL = New Global.System.Data.DataColumn("TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL)
            Me.columnDISCAMT = New Global.System.Data.DataColumn("DISCAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCAMT)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnAMOUNT1 = New Global.System.Data.DataColumn("AMOUNT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT1)
            Me.columnFREEZE = New Global.System.Data.DataColumn("FREEZE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREEZE)
            Me.columnADDUSER = New Global.System.Data.DataColumn("ADDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDUSER)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnUPDATEUSER = New Global.System.Data.DataColumn("UPDATEUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATEUSER)
            Me.columnUPDATETIME = New Global.System.Data.DataColumn("UPDATETIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATETIME)
            Me.columnSUBJECT = New Global.System.Data.DataColumn("SUBJECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBJECT)
            Me.columnPOCST = New Global.System.Data.DataColumn("POCST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOCST)
            Me.columnPOED = New Global.System.Data.DataColumn("POED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOED)
            Me.columnPOMODVAT = New Global.System.Data.DataColumn("POMODVAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOMODVAT)
            Me.columnPOPTAX = New Global.System.Data.DataColumn("POPTAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOPTAX)
            Me.columnPOOCTRA = New Global.System.Data.DataColumn("POOCTRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOCTRA)
            Me.columnPOINSURANCE = New Global.System.Data.DataColumn("POINSURANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOINSURANCE)
            Me.columnPOLST = New Global.System.Data.DataColumn("POLST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOLST)
            Me.columnPOADVPERC = New Global.System.Data.DataColumn("POADVPERC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOADVPERC)
            Me.columnPOSALET = New Global.System.Data.DataColumn("POSALET", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSALET)
            Me.columnPODESPMODE = New Global.System.Data.DataColumn("PODESPMODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODESPMODE)
            Me.columnPODOCSTHROUGH = New Global.System.Data.DataColumn("PODOCSTHROUGH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODOCSTHROUGH)
            Me.columnED = New Global.System.Data.DataColumn("ED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED)
            Me.columnCST = New Global.System.Data.DataColumn("CST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST)
            Me.columnMODVATVAL = New Global.System.Data.DataColumn("MODVATVAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODVATVAL)
            Me.columnquot_date = New Global.System.Data.DataColumn("quot_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquot_date)
            Me.columnpoquotno = New Global.System.Data.DataColumn("poquotno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoquotno)
            Me.columnser_Ch = New Global.System.Data.DataColumn("ser_Ch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnser_Ch)
            Me.columnWARRANTY = New Global.System.Data.DataColumn("WARRANTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWARRANTY)
            Me.columnDELIVERYTERMDESC = New Global.System.Data.DataColumn("DELIVERYTERMDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDELIVERYTERMDESC)
            Me.columnPAYMENTTERMDESC = New Global.System.Data.DataColumn("PAYMENTTERMDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTTERMDESC)
            Me.columnvendorcode = New Global.System.Data.DataColumn("vendorcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorcode)
            Me.columnvendorname = New Global.System.Data.DataColumn("vendorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorname)
            Me.columnaddress1 = New Global.System.Data.DataColumn("address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress1)
            Me.columnaddress2 = New Global.System.Data.DataColumn("address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress2)
            Me.columnaddress3 = New Global.System.Data.DataColumn("address3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress3)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnpincode = New Global.System.Data.DataColumn("pincode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpincode)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnphone1 = New Global.System.Data.DataColumn("phone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone1)
            Me.columnphone2 = New Global.System.Data.DataColumn("phone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone2)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columncontactperson = New Global.System.Data.DataColumn("contactperson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactperson)
            Me.columntinno = New Global.System.Data.DataColumn("tinno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntinno)
            Me.columnpanno = New Global.System.Data.DataColumn("panno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpanno)
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMCODE.MaxLength = 10
            Me.columnautoid.AllowDBNull = false
            Me.columnPONO.ReadOnly = true
            Me.columnPONO.MaxLength = 25
            Me.columnCATEGORY.ReadOnly = true
            Me.columnCATEGORY.MaxLength = 50
            Me.columnINDENTNO.ReadOnly = true
            Me.columnINDENTNO.MaxLength = 50
            Me.columnINDENTDATE.ReadOnly = true
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 10
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 500
            Me.columnAUTH_DOCNO.ReadOnly = true
            Me.columnAUTH_DOCNO.MaxLength = 20
            Me.columnQUOTNO.ReadOnly = true
            Me.columnQUOTNO.MaxLength = 10
            Me.columnDEPARTMENT.ReadOnly = true
            Me.columnDEPARTMENT.MaxLength = 40
            Me.columnAPPROVEDBY.ReadOnly = true
            Me.columnAPPROVEDBY.MaxLength = 25
            Me.columnPOSTATUS.ReadOnly = true
            Me.columnPOSTATUS.MaxLength = 25
            Me.columnPOTOTAL.ReadOnly = true
            Me.columnTOT_VAT.ReadOnly = true
            Me.columnTOT_TAX.ReadOnly = true
            Me.columnTOT_DISCOUNT.ReadOnly = true
            Me.columnADVANCE.ReadOnly = true
            Me.columnoveralldisc.ReadOnly = true
            Me.columnPOCF.ReadOnly = true
            Me.columnPOTRANSPORT.ReadOnly = true
            Me.columnPODELIVERYAMT.ReadOnly = true
            Me.columnPAYMENTTERMS.ReadOnly = true
            Me.columnPAYMENTTERMS.MaxLength = 200
            Me.columnPOREMARKS.ReadOnly = true
            Me.columnPOREMARKS.MaxLength = 300
            Me.columnDELIVERYTERMS.ReadOnly = true
            Me.columnDELIVERYTERMS.MaxLength = 200
            Me.columnITEMNAME.ReadOnly = true
            Me.columnITEMNAME.MaxLength = 5000
            Me.columnUOM.ReadOnly = true
            Me.columnUOM.MaxLength = 10
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnDISCOUNT.ReadOnly = true
            Me.columnVATAMT.ReadOnly = true
            Me.columnVAT.ReadOnly = true
            Me.columnTOTAL.ReadOnly = true
            Me.columnDISCAMT.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnAMOUNT1.ReadOnly = true
            Me.columnFREEZE.ReadOnly = true
            Me.columnFREEZE.MaxLength = 2
            Me.columnADDUSER.ReadOnly = true
            Me.columnADDUSER.MaxLength = 25
            Me.columnADDDATE.ReadOnly = true
            Me.columnUPDATEUSER.ReadOnly = true
            Me.columnUPDATEUSER.MaxLength = 25
            Me.columnUPDATETIME.ReadOnly = true
            Me.columnSUBJECT.ReadOnly = true
            Me.columnSUBJECT.MaxLength = 250
            Me.columnPOCST.ReadOnly = true
            Me.columnPOED.ReadOnly = true
            Me.columnPOMODVAT.ReadOnly = true
            Me.columnPOPTAX.ReadOnly = true
            Me.columnPOOCTRA.ReadOnly = true
            Me.columnPOINSURANCE.ReadOnly = true
            Me.columnPOLST.ReadOnly = true
            Me.columnPOADVPERC.ReadOnly = true
            Me.columnPOSALET.ReadOnly = true
            Me.columnPOSALET.MaxLength = 100
            Me.columnPODESPMODE.ReadOnly = true
            Me.columnPODESPMODE.MaxLength = 100
            Me.columnPODOCSTHROUGH.ReadOnly = true
            Me.columnPODOCSTHROUGH.MaxLength = 100
            Me.columnED.ReadOnly = true
            Me.columnCST.ReadOnly = true
            Me.columnMODVATVAL.ReadOnly = true
            Me.columnquot_date.ReadOnly = true
            Me.columnpoquotno.ReadOnly = true
            Me.columnpoquotno.MaxLength = 10
            Me.columnser_Ch.ReadOnly = true
            Me.columnser_Ch.MaxLength = 20
            Me.columnWARRANTY.ReadOnly = true
            Me.columnWARRANTY.MaxLength = 300
            Me.columnDELIVERYTERMDESC.ReadOnly = true
            Me.columnDELIVERYTERMDESC.MaxLength = 200
            Me.columnPAYMENTTERMDESC.ReadOnly = true
            Me.columnPAYMENTTERMDESC.MaxLength = 100
            Me.columnvendorcode.AllowDBNull = false
            Me.columnvendorcode.MaxLength = 255
            Me.columnvendorname.AllowDBNull = false
            Me.columnvendorname.MaxLength = 500
            Me.columnaddress1.AllowDBNull = false
            Me.columnaddress1.MaxLength = 255
            Me.columnaddress2.AllowDBNull = false
            Me.columnaddress2.MaxLength = 255
            Me.columnaddress3.AllowDBNull = false
            Me.columnaddress3.MaxLength = 255
            Me.columncity.AllowDBNull = false
            Me.columncity.MaxLength = 255
            Me.columnpincode.AllowDBNull = false
            Me.columnpincode.MaxLength = 20
            Me.columnemail.AllowDBNull = false
            Me.columnemail.MaxLength = 500
            Me.columnphone1.AllowDBNull = false
            Me.columnphone1.MaxLength = 255
            Me.columnphone2.AllowDBNull = false
            Me.columnphone2.MaxLength = 50
            Me.columnfax.AllowDBNull = false
            Me.columnfax.MaxLength = 255
            Me.columncontactperson.AllowDBNull = false
            Me.columncontactperson.MaxLength = 255
            Me.columntinno.AllowDBNull = false
            Me.columntinno.MaxLength = 255
            Me.columnpanno.AllowDBNull = false
            Me.columnpanno.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_POPRINT_RPTRow() As VW_POPRINT_RPTRow
            Return CType(Me.NewRow,VW_POPRINT_RPTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_POPRINT_RPTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_POPRINT_RPTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_POPRINT_RPTRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_POPRINT_RPTRowChanged(Me, New VW_POPRINT_RPTRowChangeEvent(CType(e.Row,VW_POPRINT_RPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_POPRINT_RPTRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_POPRINT_RPTRowChanging(Me, New VW_POPRINT_RPTRowChangeEvent(CType(e.Row,VW_POPRINT_RPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_POPRINT_RPTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_POPRINT_RPTRowDeleted(Me, New VW_POPRINT_RPTRowChangeEvent(CType(e.Row,VW_POPRINT_RPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_POPRINT_RPTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_POPRINT_RPTRowDeleting(Me, New VW_POPRINT_RPTRowChangeEvent(CType(e.Row,VW_POPRINT_RPTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_POPRINT_RPTRow(ByVal row As VW_POPRINT_RPTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_POPRINT_RPTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_PO_POBILL_DETDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_PO_POBILL_DETRow)
        
        Private columnpono As Global.System.Data.DataColumn
        
        Private columnpodate As Global.System.Data.DataColumn
        
        Private columnTaxDesc As Global.System.Data.DataColumn
        
        Private columntaxper As Global.System.Data.DataColumn
        
        Private columnTaxamt As Global.System.Data.DataColumn
        
        Private columnTorder As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_PO_POBILL_DET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ponoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property taxperColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntaxper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TorderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTorder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_PO_POBILL_DETRow
            Get
                Return CType(Me.Rows(index),VW_PO_POBILL_DETRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILL_DETRowChanging As VW_PO_POBILL_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILL_DETRowChanged As VW_PO_POBILL_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILL_DETRowDeleting As VW_PO_POBILL_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_POBILL_DETRowDeleted As VW_PO_POBILL_DETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_PO_POBILL_DETRow(ByVal row As VW_PO_POBILL_DETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_PO_POBILL_DETRow(ByVal pono As String, ByVal podate As Date, ByVal TaxDesc As String, ByVal taxper As Decimal, ByVal Taxamt As Decimal, ByVal Torder As Integer) As VW_PO_POBILL_DETRow
            Dim rowVW_PO_POBILL_DETRow As VW_PO_POBILL_DETRow = CType(Me.NewRow,VW_PO_POBILL_DETRow)
            Dim columnValuesArray() As Object = New Object() {pono, podate, TaxDesc, taxper, Taxamt, Torder}
            rowVW_PO_POBILL_DETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_PO_POBILL_DETRow)
            Return rowVW_PO_POBILL_DETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_PO_POBILL_DETDataTable = CType(MyBase.Clone,VW_PO_POBILL_DETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_PO_POBILL_DETDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpono = MyBase.Columns("pono")
            Me.columnpodate = MyBase.Columns("podate")
            Me.columnTaxDesc = MyBase.Columns("TaxDesc")
            Me.columntaxper = MyBase.Columns("taxper")
            Me.columnTaxamt = MyBase.Columns("Taxamt")
            Me.columnTorder = MyBase.Columns("Torder")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpono = New Global.System.Data.DataColumn("pono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpono)
            Me.columnpodate = New Global.System.Data.DataColumn("podate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodate)
            Me.columnTaxDesc = New Global.System.Data.DataColumn("TaxDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxDesc)
            Me.columntaxper = New Global.System.Data.DataColumn("taxper", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntaxper)
            Me.columnTaxamt = New Global.System.Data.DataColumn("Taxamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxamt)
            Me.columnTorder = New Global.System.Data.DataColumn("Torder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTorder)
            Me.columnpono.AllowDBNull = false
            Me.columnpono.MaxLength = 25
            Me.columnTaxDesc.MaxLength = 29
            Me.columntaxper.AllowDBNull = false
            Me.columnTorder.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_PO_POBILL_DETRow() As VW_PO_POBILL_DETRow
            Return CType(Me.NewRow,VW_PO_POBILL_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_PO_POBILL_DETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_PO_POBILL_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_PO_POBILL_DETRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILL_DETRowChanged(Me, New VW_PO_POBILL_DETRowChangeEvent(CType(e.Row,VW_PO_POBILL_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_PO_POBILL_DETRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILL_DETRowChanging(Me, New VW_PO_POBILL_DETRowChangeEvent(CType(e.Row,VW_PO_POBILL_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_PO_POBILL_DETRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILL_DETRowDeleted(Me, New VW_PO_POBILL_DETRowChangeEvent(CType(e.Row,VW_PO_POBILL_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_PO_POBILL_DETRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_PO_POBILL_DETRowDeleting(Me, New VW_PO_POBILL_DETRowChangeEvent(CType(e.Row,VW_PO_POBILL_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_PO_POBILL_DETRow(ByVal row As VW_PO_POBILL_DETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_PO_POBILL_DETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_pending_authDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_pending_authRow)
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENT_DATE As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnfromStoreCode As Global.System.Data.DataColumn
        
        Private columnSTORELOCATIONNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_pending_auth"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fromStoreCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfromStoreCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORELOCATIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORELOCATIONNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_pending_authRow
            Get
                Return CType(Me.Rows(index),Vw_pending_authRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_pending_authRowChanging As Vw_pending_authRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_pending_authRowChanged As Vw_pending_authRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_pending_authRowDeleting As Vw_pending_authRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_pending_authRowDeleted As Vw_pending_authRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_pending_authRow(ByVal row As Vw_pending_authRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_pending_authRow(ByVal INDENT_NO As String, ByVal INDENT_DATE As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal QTY As Decimal, ByVal fromStoreCode As String, ByVal STORELOCATIONNAME As String) As Vw_pending_authRow
            Dim rowVw_pending_authRow As Vw_pending_authRow = CType(Me.NewRow,Vw_pending_authRow)
            Dim columnValuesArray() As Object = New Object() {INDENT_NO, INDENT_DATE, ITEMCODE, ITEMNAME, QTY, fromStoreCode, STORELOCATIONNAME}
            rowVw_pending_authRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_pending_authRow)
            Return rowVw_pending_authRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_pending_authDataTable = CType(MyBase.Clone,Vw_pending_authDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_pending_authDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENT_DATE = MyBase.Columns("INDENT_DATE")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnfromStoreCode = MyBase.Columns("fromStoreCode")
            Me.columnSTORELOCATIONNAME = MyBase.Columns("STORELOCATIONNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENT_DATE = New Global.System.Data.DataColumn("INDENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_DATE)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnfromStoreCode = New Global.System.Data.DataColumn("fromStoreCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfromStoreCode)
            Me.columnSTORELOCATIONNAME = New Global.System.Data.DataColumn("STORELOCATIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORELOCATIONNAME)
            Me.columnINDENT_NO.MaxLength = 50
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.MaxLength = 75
            Me.columnfromStoreCode.MaxLength = 15
            Me.columnSTORELOCATIONNAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_pending_authRow() As Vw_pending_authRow
            Return CType(Me.NewRow,Vw_pending_authRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_pending_authRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_pending_authRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_pending_authRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_pending_authRowChanged(Me, New Vw_pending_authRowChangeEvent(CType(e.Row,Vw_pending_authRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_pending_authRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_pending_authRowChanging(Me, New Vw_pending_authRowChangeEvent(CType(e.Row,Vw_pending_authRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_pending_authRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_pending_authRowDeleted(Me, New Vw_pending_authRowChangeEvent(CType(e.Row,Vw_pending_authRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_pending_authRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_pending_authRowDeleting(Me, New Vw_pending_authRowChangeEvent(CType(e.Row,Vw_pending_authRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_pending_authRow(ByVal row As Vw_pending_authRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_pending_authDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_INDGRNITEMSDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_INDGRNITEMSRow)
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENT_DATE As Global.System.Data.DataColumn
        
        Private columnGrndetails As Global.System.Data.DataColumn
        
        Private columnGrndate As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnindQty As Global.System.Data.DataColumn
        
        Private columngrnQTy As Global.System.Data.DataColumn
        
        Private columnpendingQty As Global.System.Data.DataColumn
        
        Private columninditemtp As Global.System.Data.DataColumn
        
        Private columnstore As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_INDGRNITEMS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property indQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property grnQTyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrnQTy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pendingQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpendingQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inditemtpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninditemtp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property storeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_INDGRNITEMSRow
            Get
                Return CType(Me.Rows(index),Vw_INDGRNITEMSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_INDGRNITEMSRowChanging As Vw_INDGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_INDGRNITEMSRowChanged As Vw_INDGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_INDGRNITEMSRowDeleting As Vw_INDGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_INDGRNITEMSRowDeleted As Vw_INDGRNITEMSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_INDGRNITEMSRow(ByVal row As Vw_INDGRNITEMSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_INDGRNITEMSRow(ByVal INDENT_NO As String, ByVal INDENT_DATE As Date, ByVal Grndetails As String, ByVal Grndate As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal indQty As Decimal, ByVal grnQTy As Decimal, ByVal pendingQty As Decimal, ByVal inditemtp As String, ByVal store As String) As Vw_INDGRNITEMSRow
            Dim rowVw_INDGRNITEMSRow As Vw_INDGRNITEMSRow = CType(Me.NewRow,Vw_INDGRNITEMSRow)
            Dim columnValuesArray() As Object = New Object() {INDENT_NO, INDENT_DATE, Grndetails, Grndate, ITEMCODE, ITEMNAME, indQty, grnQTy, pendingQty, inditemtp, store}
            rowVw_INDGRNITEMSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_INDGRNITEMSRow)
            Return rowVw_INDGRNITEMSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_INDGRNITEMSDataTable = CType(MyBase.Clone,Vw_INDGRNITEMSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_INDGRNITEMSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENT_DATE = MyBase.Columns("INDENT_DATE")
            Me.columnGrndetails = MyBase.Columns("Grndetails")
            Me.columnGrndate = MyBase.Columns("Grndate")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnindQty = MyBase.Columns("indQty")
            Me.columngrnQTy = MyBase.Columns("grnQTy")
            Me.columnpendingQty = MyBase.Columns("pendingQty")
            Me.columninditemtp = MyBase.Columns("inditemtp")
            Me.columnstore = MyBase.Columns("store")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENT_DATE = New Global.System.Data.DataColumn("INDENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_DATE)
            Me.columnGrndetails = New Global.System.Data.DataColumn("Grndetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndetails)
            Me.columnGrndate = New Global.System.Data.DataColumn("Grndate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndate)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnindQty = New Global.System.Data.DataColumn("indQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindQty)
            Me.columngrnQTy = New Global.System.Data.DataColumn("grnQTy", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrnQTy)
            Me.columnpendingQty = New Global.System.Data.DataColumn("pendingQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpendingQty)
            Me.columninditemtp = New Global.System.Data.DataColumn("inditemtp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninditemtp)
            Me.columnstore = New Global.System.Data.DataColumn("store", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstore)
            Me.columnINDENT_NO.MaxLength = 50
            Me.columnGrndetails.MaxLength = 50
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.MaxLength = 75
            Me.columninditemtp.AllowDBNull = false
            Me.columninditemtp.MaxLength = 8
            Me.columnstore.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_INDGRNITEMSRow() As Vw_INDGRNITEMSRow
            Return CType(Me.NewRow,Vw_INDGRNITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_INDGRNITEMSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_INDGRNITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_INDGRNITEMSRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_INDGRNITEMSRowChanged(Me, New Vw_INDGRNITEMSRowChangeEvent(CType(e.Row,Vw_INDGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_INDGRNITEMSRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_INDGRNITEMSRowChanging(Me, New Vw_INDGRNITEMSRowChangeEvent(CType(e.Row,Vw_INDGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_INDGRNITEMSRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_INDGRNITEMSRowDeleted(Me, New Vw_INDGRNITEMSRowChangeEvent(CType(e.Row,Vw_INDGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_INDGRNITEMSRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_INDGRNITEMSRowDeleting(Me, New Vw_INDGRNITEMSRowChangeEvent(CType(e.Row,Vw_INDGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_INDGRNITEMSRow(ByVal row As Vw_INDGRNITEMSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_INDGRNITEMSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_Indent_GRNDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_Indent_GRNRow)
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENT_DATE As Global.System.Data.DataColumn
        
        Private columnSTORELOCATIONNAME As Global.System.Data.DataColumn
        
        Private columnfromStoreCode As Global.System.Data.DataColumn
        
        Private columnGrndetails As Global.System.Data.DataColumn
        
        Private columnindtype As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_Indent_GRN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORELOCATIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORELOCATIONNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fromStoreCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfromStoreCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property indtypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindtype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_Indent_GRNRow
            Get
                Return CType(Me.Rows(index),Vw_Indent_GRNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_Indent_GRNRowChanging As Vw_Indent_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_Indent_GRNRowChanged As Vw_Indent_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_Indent_GRNRowDeleting As Vw_Indent_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_Indent_GRNRowDeleted As Vw_Indent_GRNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_Indent_GRNRow(ByVal row As Vw_Indent_GRNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_Indent_GRNRow(ByVal INDENT_NO As String, ByVal INDENT_DATE As Date, ByVal STORELOCATIONNAME As String, ByVal fromStoreCode As String, ByVal Grndetails As String, ByVal indtype As String) As Vw_Indent_GRNRow
            Dim rowVw_Indent_GRNRow As Vw_Indent_GRNRow = CType(Me.NewRow,Vw_Indent_GRNRow)
            Dim columnValuesArray() As Object = New Object() {INDENT_NO, INDENT_DATE, STORELOCATIONNAME, fromStoreCode, Grndetails, indtype}
            rowVw_Indent_GRNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_Indent_GRNRow)
            Return rowVw_Indent_GRNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_Indent_GRNDataTable = CType(MyBase.Clone,Vw_Indent_GRNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_Indent_GRNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENT_DATE = MyBase.Columns("INDENT_DATE")
            Me.columnSTORELOCATIONNAME = MyBase.Columns("STORELOCATIONNAME")
            Me.columnfromStoreCode = MyBase.Columns("fromStoreCode")
            Me.columnGrndetails = MyBase.Columns("Grndetails")
            Me.columnindtype = MyBase.Columns("indtype")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENT_DATE = New Global.System.Data.DataColumn("INDENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_DATE)
            Me.columnSTORELOCATIONNAME = New Global.System.Data.DataColumn("STORELOCATIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORELOCATIONNAME)
            Me.columnfromStoreCode = New Global.System.Data.DataColumn("fromStoreCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfromStoreCode)
            Me.columnGrndetails = New Global.System.Data.DataColumn("Grndetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndetails)
            Me.columnindtype = New Global.System.Data.DataColumn("indtype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindtype)
            Me.columnINDENT_NO.AllowDBNull = false
            Me.columnINDENT_NO.MaxLength = 50
            Me.columnSTORELOCATIONNAME.MaxLength = 50
            Me.columnfromStoreCode.MaxLength = 15
            Me.columnGrndetails.AllowDBNull = false
            Me.columnGrndetails.MaxLength = 50
            Me.columnindtype.AllowDBNull = false
            Me.columnindtype.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_Indent_GRNRow() As Vw_Indent_GRNRow
            Return CType(Me.NewRow,Vw_Indent_GRNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_Indent_GRNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_Indent_GRNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_Indent_GRNRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_Indent_GRNRowChanged(Me, New Vw_Indent_GRNRowChangeEvent(CType(e.Row,Vw_Indent_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_Indent_GRNRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_Indent_GRNRowChanging(Me, New Vw_Indent_GRNRowChangeEvent(CType(e.Row,Vw_Indent_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_Indent_GRNRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_Indent_GRNRowDeleted(Me, New Vw_Indent_GRNRowChangeEvent(CType(e.Row,Vw_Indent_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_Indent_GRNRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_Indent_GRNRowDeleting(Me, New Vw_Indent_GRNRowChangeEvent(CType(e.Row,Vw_Indent_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_Indent_GRNRow(ByVal row As Vw_Indent_GRNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_Indent_GRNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_PO_GRNDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_PO_GRNRow)
        
        Private columnpono As Global.System.Data.DataColumn
        
        Private columnpodate As Global.System.Data.DataColumn
        
        Private columnpodepartment As Global.System.Data.DataColumn
        
        Private columnpovalue As Global.System.Data.DataColumn
        
        Private columncategory As Global.System.Data.DataColumn
        
        Private columnsubject As Global.System.Data.DataColumn
        
        Private columnQUOT_DATE As Global.System.Data.DataColumn
        
        Private columnpovnm As Global.System.Data.DataColumn
        
        Private columnGrndetails As Global.System.Data.DataColumn
        
        Private columnGrndate As Global.System.Data.DataColumn
        
        Private columnPOTYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_PO_GRN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ponoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property povalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpovalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property categoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUOT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUOT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property povnmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpovnm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_PO_GRNRow
            Get
                Return CType(Me.Rows(index),Vw_PO_GRNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_PO_GRNRowChanging As Vw_PO_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_PO_GRNRowChanged As Vw_PO_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_PO_GRNRowDeleting As Vw_PO_GRNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_PO_GRNRowDeleted As Vw_PO_GRNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_PO_GRNRow(ByVal row As Vw_PO_GRNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_PO_GRNRow(ByVal pono As String, ByVal podate As Date, ByVal podepartment As String, ByVal povalue As Decimal, ByVal category As String, ByVal subject As String, ByVal QUOT_DATE As Date, ByVal povnm As String, ByVal Grndetails As String, ByVal Grndate As Date, ByVal POTYPE As String) As Vw_PO_GRNRow
            Dim rowVw_PO_GRNRow As Vw_PO_GRNRow = CType(Me.NewRow,Vw_PO_GRNRow)
            Dim columnValuesArray() As Object = New Object() {pono, podate, podepartment, povalue, category, subject, QUOT_DATE, povnm, Grndetails, Grndate, POTYPE}
            rowVw_PO_GRNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_PO_GRNRow)
            Return rowVw_PO_GRNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_PO_GRNDataTable = CType(MyBase.Clone,Vw_PO_GRNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_PO_GRNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpono = MyBase.Columns("pono")
            Me.columnpodate = MyBase.Columns("podate")
            Me.columnpodepartment = MyBase.Columns("podepartment")
            Me.columnpovalue = MyBase.Columns("povalue")
            Me.columncategory = MyBase.Columns("category")
            Me.columnsubject = MyBase.Columns("subject")
            Me.columnQUOT_DATE = MyBase.Columns("QUOT_DATE")
            Me.columnpovnm = MyBase.Columns("povnm")
            Me.columnGrndetails = MyBase.Columns("Grndetails")
            Me.columnGrndate = MyBase.Columns("Grndate")
            Me.columnPOTYPE = MyBase.Columns("POTYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpono = New Global.System.Data.DataColumn("pono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpono)
            Me.columnpodate = New Global.System.Data.DataColumn("podate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodate)
            Me.columnpodepartment = New Global.System.Data.DataColumn("podepartment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodepartment)
            Me.columnpovalue = New Global.System.Data.DataColumn("povalue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpovalue)
            Me.columncategory = New Global.System.Data.DataColumn("category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategory)
            Me.columnsubject = New Global.System.Data.DataColumn("subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubject)
            Me.columnQUOT_DATE = New Global.System.Data.DataColumn("QUOT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUOT_DATE)
            Me.columnpovnm = New Global.System.Data.DataColumn("povnm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpovnm)
            Me.columnGrndetails = New Global.System.Data.DataColumn("Grndetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndetails)
            Me.columnGrndate = New Global.System.Data.DataColumn("Grndate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndate)
            Me.columnPOTYPE = New Global.System.Data.DataColumn("POTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTYPE)
            Me.columnpono.MaxLength = 25
            Me.columnpodepartment.MaxLength = 40
            Me.columncategory.MaxLength = 150
            Me.columnsubject.MaxLength = 200
            Me.columnpovnm.MaxLength = 100
            Me.columnGrndetails.AllowDBNull = false
            Me.columnGrndetails.MaxLength = 50
            Me.columnPOTYPE.AllowDBNull = false
            Me.columnPOTYPE.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_PO_GRNRow() As Vw_PO_GRNRow
            Return CType(Me.NewRow,Vw_PO_GRNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_PO_GRNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_PO_GRNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_PO_GRNRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_PO_GRNRowChanged(Me, New Vw_PO_GRNRowChangeEvent(CType(e.Row,Vw_PO_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_PO_GRNRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_PO_GRNRowChanging(Me, New Vw_PO_GRNRowChangeEvent(CType(e.Row,Vw_PO_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_PO_GRNRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_PO_GRNRowDeleted(Me, New Vw_PO_GRNRowChangeEvent(CType(e.Row,Vw_PO_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_PO_GRNRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_PO_GRNRowDeleting(Me, New Vw_PO_GRNRowChangeEvent(CType(e.Row,Vw_PO_GRNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_PO_GRNRow(ByVal row As Vw_PO_GRNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_PO_GRNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_POGRNITEMSDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_POGRNITEMSRow)
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENT_DATE As Global.System.Data.DataColumn
        
        Private columnGrndetails As Global.System.Data.DataColumn
        
        Private columnGrndate As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnindQty As Global.System.Data.DataColumn
        
        Private columngrnQTy As Global.System.Data.DataColumn
        
        Private columnpendingQty As Global.System.Data.DataColumn
        
        Private columninditemtp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_POGRNITEMS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property indQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property grnQTyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrnQTy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pendingQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpendingQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inditemtpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninditemtp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_POGRNITEMSRow
            Get
                Return CType(Me.Rows(index),Vw_POGRNITEMSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMSRowChanging As Vw_POGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMSRowChanged As Vw_POGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMSRowDeleting As Vw_POGRNITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMSRowDeleted As Vw_POGRNITEMSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_POGRNITEMSRow(ByVal row As Vw_POGRNITEMSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_POGRNITEMSRow(ByVal INDENT_NO As String, ByVal INDENT_DATE As Date, ByVal Grndetails As String, ByVal Grndate As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal indQty As Decimal, ByVal grnQTy As Decimal, ByVal pendingQty As Decimal, ByVal inditemtp As String) As Vw_POGRNITEMSRow
            Dim rowVw_POGRNITEMSRow As Vw_POGRNITEMSRow = CType(Me.NewRow,Vw_POGRNITEMSRow)
            Dim columnValuesArray() As Object = New Object() {INDENT_NO, INDENT_DATE, Grndetails, Grndate, ITEMCODE, ITEMNAME, indQty, grnQTy, pendingQty, inditemtp}
            rowVw_POGRNITEMSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_POGRNITEMSRow)
            Return rowVw_POGRNITEMSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_POGRNITEMSDataTable = CType(MyBase.Clone,Vw_POGRNITEMSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_POGRNITEMSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENT_DATE = MyBase.Columns("INDENT_DATE")
            Me.columnGrndetails = MyBase.Columns("Grndetails")
            Me.columnGrndate = MyBase.Columns("Grndate")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnindQty = MyBase.Columns("indQty")
            Me.columngrnQTy = MyBase.Columns("grnQTy")
            Me.columnpendingQty = MyBase.Columns("pendingQty")
            Me.columninditemtp = MyBase.Columns("inditemtp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENT_DATE = New Global.System.Data.DataColumn("INDENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_DATE)
            Me.columnGrndetails = New Global.System.Data.DataColumn("Grndetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndetails)
            Me.columnGrndate = New Global.System.Data.DataColumn("Grndate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndate)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnindQty = New Global.System.Data.DataColumn("indQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindQty)
            Me.columngrnQTy = New Global.System.Data.DataColumn("grnQTy", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrnQTy)
            Me.columnpendingQty = New Global.System.Data.DataColumn("pendingQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpendingQty)
            Me.columninditemtp = New Global.System.Data.DataColumn("inditemtp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninditemtp)
            Me.columnINDENT_NO.MaxLength = 50
            Me.columnGrndetails.MaxLength = 50
            Me.columnITEMCODE.MaxLength = 10
            Me.columnITEMNAME.MaxLength = 75
            Me.columninditemtp.AllowDBNull = false
            Me.columninditemtp.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_POGRNITEMSRow() As Vw_POGRNITEMSRow
            Return CType(Me.NewRow,Vw_POGRNITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_POGRNITEMSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_POGRNITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_POGRNITEMSRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMSRowChanged(Me, New Vw_POGRNITEMSRowChangeEvent(CType(e.Row,Vw_POGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_POGRNITEMSRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMSRowChanging(Me, New Vw_POGRNITEMSRowChangeEvent(CType(e.Row,Vw_POGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_POGRNITEMSRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMSRowDeleted(Me, New Vw_POGRNITEMSRowChangeEvent(CType(e.Row,Vw_POGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_POGRNITEMSRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMSRowDeleting(Me, New Vw_POGRNITEMSRowChangeEvent(CType(e.Row,Vw_POGRNITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_POGRNITEMSRow(ByVal row As Vw_POGRNITEMSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_POGRNITEMSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_POGRNITEMS_pendingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_POGRNITEMS_pendingRow)
        
        Private columnpono As Global.System.Data.DataColumn
        
        Private columnitemcode As Global.System.Data.DataColumn
        
        Private columnitemname As Global.System.Data.DataColumn
        
        Private columnuom As Global.System.Data.DataColumn
        
        Private columnquantity As Global.System.Data.DataColumn
        
        Private columnGrndetails As Global.System.Data.DataColumn
        
        Private columnGrndate As Global.System.Data.DataColumn
        
        Private columnguom As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnpendingQty As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_POGRNITEMS_pending"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ponoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrndateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property guomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnguom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pendingQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpendingQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_POGRNITEMS_pendingRow
            Get
                Return CType(Me.Rows(index),Vw_POGRNITEMS_pendingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMS_pendingRowChanging As Vw_POGRNITEMS_pendingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMS_pendingRowChanged As Vw_POGRNITEMS_pendingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMS_pendingRowDeleting As Vw_POGRNITEMS_pendingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Vw_POGRNITEMS_pendingRowDeleted As Vw_POGRNITEMS_pendingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVw_POGRNITEMS_pendingRow(ByVal row As Vw_POGRNITEMS_pendingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVw_POGRNITEMS_pendingRow(ByVal pono As String, ByVal itemcode As String, ByVal itemname As String, ByVal uom As String, ByVal quantity As Decimal, ByVal Grndetails As String, ByVal Grndate As Date, ByVal guom As String, ByVal Qty As Decimal, ByVal pendingQty As Decimal) As Vw_POGRNITEMS_pendingRow
            Dim rowVw_POGRNITEMS_pendingRow As Vw_POGRNITEMS_pendingRow = CType(Me.NewRow,Vw_POGRNITEMS_pendingRow)
            Dim columnValuesArray() As Object = New Object() {pono, itemcode, itemname, uom, quantity, Grndetails, Grndate, guom, Qty, pendingQty}
            rowVw_POGRNITEMS_pendingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_POGRNITEMS_pendingRow)
            Return rowVw_POGRNITEMS_pendingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_POGRNITEMS_pendingDataTable = CType(MyBase.Clone,Vw_POGRNITEMS_pendingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_POGRNITEMS_pendingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpono = MyBase.Columns("pono")
            Me.columnitemcode = MyBase.Columns("itemcode")
            Me.columnitemname = MyBase.Columns("itemname")
            Me.columnuom = MyBase.Columns("uom")
            Me.columnquantity = MyBase.Columns("quantity")
            Me.columnGrndetails = MyBase.Columns("Grndetails")
            Me.columnGrndate = MyBase.Columns("Grndate")
            Me.columnguom = MyBase.Columns("guom")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnpendingQty = MyBase.Columns("pendingQty")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpono = New Global.System.Data.DataColumn("pono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpono)
            Me.columnitemcode = New Global.System.Data.DataColumn("itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemcode)
            Me.columnitemname = New Global.System.Data.DataColumn("itemname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemname)
            Me.columnuom = New Global.System.Data.DataColumn("uom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuom)
            Me.columnquantity = New Global.System.Data.DataColumn("quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity)
            Me.columnGrndetails = New Global.System.Data.DataColumn("Grndetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndetails)
            Me.columnGrndate = New Global.System.Data.DataColumn("Grndate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrndate)
            Me.columnguom = New Global.System.Data.DataColumn("guom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnguom)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnpendingQty = New Global.System.Data.DataColumn("pendingQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpendingQty)
            Me.columnpono.MaxLength = 25
            Me.columnitemcode.MaxLength = 10
            Me.columnitemname.MaxLength = 200
            Me.columnuom.MaxLength = 10
            Me.columnGrndetails.MaxLength = 50
            Me.columnguom.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVw_POGRNITEMS_pendingRow() As Vw_POGRNITEMS_pendingRow
            Return CType(Me.NewRow,Vw_POGRNITEMS_pendingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_POGRNITEMS_pendingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_POGRNITEMS_pendingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_POGRNITEMS_pendingRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMS_pendingRowChanged(Me, New Vw_POGRNITEMS_pendingRowChangeEvent(CType(e.Row,Vw_POGRNITEMS_pendingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_POGRNITEMS_pendingRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMS_pendingRowChanging(Me, New Vw_POGRNITEMS_pendingRowChangeEvent(CType(e.Row,Vw_POGRNITEMS_pendingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_POGRNITEMS_pendingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMS_pendingRowDeleted(Me, New Vw_POGRNITEMS_pendingRowChangeEvent(CType(e.Row,Vw_POGRNITEMS_pendingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_POGRNITEMS_pendingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_POGRNITEMS_pendingRowDeleting(Me, New Vw_POGRNITEMS_pendingRowChangeEvent(CType(e.Row,Vw_POGRNITEMS_pendingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVw_POGRNITEMS_pendingRow(ByVal row As Vw_POGRNITEMS_pendingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_POGRNITEMS_pendingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_PO_WOBBILL2DataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_PO_WOBBILL2Row)
        
        Private columnwodetails As Global.System.Data.DataColumn
        
        Private columnwoBDATE As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnpincode As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnmobile As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnORDERSUBJECT As Global.System.Data.DataColumn
        
        Private columnrequestedby As Global.System.Data.DataColumn
        
        Private columnapprovedby As Global.System.Data.DataColumn
        
        Private columnREMARKS As Global.System.Data.DataColumn
        
        Private columnSINO As Global.System.Data.DataColumn
        
        Private columnworkdescription As Global.System.Data.DataColumn
        
        Private columnUNIT As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnvoid As Global.System.Data.DataColumn
        
        Private columnAUTOID As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnUPDATETIME As Global.System.Data.DataColumn
        
        Private columnINDENT_NO As Global.System.Data.DataColumn
        
        Private columnINDENT_DATE As Global.System.Data.DataColumn
        
        Private columnpayTerms As Global.System.Data.DataColumn
        
        Private columncompDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_PO_WOBBILL2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property wodetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwodetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property woBDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwoBDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pincodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpincode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERSUBJECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERSUBJECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property requestedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrequestedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property approvedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapprovedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property workdescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworkdescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property voidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property payTermsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayTerms
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property compDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_PO_WOBBILL2Row
            Get
                Return CType(Me.Rows(index),VW_PO_WOBBILL2Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_WOBBILL2RowChanging As VW_PO_WOBBILL2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_WOBBILL2RowChanged As VW_PO_WOBBILL2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_WOBBILL2RowDeleting As VW_PO_WOBBILL2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_PO_WOBBILL2RowDeleted As VW_PO_WOBBILL2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_PO_WOBBILL2Row(ByVal row As VW_PO_WOBBILL2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_PO_WOBBILL2Row( _
                    ByVal wodetails As String,  _
                    ByVal woBDATE As Date,  _
                    ByVal address As String,  _
                    ByVal city As String,  _
                    ByVal state As String,  _
                    ByVal pincode As String,  _
                    ByVal email As String,  _
                    ByVal mobile As String,  _
                    ByVal SUPPLIERCODE As String,  _
                    ByVal SUPPLIERNAME As String,  _
                    ByVal ORDERSUBJECT As String,  _
                    ByVal requestedby As String,  _
                    ByVal approvedby As String,  _
                    ByVal REMARKS As String,  _
                    ByVal SINO As String,  _
                    ByVal workdescription As String,  _
                    ByVal UNIT As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal RATE As Decimal,  _
                    ByVal AMOUNT As Decimal,  _
                    ByVal void As String,  _
                    ByVal AUTOID As Integer,  _
                    ByVal ADDDATE As Date,  _
                    ByVal UPDATETIME As Date,  _
                    ByVal INDENT_NO As String,  _
                    ByVal INDENT_DATE As Date,  _
                    ByVal payTerms As String,  _
                    ByVal compDate As Date) As VW_PO_WOBBILL2Row
            Dim rowVW_PO_WOBBILL2Row As VW_PO_WOBBILL2Row = CType(Me.NewRow,VW_PO_WOBBILL2Row)
            Dim columnValuesArray() As Object = New Object() {wodetails, woBDATE, address, city, state, pincode, email, mobile, SUPPLIERCODE, SUPPLIERNAME, ORDERSUBJECT, requestedby, approvedby, REMARKS, SINO, workdescription, UNIT, QTY, RATE, AMOUNT, void, AUTOID, ADDDATE, UPDATETIME, INDENT_NO, INDENT_DATE, payTerms, compDate}
            rowVW_PO_WOBBILL2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_PO_WOBBILL2Row)
            Return rowVW_PO_WOBBILL2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_PO_WOBBILL2DataTable = CType(MyBase.Clone,VW_PO_WOBBILL2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_PO_WOBBILL2DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnwodetails = MyBase.Columns("wodetails")
            Me.columnwoBDATE = MyBase.Columns("woBDATE")
            Me.columnaddress = MyBase.Columns("address")
            Me.columncity = MyBase.Columns("city")
            Me.columnstate = MyBase.Columns("state")
            Me.columnpincode = MyBase.Columns("pincode")
            Me.columnemail = MyBase.Columns("email")
            Me.columnmobile = MyBase.Columns("mobile")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnORDERSUBJECT = MyBase.Columns("ORDERSUBJECT")
            Me.columnrequestedby = MyBase.Columns("requestedby")
            Me.columnapprovedby = MyBase.Columns("approvedby")
            Me.columnREMARKS = MyBase.Columns("REMARKS")
            Me.columnSINO = MyBase.Columns("SINO")
            Me.columnworkdescription = MyBase.Columns("workdescription")
            Me.columnUNIT = MyBase.Columns("UNIT")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnvoid = MyBase.Columns("void")
            Me.columnAUTOID = MyBase.Columns("AUTOID")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnUPDATETIME = MyBase.Columns("UPDATETIME")
            Me.columnINDENT_NO = MyBase.Columns("INDENT_NO")
            Me.columnINDENT_DATE = MyBase.Columns("INDENT_DATE")
            Me.columnpayTerms = MyBase.Columns("payTerms")
            Me.columncompDate = MyBase.Columns("compDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnwodetails = New Global.System.Data.DataColumn("wodetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwodetails)
            Me.columnwoBDATE = New Global.System.Data.DataColumn("woBDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwoBDATE)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnpincode = New Global.System.Data.DataColumn("pincode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpincode)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnmobile = New Global.System.Data.DataColumn("mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmobile)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnORDERSUBJECT = New Global.System.Data.DataColumn("ORDERSUBJECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERSUBJECT)
            Me.columnrequestedby = New Global.System.Data.DataColumn("requestedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrequestedby)
            Me.columnapprovedby = New Global.System.Data.DataColumn("approvedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapprovedby)
            Me.columnREMARKS = New Global.System.Data.DataColumn("REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS)
            Me.columnSINO = New Global.System.Data.DataColumn("SINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINO)
            Me.columnworkdescription = New Global.System.Data.DataColumn("workdescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworkdescription)
            Me.columnUNIT = New Global.System.Data.DataColumn("UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnvoid = New Global.System.Data.DataColumn("void", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvoid)
            Me.columnAUTOID = New Global.System.Data.DataColumn("AUTOID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTOID)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnUPDATETIME = New Global.System.Data.DataColumn("UPDATETIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATETIME)
            Me.columnINDENT_NO = New Global.System.Data.DataColumn("INDENT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_NO)
            Me.columnINDENT_DATE = New Global.System.Data.DataColumn("INDENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENT_DATE)
            Me.columnpayTerms = New Global.System.Data.DataColumn("payTerms", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayTerms)
            Me.columncompDate = New Global.System.Data.DataColumn("compDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompDate)
            Me.columnwodetails.ReadOnly = true
            Me.columnwodetails.MaxLength = 20
            Me.columnaddress.ReadOnly = true
            Me.columnaddress.MaxLength = 511
            Me.columncity.ReadOnly = true
            Me.columncity.MaxLength = 255
            Me.columnstate.ReadOnly = true
            Me.columnstate.MaxLength = 532
            Me.columnpincode.ReadOnly = true
            Me.columnpincode.MaxLength = 20
            Me.columnemail.ReadOnly = true
            Me.columnemail.MaxLength = 500
            Me.columnmobile.ReadOnly = true
            Me.columnmobile.MaxLength = 255
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 50
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 50
            Me.columnORDERSUBJECT.ReadOnly = true
            Me.columnORDERSUBJECT.MaxLength = 2000
            Me.columnrequestedby.ReadOnly = true
            Me.columnrequestedby.MaxLength = 50
            Me.columnapprovedby.ReadOnly = true
            Me.columnapprovedby.MaxLength = 50
            Me.columnREMARKS.ReadOnly = true
            Me.columnREMARKS.MaxLength = 2000
            Me.columnSINO.ReadOnly = true
            Me.columnSINO.MaxLength = 5
            Me.columnworkdescription.ReadOnly = true
            Me.columnworkdescription.MaxLength = 2000
            Me.columnUNIT.ReadOnly = true
            Me.columnUNIT.MaxLength = 20
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnvoid.ReadOnly = true
            Me.columnvoid.MaxLength = 1
            Me.columnAUTOID.AllowDBNull = false
            Me.columnADDDATE.ReadOnly = true
            Me.columnUPDATETIME.ReadOnly = true
            Me.columnINDENT_NO.ReadOnly = true
            Me.columnINDENT_NO.MaxLength = 20
            Me.columnINDENT_DATE.ReadOnly = true
            Me.columnpayTerms.ReadOnly = true
            Me.columnpayTerms.MaxLength = 50
            Me.columncompDate.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_PO_WOBBILL2Row() As VW_PO_WOBBILL2Row
            Return CType(Me.NewRow,VW_PO_WOBBILL2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_PO_WOBBILL2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_PO_WOBBILL2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_PO_WOBBILL2RowChangedEvent) Is Nothing) Then
                RaiseEvent VW_PO_WOBBILL2RowChanged(Me, New VW_PO_WOBBILL2RowChangeEvent(CType(e.Row,VW_PO_WOBBILL2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_PO_WOBBILL2RowChangingEvent) Is Nothing) Then
                RaiseEvent VW_PO_WOBBILL2RowChanging(Me, New VW_PO_WOBBILL2RowChangeEvent(CType(e.Row,VW_PO_WOBBILL2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_PO_WOBBILL2RowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_PO_WOBBILL2RowDeleted(Me, New VW_PO_WOBBILL2RowChangeEvent(CType(e.Row,VW_PO_WOBBILL2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_PO_WOBBILL2RowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_PO_WOBBILL2RowDeleting(Me, New VW_PO_WOBBILL2RowChangeEvent(CType(e.Row,VW_PO_WOBBILL2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_PO_WOBBILL2Row(ByVal row As VW_PO_WOBBILL2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_PO_WOBBILL2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_WO_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEW_WO_REPORTRow)
        
        Private columnWOBDETAILS As Global.System.Data.DataColumn
        
        Private columnWOBDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnORDERSUBJECT As Global.System.Data.DataColumn
        
        Private columnTOTALAMT As Global.System.Data.DataColumn
        
        Private columnremarks As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_WO_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WOBDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWOBDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WOBDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWOBDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERSUBJECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERSUBJECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property remarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnremarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_WO_REPORTRow
            Get
                Return CType(Me.Rows(index),VIEW_WO_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WO_REPORTRowChanging As VIEW_WO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WO_REPORTRowChanged As VIEW_WO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WO_REPORTRowDeleting As VIEW_WO_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WO_REPORTRowDeleted As VIEW_WO_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEW_WO_REPORTRow(ByVal row As VIEW_WO_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEW_WO_REPORTRow(ByVal WOBDETAILS As String, ByVal WOBDATE As Date, ByVal SUPPLIERCODE As String, ByVal SUPPLIERNAME As String, ByVal ORDERSUBJECT As String, ByVal TOTALAMT As Decimal, ByVal remarks As String) As VIEW_WO_REPORTRow
            Dim rowVIEW_WO_REPORTRow As VIEW_WO_REPORTRow = CType(Me.NewRow,VIEW_WO_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {WOBDETAILS, WOBDATE, SUPPLIERCODE, SUPPLIERNAME, ORDERSUBJECT, TOTALAMT, remarks}
            rowVIEW_WO_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_WO_REPORTRow)
            Return rowVIEW_WO_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_WO_REPORTDataTable = CType(MyBase.Clone,VIEW_WO_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_WO_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnWOBDETAILS = MyBase.Columns("WOBDETAILS")
            Me.columnWOBDATE = MyBase.Columns("WOBDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnORDERSUBJECT = MyBase.Columns("ORDERSUBJECT")
            Me.columnTOTALAMT = MyBase.Columns("TOTALAMT")
            Me.columnremarks = MyBase.Columns("remarks")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnWOBDETAILS = New Global.System.Data.DataColumn("WOBDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWOBDETAILS)
            Me.columnWOBDATE = New Global.System.Data.DataColumn("WOBDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWOBDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnORDERSUBJECT = New Global.System.Data.DataColumn("ORDERSUBJECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERSUBJECT)
            Me.columnTOTALAMT = New Global.System.Data.DataColumn("TOTALAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALAMT)
            Me.columnremarks = New Global.System.Data.DataColumn("remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnremarks)
            Me.columnWOBDETAILS.ReadOnly = true
            Me.columnWOBDETAILS.MaxLength = 20
            Me.columnWOBDATE.ReadOnly = true
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 50
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 50
            Me.columnORDERSUBJECT.ReadOnly = true
            Me.columnORDERSUBJECT.MaxLength = 2000
            Me.columnTOTALAMT.ReadOnly = true
            Me.columnremarks.ReadOnly = true
            Me.columnremarks.MaxLength = 2000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEW_WO_REPORTRow() As VIEW_WO_REPORTRow
            Return CType(Me.NewRow,VIEW_WO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_WO_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_WO_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_WO_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_WO_REPORTRowChanged(Me, New VIEW_WO_REPORTRowChangeEvent(CType(e.Row,VIEW_WO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_WO_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_WO_REPORTRowChanging(Me, New VIEW_WO_REPORTRowChangeEvent(CType(e.Row,VIEW_WO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_WO_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_WO_REPORTRowDeleted(Me, New VIEW_WO_REPORTRowChangeEvent(CType(e.Row,VIEW_WO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_WO_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_WO_REPORTRowDeleting(Me, New VIEW_WO_REPORTRowChangeEvent(CType(e.Row,VIEW_WO_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEW_WO_REPORTRow(ByVal row As VIEW_WO_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ndataset = New ndataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_WO_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PO_VIEW_VENDOR_CATEGORYRow
        Inherits Global.System.Data.DataRow
        
        Private tablePO_VIEW_VENDOR_CATEGORY As PO_VIEW_VENDOR_CATEGORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePO_VIEW_VENDOR_CATEGORY = CType(Me.Table,PO_VIEW_VENDOR_CATEGORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TABNAME() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.TABNAMEColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.TABNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorcode() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.vendorcodeColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.vendorcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorname() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.vendornameColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.vendornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.addressColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property city() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.cityColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property state() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.stateColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SLTYPE() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.SLTYPEColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.SLTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PINCODE() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PINCODEColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PINCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHONE() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PHONEColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOBILE() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.MOBILEColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.MOBILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAX() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.FAXColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.EMAILColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACTPERSON() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.CONTACTPERSONColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.CONTACTPERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VATNO() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.VATNOColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.VATNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTNO() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.CSTNOColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.CSTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TINNO() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.TINNOColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.TINNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PANNO() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PANNOColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.PANNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property category() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDOR_CATEGORY.categoryColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDOR_CATEGORY.categoryColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_PO_POBILLRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_PO_POBILL As VW_PO_POBILLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_PO_POBILL = CType(Me.Table,VW_PO_POBILLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PONO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PONO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PODATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODATE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PODATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.CATEGORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.CATEGORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.INDENTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.INDENTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.INDENTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTDATE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.INDENTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTH_DOCNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.AUTH_DOCNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTH_DOCNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.AUTH_DOCNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUOTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.QUOTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUOTNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.QUOTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEPARTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.DEPARTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPARTMENT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVEDBY' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTATUS' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POTOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POTOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POTOTAL' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_VAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.TOT_VATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_VAT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.TOT_VATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_TAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.TOT_TAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_TAX' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.TOT_TAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_DISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.TOT_DISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_DISCOUNT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.TOT_DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADVANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADVANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADVANCE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADVANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property overalldisc() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.overalldiscColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'overalldisc' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.overalldiscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POCF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POCFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POCF' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POCFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POTRANSPORT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POTRANSPORTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POTRANSPORT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POTRANSPORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODELIVERYAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PODELIVERYAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODELIVERYAMT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PODELIVERYAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAYMENTTERMS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PAYMENTTERMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENTTERMS' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PAYMENTTERMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POREMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POREMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POREMARKS' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POREMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELIVERYTERMS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.DELIVERYTERMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DELIVERYTERMS' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.DELIVERYTERMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADDRESS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS2' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADDRESS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADDRESS3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS3' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADDRESS3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CITY' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOBILENO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.MOBILENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOBILENO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.MOBILENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PINCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PINCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINCODE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PINCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.DISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCOUNT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VATAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.VATAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VATAMT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.VATAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.VATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.VATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.DISCAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCAMT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.DISCAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FREEZE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.FREEZEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FREEZE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.FREEZEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDUSER' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.UPDATEUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATEUSER' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.UPDATEUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATETIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.UPDATETIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATETIME' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.UPDATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBJECT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.SUBJECTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBJECT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.SUBJECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAX() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.FAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAX' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.CSTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.CSTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TINNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.TINNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.TINNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PANNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PANNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PANNO' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PANNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACTPERSON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.CONTACTPERSONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTPERSON' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.CONTACTPERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POCST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POCSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POCST' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POCSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POED' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POMODVAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POMODVATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POMODVAT' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POMODVATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POPTAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POPTAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POPTAX' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POPTAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POOCTRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POOCTRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOCTRA' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POOCTRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POINSURANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POINSURANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POINSURANCE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POINSURANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POLST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POLSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POLST' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POLSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POADVPERC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POADVPERCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POADVPERC' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POADVPERCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSALET() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.POSALETColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSALET' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.POSALETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODESPMODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PODESPMODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODESPMODE' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PODESPMODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODOCSTHROUGH() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL.PODOCSTHROUGHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODOCSTHROUGH' in table 'VW_PO_POBILL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL.PODOCSTHROUGHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONONull()
            Me(Me.tableVW_PO_POBILL.PONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PODATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODATENull()
            Me(Me.tableVW_PO_POBILL.PODATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORYNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.CATEGORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORYNull()
            Me(Me.tableVW_PO_POBILL.CATEGORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.INDENTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTNONull()
            Me(Me.tableVW_PO_POBILL.INDENTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.INDENTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTDATENull()
            Me(Me.tableVW_PO_POBILL.INDENTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVW_PO_POBILL.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVW_PO_POBILL.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTH_DOCNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.AUTH_DOCNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTH_DOCNONull()
            Me(Me.tableVW_PO_POBILL.AUTH_DOCNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUOTNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.QUOTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUOTNONull()
            Me(Me.tableVW_PO_POBILL.QUOTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEPARTMENTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.DEPARTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEPARTMENTNull()
            Me(Me.tableVW_PO_POBILL.DEPARTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDBYNull()
            Me(Me.tableVW_PO_POBILL.APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTATUSNull()
            Me(Me.tableVW_PO_POBILL.POSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOTOTALNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOTOTALNull()
            Me(Me.tableVW_PO_POBILL.POTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_VATNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.TOT_VATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_VATNull()
            Me(Me.tableVW_PO_POBILL.TOT_VATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_TAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.TOT_TAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_TAXNull()
            Me(Me.tableVW_PO_POBILL.TOT_TAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_DISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.TOT_DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_DISCOUNTNull()
            Me(Me.tableVW_PO_POBILL.TOT_DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADVANCENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADVANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADVANCENull()
            Me(Me.tableVW_PO_POBILL.ADVANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoveralldiscNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.overalldiscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoveralldiscNull()
            Me(Me.tableVW_PO_POBILL.overalldiscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOCFNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POCFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOCFNull()
            Me(Me.tableVW_PO_POBILL.POCFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOTRANSPORTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POTRANSPORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOTRANSPORTNull()
            Me(Me.tableVW_PO_POBILL.POTRANSPORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODELIVERYAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PODELIVERYAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODELIVERYAMTNull()
            Me(Me.tableVW_PO_POBILL.PODELIVERYAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAYMENTTERMSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PAYMENTTERMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAYMENTTERMSNull()
            Me(Me.tableVW_PO_POBILL.PAYMENTTERMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOREMARKSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POREMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOREMARKSNull()
            Me(Me.tableVW_PO_POBILL.POREMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELIVERYTERMSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.DELIVERYTERMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELIVERYTERMSNull()
            Me(Me.tableVW_PO_POBILL.DELIVERYTERMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESSNull()
            Me(Me.tableVW_PO_POBILL.ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADDRESS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESS2Null()
            Me(Me.tableVW_PO_POBILL.ADDRESS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESS3Null() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADDRESS3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESS3Null()
            Me(Me.tableVW_PO_POBILL.ADDRESS3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCITYNull()
            Me(Me.tableVW_PO_POBILL.CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATENull()
            Me(Me.tableVW_PO_POBILL.STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOBILENONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.MOBILENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOBILENONull()
            Me(Me.tableVW_PO_POBILL.MOBILENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPINCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PINCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPINCODENull()
            Me(Me.tableVW_PO_POBILL.PINCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableVW_PO_POBILL.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVW_PO_POBILL.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVW_PO_POBILL.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableVW_PO_POBILL.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVW_PO_POBILL.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableVW_PO_POBILL.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCOUNTNull()
            Me(Me.tableVW_PO_POBILL.DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVATAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.VATAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVATAMTNull()
            Me(Me.tableVW_PO_POBILL.VATAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVATNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.VATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVATNull()
            Me(Me.tableVW_PO_POBILL.VATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALNull()
            Me(Me.tableVW_PO_POBILL.TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.DISCAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCAMTNull()
            Me(Me.tableVW_PO_POBILL.DISCAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableVW_PO_POBILL.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFREEZENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.FREEZEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFREEZENull()
            Me(Me.tableVW_PO_POBILL.FREEZEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDUSERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDUSERNull()
            Me(Me.tableVW_PO_POBILL.ADDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tableVW_PO_POBILL.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEUSERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.UPDATEUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEUSERNull()
            Me(Me.tableVW_PO_POBILL.UPDATEUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATETIMENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.UPDATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATETIMENull()
            Me(Me.tableVW_PO_POBILL.UPDATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBJECTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.SUBJECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBJECTNull()
            Me(Me.tableVW_PO_POBILL.SUBJECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.FAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAXNull()
            Me(Me.tableVW_PO_POBILL.FAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.CSTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTNONull()
            Me(Me.tableVW_PO_POBILL.CSTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTINNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.TINNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTINNONull()
            Me(Me.tableVW_PO_POBILL.TINNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPANNONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PANNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPANNONull()
            Me(Me.tableVW_PO_POBILL.PANNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTACTPERSONNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.CONTACTPERSONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTACTPERSONNull()
            Me(Me.tableVW_PO_POBILL.CONTACTPERSONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOCSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POCSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOCSTNull()
            Me(Me.tableVW_PO_POBILL.POCSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOEDNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOEDNull()
            Me(Me.tableVW_PO_POBILL.POEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOMODVATNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POMODVATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOMODVATNull()
            Me(Me.tableVW_PO_POBILL.POMODVATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOPTAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POPTAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOPTAXNull()
            Me(Me.tableVW_PO_POBILL.POPTAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOOCTRANull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POOCTRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOOCTRANull()
            Me(Me.tableVW_PO_POBILL.POOCTRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOINSURANCENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POINSURANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOINSURANCENull()
            Me(Me.tableVW_PO_POBILL.POINSURANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOLSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POLSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOLSTNull()
            Me(Me.tableVW_PO_POBILL.POLSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOADVPERCNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POADVPERCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOADVPERCNull()
            Me(Me.tableVW_PO_POBILL.POADVPERCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSALETNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.POSALETColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSALETNull()
            Me(Me.tableVW_PO_POBILL.POSALETColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODESPMODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PODESPMODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODESPMODENull()
            Me(Me.tableVW_PO_POBILL.PODESPMODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODOCSTHROUGHNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL.PODOCSTHROUGHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODOCSTHROUGHNull()
            Me(Me.tableVW_PO_POBILL.PODOCSTHROUGHColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEW_PO_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_PO_REPORT As VIEW_PO_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_PO_REPORT = CType(Me.Table,VIEW_PO_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PONO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_PO_REPORT.PONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PONO' in table 'VIEW_PO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_PO_REPORT.PONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_PO_REPORT.PODATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODATE' in table 'VIEW_PO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_PO_REPORT.PODATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POVENDORCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_PO_REPORT.POVENDORCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POVENDORCODE' in table 'VIEW_PO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_PO_REPORT.POVENDORCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POVALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_PO_REPORT.POVALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POVALUE' in table 'VIEW_PO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_PO_REPORT.POVALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENDORNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_PO_REPORT.VENDORNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENDORNAME' in table 'VIEW_PO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_PO_REPORT.VENDORNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONONull() As Boolean
            Return Me.IsNull(Me.tableVIEW_PO_REPORT.PONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONONull()
            Me(Me.tableVIEW_PO_REPORT.PONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_PO_REPORT.PODATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODATENull()
            Me(Me.tableVIEW_PO_REPORT.PODATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOVENDORCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_PO_REPORT.POVENDORCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOVENDORCODENull()
            Me(Me.tableVIEW_PO_REPORT.POVENDORCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOVALUENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_PO_REPORT.POVALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOVALUENull()
            Me(Me.tableVIEW_PO_REPORT.POVALUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENDORNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_PO_REPORT.VENDORNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENDORNAMENull()
            Me(Me.tableVIEW_PO_REPORT.VENDORNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEW_HO_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_HO_REPORT As VIEW_HO_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_HO_REPORT = CType(Me.Table,VIEW_HO_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.GRNNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNNO' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.GRNNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.GRNDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDETAILS' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.GRNDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.GRNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDATE' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.GRNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_HO_REPORT.TOTALAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALAMOUNT' in table 'VIEW_HO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_HO_REPORT.TOTALAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNNONull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.GRNNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNNONull()
            Me(Me.tableVIEW_HO_REPORT.GRNNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.GRNDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDETAILSNull()
            Me(Me.tableVIEW_HO_REPORT.GRNDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.GRNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDATENull()
            Me(Me.tableVIEW_HO_REPORT.GRNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVIEW_HO_REPORT.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVIEW_HO_REPORT.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_HO_REPORT.TOTALAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALAMOUNTNull()
            Me(Me.tableVIEW_HO_REPORT.TOTALAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PO_WORKINDENTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePO_WORKINDENT As PO_WORKINDENTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePO_WORKINDENT = CType(Me.Table,PO_WORKINDENTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTOID() As Decimal
            Get
                Return CType(Me(Me.tablePO_WORKINDENT.AUTOIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.AUTOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.INDENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_NO' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.INDENTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTDATE' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.INDENTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.WORKDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKDESC' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.WORKDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REQUESTEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.REQUESTEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQUESTEDBY' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.REQUESTEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.INDENTSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTSTATUS' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.INDENTSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVEDBY' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPLETIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.COMPLETIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLETIONDATE' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.COMPLETIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.VOIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOID' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.VOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.ADDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDUSER' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.ADDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.UPDATEUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATEUSER' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.UPDATEUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePO_WORKINDENT.UPDATEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATEDATE' in table 'PO_WORKINDENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePO_WORKINDENT.UPDATEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_NONull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.INDENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_NONull()
            Me(Me.tablePO_WORKINDENT.INDENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTDATENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.INDENTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTDATENull()
            Me(Me.tablePO_WORKINDENT.INDENTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKDESCNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.WORKDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKDESCNull()
            Me(Me.tablePO_WORKINDENT.WORKDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREQUESTEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.REQUESTEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREQUESTEDBYNull()
            Me(Me.tablePO_WORKINDENT.REQUESTEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTSTATUSNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.INDENTSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTSTATUSNull()
            Me(Me.tablePO_WORKINDENT.INDENTSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDBYNull()
            Me(Me.tablePO_WORKINDENT.APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPLETIONDATENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.COMPLETIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPLETIONDATENull()
            Me(Me.tablePO_WORKINDENT.COMPLETIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tablePO_WORKINDENT.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tablePO_WORKINDENT.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKSNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKSNull()
            Me(Me.tablePO_WORKINDENT.REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.VOIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDNull()
            Me(Me.tablePO_WORKINDENT.VOIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDUSERNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.ADDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDUSERNull()
            Me(Me.tablePO_WORKINDENT.ADDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tablePO_WORKINDENT.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEUSERNull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.UPDATEUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEUSERNull()
            Me(Me.tablePO_WORKINDENT.UPDATEUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEDATENull() As Boolean
            Return Me.IsNull(Me.tablePO_WORKINDENT.UPDATEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEDATENull()
            Me(Me.tablePO_WORKINDENT.UPDATEDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_POPRINT_RPTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_POPRINT_RPT As VW_POPRINT_RPTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_POPRINT_RPT = CType(Me.Table,VW_POPRINT_RPTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property autoid() As Decimal
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.autoidColumn),Decimal)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.autoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PONO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PONO' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PODATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODATE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PODATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.CATEGORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.CATEGORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.INDENTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTNO' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.INDENTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.INDENTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTDATE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.INDENTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTH_DOCNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.AUTH_DOCNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTH_DOCNO' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.AUTH_DOCNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUOTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.QUOTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUOTNO' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.QUOTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEPARTMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.DEPARTMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPARTMENT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.DEPARTMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APPROVEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.APPROVEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPROVEDBY' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.APPROVEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTATUS' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POTOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POTOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POTOTAL' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_VAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.TOT_VATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_VAT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.TOT_VATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_TAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.TOT_TAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_TAX' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.TOT_TAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOT_DISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.TOT_DISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_DISCOUNT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.TOT_DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADVANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ADVANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADVANCE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ADVANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property overalldisc() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.overalldiscColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'overalldisc' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.overalldiscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POCF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POCFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POCF' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POCFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POTRANSPORT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POTRANSPORTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POTRANSPORT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POTRANSPORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODELIVERYAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PODELIVERYAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODELIVERYAMT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PODELIVERYAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAYMENTTERMS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENTTERMS' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POREMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POREMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POREMARKS' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POREMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELIVERYTERMS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DELIVERYTERMS' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.DISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCOUNT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VATAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.VATAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VATAMT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.VATAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.VATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.VATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.DISCAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCAMT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.DISCAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.AMOUNT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT1' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.AMOUNT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FREEZE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.FREEZEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FREEZE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.FREEZEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ADDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDUSER' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ADDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATEUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.UPDATEUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATEUSER' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.UPDATEUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATETIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.UPDATETIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATETIME' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.UPDATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBJECT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.SUBJECTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBJECT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.SUBJECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POCST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POCSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POCST' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POCSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POED' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POMODVAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POMODVATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POMODVAT' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POMODVATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POPTAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POPTAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POPTAX' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POPTAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POOCTRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POOCTRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOCTRA' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POOCTRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POINSURANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POINSURANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POINSURANCE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POINSURANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POLST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POLSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POLST' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POLSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POADVPERC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POADVPERCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POADVPERC' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POADVPERCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSALET() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.POSALETColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSALET' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.POSALETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODESPMODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PODESPMODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODESPMODE' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PODESPMODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODOCSTHROUGH() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PODOCSTHROUGHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODOCSTHROUGH' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PODOCSTHROUGHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.EDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.EDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.CSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CST' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.CSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODVATVAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.MODVATVALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODVATVAL' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.MODVATVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quot_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.quot_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quot_date' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.quot_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property poquotno() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.poquotnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poquotno' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.poquotnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ser_Ch() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.ser_ChColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ser_Ch' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.ser_ChColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WARRANTY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.WARRANTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WARRANTY' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.WARRANTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DELIVERYTERMDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DELIVERYTERMDESC' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAYMENTTERMDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENTTERMDESC' in table 'VW_POPRINT_RPT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorcode() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.vendorcodeColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.vendorcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorname() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.vendornameColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.vendornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address1() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.address1Column),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address2() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.address2Column),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address3() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.address3Column),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.address3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property city() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.cityColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pincode() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.pincodeColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.pincodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property email() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.emailColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property phone1() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.phone1Column),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.phone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property phone2() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.phone2Column),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.phone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fax() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.faxColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactperson() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.contactpersonColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.contactpersonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tinno() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.tinnoColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.tinnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property panno() As String
            Get
                Return CType(Me(Me.tableVW_POPRINT_RPT.pannoColumn),String)
            End Get
            Set
                Me(Me.tableVW_POPRINT_RPT.pannoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVW_POPRINT_RPT.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONONull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONONull()
            Me(Me.tableVW_POPRINT_RPT.PONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODATENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PODATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODATENull()
            Me(Me.tableVW_POPRINT_RPT.PODATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORYNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.CATEGORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORYNull()
            Me(Me.tableVW_POPRINT_RPT.CATEGORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTNONull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.INDENTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTNONull()
            Me(Me.tableVW_POPRINT_RPT.INDENTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.INDENTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTDATENull()
            Me(Me.tableVW_POPRINT_RPT.INDENTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVW_POPRINT_RPT.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVW_POPRINT_RPT.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTH_DOCNONull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.AUTH_DOCNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTH_DOCNONull()
            Me(Me.tableVW_POPRINT_RPT.AUTH_DOCNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUOTNONull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.QUOTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUOTNONull()
            Me(Me.tableVW_POPRINT_RPT.QUOTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEPARTMENTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.DEPARTMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEPARTMENTNull()
            Me(Me.tableVW_POPRINT_RPT.DEPARTMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPPROVEDBYNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.APPROVEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPPROVEDBYNull()
            Me(Me.tableVW_POPRINT_RPT.APPROVEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTATUSNull()
            Me(Me.tableVW_POPRINT_RPT.POSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOTOTALNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOTOTALNull()
            Me(Me.tableVW_POPRINT_RPT.POTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_VATNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.TOT_VATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_VATNull()
            Me(Me.tableVW_POPRINT_RPT.TOT_VATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_TAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.TOT_TAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_TAXNull()
            Me(Me.tableVW_POPRINT_RPT.TOT_TAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOT_DISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.TOT_DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOT_DISCOUNTNull()
            Me(Me.tableVW_POPRINT_RPT.TOT_DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADVANCENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ADVANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADVANCENull()
            Me(Me.tableVW_POPRINT_RPT.ADVANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoveralldiscNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.overalldiscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoveralldiscNull()
            Me(Me.tableVW_POPRINT_RPT.overalldiscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOCFNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POCFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOCFNull()
            Me(Me.tableVW_POPRINT_RPT.POCFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOTRANSPORTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POTRANSPORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOTRANSPORTNull()
            Me(Me.tableVW_POPRINT_RPT.POTRANSPORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODELIVERYAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PODELIVERYAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODELIVERYAMTNull()
            Me(Me.tableVW_POPRINT_RPT.PODELIVERYAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAYMENTTERMSNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PAYMENTTERMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAYMENTTERMSNull()
            Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOREMARKSNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POREMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOREMARKSNull()
            Me(Me.tableVW_POPRINT_RPT.POREMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELIVERYTERMSNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.DELIVERYTERMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELIVERYTERMSNull()
            Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVW_POPRINT_RPT.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableVW_POPRINT_RPT.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVW_POPRINT_RPT.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableVW_POPRINT_RPT.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCOUNTNull()
            Me(Me.tableVW_POPRINT_RPT.DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVATAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.VATAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVATAMTNull()
            Me(Me.tableVW_POPRINT_RPT.VATAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVATNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.VATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVATNull()
            Me(Me.tableVW_POPRINT_RPT.VATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALNull()
            Me(Me.tableVW_POPRINT_RPT.TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.DISCAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCAMTNull()
            Me(Me.tableVW_POPRINT_RPT.DISCAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableVW_POPRINT_RPT.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNT1Null() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.AMOUNT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNT1Null()
            Me(Me.tableVW_POPRINT_RPT.AMOUNT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFREEZENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.FREEZEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFREEZENull()
            Me(Me.tableVW_POPRINT_RPT.FREEZEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDUSERNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ADDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDUSERNull()
            Me(Me.tableVW_POPRINT_RPT.ADDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tableVW_POPRINT_RPT.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATEUSERNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.UPDATEUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATEUSERNull()
            Me(Me.tableVW_POPRINT_RPT.UPDATEUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATETIMENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.UPDATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATETIMENull()
            Me(Me.tableVW_POPRINT_RPT.UPDATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBJECTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.SUBJECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBJECTNull()
            Me(Me.tableVW_POPRINT_RPT.SUBJECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOCSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POCSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOCSTNull()
            Me(Me.tableVW_POPRINT_RPT.POCSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOEDNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOEDNull()
            Me(Me.tableVW_POPRINT_RPT.POEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOMODVATNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POMODVATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOMODVATNull()
            Me(Me.tableVW_POPRINT_RPT.POMODVATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOPTAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POPTAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOPTAXNull()
            Me(Me.tableVW_POPRINT_RPT.POPTAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOOCTRANull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POOCTRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOOCTRANull()
            Me(Me.tableVW_POPRINT_RPT.POOCTRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOINSURANCENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POINSURANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOINSURANCENull()
            Me(Me.tableVW_POPRINT_RPT.POINSURANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOLSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POLSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOLSTNull()
            Me(Me.tableVW_POPRINT_RPT.POLSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOADVPERCNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POADVPERCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOADVPERCNull()
            Me(Me.tableVW_POPRINT_RPT.POADVPERCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSALETNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.POSALETColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSALETNull()
            Me(Me.tableVW_POPRINT_RPT.POSALETColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODESPMODENull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PODESPMODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODESPMODENull()
            Me(Me.tableVW_POPRINT_RPT.PODESPMODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODOCSTHROUGHNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PODOCSTHROUGHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODOCSTHROUGHNull()
            Me(Me.tableVW_POPRINT_RPT.PODOCSTHROUGHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.EDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDNull()
            Me(Me.tableVW_POPRINT_RPT.EDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.CSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTNull()
            Me(Me.tableVW_POPRINT_RPT.CSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODVATVALNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.MODVATVALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODVATVALNull()
            Me(Me.tableVW_POPRINT_RPT.MODVATVALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isquot_dateNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.quot_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setquot_dateNull()
            Me(Me.tableVW_POPRINT_RPT.quot_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspoquotnoNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.poquotnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpoquotnoNull()
            Me(Me.tableVW_POPRINT_RPT.poquotnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isser_ChNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.ser_ChColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setser_ChNull()
            Me(Me.tableVW_POPRINT_RPT.ser_ChColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWARRANTYNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.WARRANTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWARRANTYNull()
            Me(Me.tableVW_POPRINT_RPT.WARRANTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDELIVERYTERMDESCNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.DELIVERYTERMDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDELIVERYTERMDESCNull()
            Me(Me.tableVW_POPRINT_RPT.DELIVERYTERMDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAYMENTTERMDESCNull() As Boolean
            Return Me.IsNull(Me.tableVW_POPRINT_RPT.PAYMENTTERMDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAYMENTTERMDESCNull()
            Me(Me.tableVW_POPRINT_RPT.PAYMENTTERMDESCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_PO_POBILL_DETRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_PO_POBILL_DET As VW_PO_POBILL_DETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_PO_POBILL_DET = CType(Me.Table,VW_PO_POBILL_DETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pono() As String
            Get
                Return CType(Me(Me.tableVW_PO_POBILL_DET.ponoColumn),String)
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.ponoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL_DET.podateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podate' in table 'VW_PO_POBILL_DET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.podateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TaxDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL_DET.TaxDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxDesc' in table 'VW_PO_POBILL_DET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.TaxDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property taxper() As Decimal
            Get
                Return CType(Me(Me.tableVW_PO_POBILL_DET.taxperColumn),Decimal)
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.taxperColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_POBILL_DET.TaxamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxamt' in table 'VW_PO_POBILL_DET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.TaxamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Torder() As Integer
            Get
                Return CType(Me(Me.tableVW_PO_POBILL_DET.TorderColumn),Integer)
            End Get
            Set
                Me(Me.tableVW_PO_POBILL_DET.TorderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodateNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL_DET.podateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodateNull()
            Me(Me.tableVW_PO_POBILL_DET.podateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxDescNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL_DET.TaxDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxDescNull()
            Me(Me.tableVW_PO_POBILL_DET.TaxDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxamtNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_POBILL_DET.TaxamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxamtNull()
            Me(Me.tableVW_PO_POBILL_DET.TaxamtColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_pending_authRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_pending_auth As Vw_pending_authDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_pending_auth = CType(Me.Table,Vw_pending_authDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.INDENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_NO' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.INDENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_DATE' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.INDENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fromStoreCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.fromStoreCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fromStoreCode' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.fromStoreCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORELOCATIONNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_pending_auth.STORELOCATIONNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORELOCATIONNAME' in table 'Vw_pending_auth' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_pending_auth.STORELOCATIONNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_NONull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.INDENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_NONull()
            Me(Me.tableVw_pending_auth.INDENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.INDENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_DATENull()
            Me(Me.tableVw_pending_auth.INDENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVw_pending_auth.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVw_pending_auth.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVw_pending_auth.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfromStoreCodeNull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.fromStoreCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfromStoreCodeNull()
            Me(Me.tableVw_pending_auth.fromStoreCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORELOCATIONNAMENull() As Boolean
            Return Me.IsNull(Me.tableVw_pending_auth.STORELOCATIONNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORELOCATIONNAMENull()
            Me(Me.tableVw_pending_auth.STORELOCATIONNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_INDGRNITEMSRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_INDGRNITEMS As Vw_INDGRNITEMSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_INDGRNITEMS = CType(Me.Table,Vw_INDGRNITEMSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.INDENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_NO' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.INDENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_DATE' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.INDENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndetails() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.GrndetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndetails' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.GrndetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.GrndateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndate' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.GrndateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property indQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.indQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indQty' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.indQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property grnQTy() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.grnQTyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'grnQTy' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.grnQTyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pendingQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.pendingQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pendingQty' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.pendingQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inditemtp() As String
            Get
                Return CType(Me(Me.tableVw_INDGRNITEMS.inditemtpColumn),String)
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.inditemtpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property store() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_INDGRNITEMS.storeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'store' in table 'Vw_INDGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_INDGRNITEMS.storeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_NONull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.INDENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_NONull()
            Me(Me.tableVw_INDGRNITEMS.INDENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.INDENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_DATENull()
            Me(Me.tableVw_INDGRNITEMS.INDENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndetailsNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.GrndetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndetailsNull()
            Me(Me.tableVw_INDGRNITEMS.GrndetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndateNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.GrndateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndateNull()
            Me(Me.tableVw_INDGRNITEMS.GrndateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVw_INDGRNITEMS.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVw_INDGRNITEMS.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsindQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.indQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetindQtyNull()
            Me(Me.tableVw_INDGRNITEMS.indQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgrnQTyNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.grnQTyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgrnQTyNull()
            Me(Me.tableVw_INDGRNITEMS.grnQTyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspendingQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.pendingQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpendingQtyNull()
            Me(Me.tableVw_INDGRNITEMS.pendingQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstoreNull() As Boolean
            Return Me.IsNull(Me.tableVw_INDGRNITEMS.storeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstoreNull()
            Me(Me.tableVw_INDGRNITEMS.storeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_Indent_GRNRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_Indent_GRN As Vw_Indent_GRNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_Indent_GRN = CType(Me.Table,Vw_Indent_GRNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Return CType(Me(Me.tableVw_Indent_GRN.INDENT_NOColumn),String)
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Indent_GRN.INDENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_DATE' in table 'Vw_Indent_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.INDENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORELOCATIONNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Indent_GRN.STORELOCATIONNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORELOCATIONNAME' in table 'Vw_Indent_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.STORELOCATIONNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fromStoreCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Indent_GRN.fromStoreCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fromStoreCode' in table 'Vw_Indent_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.fromStoreCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndetails() As String
            Get
                Return CType(Me(Me.tableVw_Indent_GRN.GrndetailsColumn),String)
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.GrndetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property indtype() As String
            Get
                Return CType(Me(Me.tableVw_Indent_GRN.indtypeColumn),String)
            End Get
            Set
                Me(Me.tableVw_Indent_GRN.indtypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Indent_GRN.INDENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_DATENull()
            Me(Me.tableVw_Indent_GRN.INDENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORELOCATIONNAMENull() As Boolean
            Return Me.IsNull(Me.tableVw_Indent_GRN.STORELOCATIONNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORELOCATIONNAMENull()
            Me(Me.tableVw_Indent_GRN.STORELOCATIONNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfromStoreCodeNull() As Boolean
            Return Me.IsNull(Me.tableVw_Indent_GRN.fromStoreCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfromStoreCodeNull()
            Me(Me.tableVw_Indent_GRN.fromStoreCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_PO_GRNRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_PO_GRN As Vw_PO_GRNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_PO_GRN = CType(Me.Table,Vw_PO_GRNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pono() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.ponoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pono' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.ponoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.podateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podate' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.podateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podepartment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.podepartmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podepartment' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.podepartmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property povalue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.povalueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'povalue' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.povalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property category() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.categoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'category' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.categoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subject() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.subjectColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subject' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.subjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUOT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.QUOT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUOT_DATE' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.QUOT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property povnm() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.povnmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'povnm' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.povnmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndetails() As String
            Get
                Return CType(Me(Me.tableVw_PO_GRN.GrndetailsColumn),String)
            End Get
            Set
                Me(Me.tableVw_PO_GRN.GrndetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PO_GRN.GrndateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndate' in table 'Vw_PO_GRN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PO_GRN.GrndateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POTYPE() As String
            Get
                Return CType(Me(Me.tableVw_PO_GRN.POTYPEColumn),String)
            End Get
            Set
                Me(Me.tableVw_PO_GRN.POTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsponoNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.ponoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetponoNull()
            Me(Me.tableVw_PO_GRN.ponoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodateNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.podateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodateNull()
            Me(Me.tableVw_PO_GRN.podateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodepartmentNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.podepartmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodepartmentNull()
            Me(Me.tableVw_PO_GRN.podepartmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspovalueNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.povalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpovalueNull()
            Me(Me.tableVw_PO_GRN.povalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscategoryNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.categoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcategoryNull()
            Me(Me.tableVw_PO_GRN.categoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubjectNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.subjectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubjectNull()
            Me(Me.tableVw_PO_GRN.subjectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUOT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.QUOT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUOT_DATENull()
            Me(Me.tableVw_PO_GRN.QUOT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspovnmNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.povnmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpovnmNull()
            Me(Me.tableVw_PO_GRN.povnmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndateNull() As Boolean
            Return Me.IsNull(Me.tableVw_PO_GRN.GrndateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndateNull()
            Me(Me.tableVw_PO_GRN.GrndateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_POGRNITEMSRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_POGRNITEMS As Vw_POGRNITEMSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_POGRNITEMS = CType(Me.Table,Vw_POGRNITEMSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.INDENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_NO' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.INDENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_DATE' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.INDENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndetails() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.GrndetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndetails' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.GrndetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.GrndateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndate' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.GrndateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property indQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.indQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indQty' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.indQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property grnQTy() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.grnQTyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'grnQTy' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.grnQTyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pendingQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS.pendingQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pendingQty' in table 'Vw_POGRNITEMS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.pendingQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inditemtp() As String
            Get
                Return CType(Me(Me.tableVw_POGRNITEMS.inditemtpColumn),String)
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS.inditemtpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_NONull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.INDENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_NONull()
            Me(Me.tableVw_POGRNITEMS.INDENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.INDENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_DATENull()
            Me(Me.tableVw_POGRNITEMS.INDENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndetailsNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.GrndetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndetailsNull()
            Me(Me.tableVw_POGRNITEMS.GrndetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndateNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.GrndateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndateNull()
            Me(Me.tableVw_POGRNITEMS.GrndateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVw_POGRNITEMS.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVw_POGRNITEMS.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsindQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.indQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetindQtyNull()
            Me(Me.tableVw_POGRNITEMS.indQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgrnQTyNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.grnQTyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgrnQTyNull()
            Me(Me.tableVw_POGRNITEMS.grnQTyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspendingQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS.pendingQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpendingQtyNull()
            Me(Me.tableVw_POGRNITEMS.pendingQtyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_POGRNITEMS_pendingRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_POGRNITEMS_pending As Vw_POGRNITEMS_pendingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_POGRNITEMS_pending = CType(Me.Table,Vw_POGRNITEMS_pendingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pono() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.ponoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pono' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.ponoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.itemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemcode' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.itemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemname() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.itemnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemname' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.itemnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uom() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.uomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uom' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.uomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.quantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndetails() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.GrndetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndetails' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.GrndetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grndate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.GrndateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grndate' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.GrndateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property guom() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.guomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'guom' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.guomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pendingQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_POGRNITEMS_pending.pendingQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pendingQty' in table 'Vw_POGRNITEMS_pending' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_POGRNITEMS_pending.pendingQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsponoNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.ponoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetponoNull()
            Me(Me.tableVw_POGRNITEMS_pending.ponoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemcodeNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.itemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemcodeNull()
            Me(Me.tableVw_POGRNITEMS_pending.itemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemnameNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.itemnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemnameNull()
            Me(Me.tableVw_POGRNITEMS_pending.itemnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuomNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.uomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuomNull()
            Me(Me.tableVw_POGRNITEMS_pending.uomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsquantityNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetquantityNull()
            Me(Me.tableVw_POGRNITEMS_pending.quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndetailsNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.GrndetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndetailsNull()
            Me(Me.tableVw_POGRNITEMS_pending.GrndetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrndateNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.GrndateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrndateNull()
            Me(Me.tableVw_POGRNITEMS_pending.GrndateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsguomNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.guomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetguomNull()
            Me(Me.tableVw_POGRNITEMS_pending.guomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tableVw_POGRNITEMS_pending.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspendingQtyNull() As Boolean
            Return Me.IsNull(Me.tableVw_POGRNITEMS_pending.pendingQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpendingQtyNull()
            Me(Me.tableVw_POGRNITEMS_pending.pendingQtyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_PO_WOBBILL2Row
        Inherits Global.System.Data.DataRow
        
        Private tableVW_PO_WOBBILL2 As VW_PO_WOBBILL2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_PO_WOBBILL2 = CType(Me.Table,VW_PO_WOBBILL2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property wodetails() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.wodetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wodetails' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.wodetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property woBDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.woBDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'woBDATE' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.woBDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property city() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'city' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property state() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'state' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pincode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.pincodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pincode' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.pincodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.mobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mobile' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERSUBJECT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.ORDERSUBJECTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERSUBJECT' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.ORDERSUBJECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property requestedby() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.requestedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'requestedby' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.requestedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property approvedby() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.approvedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'approvedby' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.approvedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.SINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINO' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.SINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property workdescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.workdescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'workdescription' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.workdescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.UNITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNIT' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property void() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.voidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'void' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.voidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTOID() As Integer
            Get
                Return CType(Me(Me.tableVW_PO_WOBBILL2.AUTOIDColumn),Integer)
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.AUTOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATETIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.UPDATETIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATETIME' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.UPDATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.INDENT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_NO' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.INDENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.INDENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENT_DATE' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.INDENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property payTerms() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.payTermsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payTerms' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.payTermsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property compDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_PO_WOBBILL2.compDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compDate' in table 'VW_PO_WOBBILL2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PO_WOBBILL2.compDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IswodetailsNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.wodetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetwodetailsNull()
            Me(Me.tableVW_PO_WOBBILL2.wodetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IswoBDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.woBDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetwoBDATENull()
            Me(Me.tableVW_PO_WOBBILL2.woBDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaddressNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaddressNull()
            Me(Me.tableVW_PO_WOBBILL2.addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscityNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcityNull()
            Me(Me.tableVW_PO_WOBBILL2.cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstateNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstateNull()
            Me(Me.tableVW_PO_WOBBILL2.stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspincodeNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.pincodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpincodeNull()
            Me(Me.tableVW_PO_WOBBILL2.pincodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetemailNull()
            Me(Me.tableVW_PO_WOBBILL2.emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmobileNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.mobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmobileNull()
            Me(Me.tableVW_PO_WOBBILL2.mobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVW_PO_WOBBILL2.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVW_PO_WOBBILL2.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERSUBJECTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.ORDERSUBJECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERSUBJECTNull()
            Me(Me.tableVW_PO_WOBBILL2.ORDERSUBJECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrequestedbyNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.requestedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrequestedbyNull()
            Me(Me.tableVW_PO_WOBBILL2.requestedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsapprovedbyNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.approvedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetapprovedbyNull()
            Me(Me.tableVW_PO_WOBBILL2.approvedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKSNull()
            Me(Me.tableVW_PO_WOBBILL2.REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSINONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.SINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSINONull()
            Me(Me.tableVW_PO_WOBBILL2.SINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsworkdescriptionNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.workdescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetworkdescriptionNull()
            Me(Me.tableVW_PO_WOBBILL2.workdescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNITNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.UNITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNITNull()
            Me(Me.tableVW_PO_WOBBILL2.UNITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVW_PO_WOBBILL2.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableVW_PO_WOBBILL2.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableVW_PO_WOBBILL2.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvoidNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.voidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvoidNull()
            Me(Me.tableVW_PO_WOBBILL2.voidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tableVW_PO_WOBBILL2.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATETIMENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.UPDATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATETIMENull()
            Me(Me.tableVW_PO_WOBBILL2.UPDATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_NONull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.INDENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_NONull()
            Me(Me.tableVW_PO_WOBBILL2.INDENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.INDENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENT_DATENull()
            Me(Me.tableVW_PO_WOBBILL2.INDENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspayTermsNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.payTermsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpayTermsNull()
            Me(Me.tableVW_PO_WOBBILL2.payTermsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscompDateNull() As Boolean
            Return Me.IsNull(Me.tableVW_PO_WOBBILL2.compDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcompDateNull()
            Me(Me.tableVW_PO_WOBBILL2.compDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEW_WO_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_WO_REPORT As VIEW_WO_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_WO_REPORT = CType(Me.Table,VIEW_WO_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WOBDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.WOBDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WOBDETAILS' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.WOBDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WOBDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.WOBDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WOBDATE' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.WOBDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERSUBJECT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.ORDERSUBJECTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERSUBJECT' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.ORDERSUBJECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.TOTALAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALAMT' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.TOTALAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WO_REPORT.remarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'remarks' in table 'VIEW_WO_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WO_REPORT.remarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWOBDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.WOBDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWOBDETAILSNull()
            Me(Me.tableVIEW_WO_REPORT.WOBDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWOBDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.WOBDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWOBDATENull()
            Me(Me.tableVIEW_WO_REPORT.WOBDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVIEW_WO_REPORT.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVIEW_WO_REPORT.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERSUBJECTNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.ORDERSUBJECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERSUBJECTNull()
            Me(Me.tableVIEW_WO_REPORT.ORDERSUBJECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALAMTNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.TOTALAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALAMTNull()
            Me(Me.tableVIEW_WO_REPORT.TOTALAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsremarksNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WO_REPORT.remarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetremarksNull()
            Me(Me.tableVIEW_WO_REPORT.remarksColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PO_VIEW_VENDOR_CATEGORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PO_VIEW_VENDOR_CATEGORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PO_VIEW_VENDOR_CATEGORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PO_VIEW_VENDOR_CATEGORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_PO_POBILLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_PO_POBILLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_PO_POBILLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_PO_POBILLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEW_PO_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_PO_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEW_PO_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEW_PO_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEW_HO_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_HO_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEW_HO_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEW_HO_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PO_WORKINDENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PO_WORKINDENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PO_WORKINDENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PO_WORKINDENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_POPRINT_RPTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_POPRINT_RPTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_POPRINT_RPTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_POPRINT_RPTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_PO_POBILL_DETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_PO_POBILL_DETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_PO_POBILL_DETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_PO_POBILL_DETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_pending_authRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_pending_authRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_pending_authRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_pending_authRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_INDGRNITEMSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_INDGRNITEMSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_INDGRNITEMSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_INDGRNITEMSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_Indent_GRNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_Indent_GRNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_Indent_GRNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_Indent_GRNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_PO_GRNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_PO_GRNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_PO_GRNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_PO_GRNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_POGRNITEMSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_POGRNITEMSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_POGRNITEMSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_POGRNITEMSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Vw_POGRNITEMS_pendingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_POGRNITEMS_pendingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Vw_POGRNITEMS_pendingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_POGRNITEMS_pendingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_PO_WOBBILL2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_PO_WOBBILL2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_PO_WOBBILL2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_PO_WOBBILL2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEW_WO_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_WO_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEW_WO_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEW_WO_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ndatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PO_VIEW_VENDOR_CATEGORYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PO_VIEW_VENDOR_CATEGORY"
            tableMapping.ColumnMappings.Add("TABNAME", "TABNAME")
            tableMapping.ColumnMappings.Add("vendorcode", "vendorcode")
            tableMapping.ColumnMappings.Add("vendorname", "vendorname")
            tableMapping.ColumnMappings.Add("address", "address")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("state", "state")
            tableMapping.ColumnMappings.Add("SLTYPE", "SLTYPE")
            tableMapping.ColumnMappings.Add("PINCODE", "PINCODE")
            tableMapping.ColumnMappings.Add("PHONE", "PHONE")
            tableMapping.ColumnMappings.Add("MOBILE", "MOBILE")
            tableMapping.ColumnMappings.Add("FAX", "FAX")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("CONTACTPERSON", "CONTACTPERSON")
            tableMapping.ColumnMappings.Add("VATNO", "VATNO")
            tableMapping.ColumnMappings.Add("CSTNO", "CSTNO")
            tableMapping.ColumnMappings.Add("TINNO", "TINNO")
            tableMapping.ColumnMappings.Add("PANNO", "PANNO")
            tableMapping.ColumnMappings.Add("category", "category")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.kga1314liveConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TABNAME, vendorcode, vendorname, address, city, state, SLTYPE, PINCODE, PH"& _ 
                "ONE, MOBILE, FAX, EMAIL, CONTACTPERSON, VATNO, CSTNO, TINNO, PANNO, category FRO"& _ 
                "M dbo.PO_VIEW_VENDOR_CATEGORY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.PO_VIEW_VENDOR_CATEGORYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.PO_VIEW_VENDOR_CATEGORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.PO_VIEW_VENDOR_CATEGORYDataTable = New ndataset.PO_VIEW_VENDOR_CATEGORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_PO_POBILLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_PO_POBILL"
            tableMapping.ColumnMappings.Add("PONO", "PONO")
            tableMapping.ColumnMappings.Add("PODATE", "PODATE")
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY")
            tableMapping.ColumnMappings.Add("INDENTNO", "INDENTNO")
            tableMapping.ColumnMappings.Add("INDENTDATE", "INDENTDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("AUTH_DOCNO", "AUTH_DOCNO")
            tableMapping.ColumnMappings.Add("QUOTNO", "QUOTNO")
            tableMapping.ColumnMappings.Add("DEPARTMENT", "DEPARTMENT")
            tableMapping.ColumnMappings.Add("APPROVEDBY", "APPROVEDBY")
            tableMapping.ColumnMappings.Add("POSTATUS", "POSTATUS")
            tableMapping.ColumnMappings.Add("POTOTAL", "POTOTAL")
            tableMapping.ColumnMappings.Add("TOT_VAT", "TOT_VAT")
            tableMapping.ColumnMappings.Add("TOT_TAX", "TOT_TAX")
            tableMapping.ColumnMappings.Add("TOT_DISCOUNT", "TOT_DISCOUNT")
            tableMapping.ColumnMappings.Add("ADVANCE", "ADVANCE")
            tableMapping.ColumnMappings.Add("overalldisc", "overalldisc")
            tableMapping.ColumnMappings.Add("POCF", "POCF")
            tableMapping.ColumnMappings.Add("POTRANSPORT", "POTRANSPORT")
            tableMapping.ColumnMappings.Add("PODELIVERYAMT", "PODELIVERYAMT")
            tableMapping.ColumnMappings.Add("PAYMENTTERMS", "PAYMENTTERMS")
            tableMapping.ColumnMappings.Add("POREMARKS", "POREMARKS")
            tableMapping.ColumnMappings.Add("DELIVERYTERMS", "DELIVERYTERMS")
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS")
            tableMapping.ColumnMappings.Add("ADDRESS2", "ADDRESS2")
            tableMapping.ColumnMappings.Add("ADDRESS3", "ADDRESS3")
            tableMapping.ColumnMappings.Add("CITY", "CITY")
            tableMapping.ColumnMappings.Add("STATE", "STATE")
            tableMapping.ColumnMappings.Add("MOBILENO", "MOBILENO")
            tableMapping.ColumnMappings.Add("PINCODE", "PINCODE")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("RATE", "RATE")
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT")
            tableMapping.ColumnMappings.Add("VATAMT", "VATAMT")
            tableMapping.ColumnMappings.Add("VAT", "VAT")
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL")
            tableMapping.ColumnMappings.Add("DISCAMT", "DISCAMT")
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT")
            tableMapping.ColumnMappings.Add("FREEZE", "FREEZE")
            tableMapping.ColumnMappings.Add("ADDUSER", "ADDUSER")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER")
            tableMapping.ColumnMappings.Add("UPDATETIME", "UPDATETIME")
            tableMapping.ColumnMappings.Add("SUBJECT", "SUBJECT")
            tableMapping.ColumnMappings.Add("FAX", "FAX")
            tableMapping.ColumnMappings.Add("CSTNO", "CSTNO")
            tableMapping.ColumnMappings.Add("TINNO", "TINNO")
            tableMapping.ColumnMappings.Add("PANNO", "PANNO")
            tableMapping.ColumnMappings.Add("CONTACTPERSON", "CONTACTPERSON")
            tableMapping.ColumnMappings.Add("POCST", "POCST")
            tableMapping.ColumnMappings.Add("POED", "POED")
            tableMapping.ColumnMappings.Add("POMODVAT", "POMODVAT")
            tableMapping.ColumnMappings.Add("POPTAX", "POPTAX")
            tableMapping.ColumnMappings.Add("POOCTRA", "POOCTRA")
            tableMapping.ColumnMappings.Add("POINSURANCE", "POINSURANCE")
            tableMapping.ColumnMappings.Add("POLST", "POLST")
            tableMapping.ColumnMappings.Add("POADVPERC", "POADVPERC")
            tableMapping.ColumnMappings.Add("POSALET", "POSALET")
            tableMapping.ColumnMappings.Add("PODESPMODE", "PODESPMODE")
            tableMapping.ColumnMappings.Add("PODOCSTHROUGH", "PODOCSTHROUGH")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.kga1314liveConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PONO, PODATE, CATEGORY, INDENTNO, INDENTDATE, SUPPLIERCODE, SUPPLIERNAME, "& _ 
                "AUTH_DOCNO, QUOTNO, DEPARTMENT, APPROVEDBY, POSTATUS, POTOTAL, TOT_VAT, TOT_TAX,"& _ 
                " TOT_DISCOUNT, ADVANCE, overalldisc, POCF, POTRANSPORT, PODELIVERYAMT, PAYMENTTE"& _ 
                "RMS, POREMARKS, DELIVERYTERMS, ADDRESS, ADDRESS2, ADDRESS3, CITY, STATE, MOBILEN"& _ 
                "O, PINCODE, EMAIL, ITEMCODE, ITEMNAME, UOM, QTY, RATE, DISCOUNT, VATAMT, VAT, TO"& _ 
                "TAL, DISCAMT, AMOUNT, FREEZE, ADDUSER, ADDDATE, UPDATEUSER, UPDATETIME, SUBJECT,"& _ 
                " FAX, CSTNO, TINNO, PANNO, CONTACTPERSON, POCST, POED, POMODVAT, POPTAX, POOCTRA"& _ 
                ", POINSURANCE, POLST, POADVPERC, POSALET, PODESPMODE, PODOCSTHROUGH FROM dbo.VW_"& _ 
                "PO_POBILL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VW_PO_POBILLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VW_PO_POBILLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VW_PO_POBILLDataTable = New ndataset.VW_PO_POBILLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VIEW_PO_REPORTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VIEW_PO_REPORT"
            tableMapping.ColumnMappings.Add("PONO", "PONO")
            tableMapping.ColumnMappings.Add("PODATE", "PODATE")
            tableMapping.ColumnMappings.Add("POVENDORCODE", "POVENDORCODE")
            tableMapping.ColumnMappings.Add("POVALUE", "POVALUE")
            tableMapping.ColumnMappings.Add("VENDORNAME", "VENDORNAME")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.kga1314liveConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PONO, PODATE, POVENDORCODE, POVALUE, VENDORNAME FROM dbo.VIEW_PO_REPORT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VIEW_PO_REPORTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VIEW_PO_REPORTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VIEW_PO_REPORTDataTable = New ndataset.VIEW_PO_REPORTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VIEW_HO_REPORTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VIEW_HO_REPORT"
            tableMapping.ColumnMappings.Add("GRNNO", "GRNNO")
            tableMapping.ColumnMappings.Add("GRNDETAILS", "GRNDETAILS")
            tableMapping.ColumnMappings.Add("GRNDATE", "GRNDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("TOTALAMOUNT", "TOTALAMOUNT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.kga1314liveConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GRNNO, GRNDETAILS, GRNDATE, SUPPLIERCODE, SUPPLIERNAME, TOTALAMOUNT FROM d"& _ 
                "bo.VIEW_HO_REPORT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VIEW_HO_REPORTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VIEW_HO_REPORTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VIEW_HO_REPORTDataTable = New ndataset.VIEW_HO_REPORTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PO_WORKINDENTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PO_WORKINDENT"
            tableMapping.ColumnMappings.Add("AUTOID", "AUTOID")
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENTDATE", "INDENTDATE")
            tableMapping.ColumnMappings.Add("WORKDESC", "WORKDESC")
            tableMapping.ColumnMappings.Add("REQUESTEDBY", "REQUESTEDBY")
            tableMapping.ColumnMappings.Add("INDENTSTATUS", "INDENTSTATUS")
            tableMapping.ColumnMappings.Add("APPROVEDBY", "APPROVEDBY")
            tableMapping.ColumnMappings.Add("COMPLETIONDATE", "COMPLETIONDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS")
            tableMapping.ColumnMappings.Add("VOID", "VOID")
            tableMapping.ColumnMappings.Add("ADDUSER", "ADDUSER")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER")
            tableMapping.ColumnMappings.Add("UPDATEDATE", "UPDATEDATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PO_WORKINDENT] ([INDENT_NO], [INDENTDATE], [WORKDESC], [REQUES"& _ 
                "TEDBY], [INDENTSTATUS], [APPROVEDBY], [COMPLETIONDATE], [SUPPLIERCODE], [SUPPLIE"& _ 
                "RNAME], [REMARKS], [VOID], [ADDUSER], [ADDDATE], [UPDATEUSER], [UPDATEDATE]) VAL"& _ 
                "UES (@INDENT_NO, @INDENTDATE, @WORKDESC, @REQUESTEDBY, @INDENTSTATUS, @APPROVEDB"& _ 
                "Y, @COMPLETIONDATE, @SUPPLIERCODE, @SUPPLIERNAME, @REMARKS, @VOID, @ADDUSER, @AD"& _ 
                "DDATE, @UPDATEUSER, @UPDATEDATE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDENT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDENTDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDENTDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKDESC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKDESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REQUESTEDBY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REQUESTEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDENTSTATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDENTSTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APPROVEDBY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPROVEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLETIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLETIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPPLIERCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPPLIERCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPPLIERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPPLIERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REMARKS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REMARKS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDUSER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATEUSER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATEUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.MCEMETEST12062014ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AUTOID, INDENT_NO, INDENTDATE, WORKDESC, REQUESTEDBY, INDENTSTATUS, APPROV"& _ 
                "EDBY, COMPLETIONDATE, SUPPLIERCODE, SUPPLIERNAME, REMARKS, VOID, ADDUSER, ADDDAT"& _ 
                "E, UPDATEUSER, UPDATEDATE FROM dbo.PO_WORKINDENT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.PO_WORKINDENTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.PO_WORKINDENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.PO_WORKINDENTDataTable = New ndataset.PO_WORKINDENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ndataset.PO_WORKINDENTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ndataset) As Integer
            Return Me.Adapter.Update(dataSet, "PO_WORKINDENT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal INDENT_NO As String, ByVal INDENTDATE As Global.System.Nullable(Of Date), ByVal WORKDESC As String, ByVal REQUESTEDBY As String, ByVal INDENTSTATUS As String, ByVal APPROVEDBY As String, ByVal COMPLETIONDATE As Global.System.Nullable(Of Date), ByVal SUPPLIERCODE As String, ByVal SUPPLIERNAME As String, ByVal REMARKS As String, ByVal VOID As String, ByVal ADDUSER As String, ByVal ADDDATE As Global.System.Nullable(Of Date), ByVal UPDATEUSER As String, ByVal UPDATEDATE As Global.System.Nullable(Of Date)) As Integer
            If (INDENT_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(INDENT_NO,String)
            End If
            If (INDENTDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(INDENTDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (WORKDESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(WORKDESC,String)
            End If
            If (REQUESTEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(REQUESTEDBY,String)
            End If
            If (INDENTSTATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(INDENTSTATUS,String)
            End If
            If (APPROVEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(APPROVEDBY,String)
            End If
            If (COMPLETIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(COMPLETIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SUPPLIERCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SUPPLIERCODE,String)
            End If
            If (SUPPLIERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SUPPLIERNAME,String)
            End If
            If (REMARKS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(REMARKS,String)
            End If
            If (VOID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(VOID,String)
            End If
            If (ADDUSER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ADDUSER,String)
            End If
            If (ADDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ADDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (UPDATEUSER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(UPDATEUSER,String)
            End If
            If (UPDATEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(UPDATEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_POPRINT_RPTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_POPRINT_RPT"
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("autoid", "autoid")
            tableMapping.ColumnMappings.Add("PONO", "PONO")
            tableMapping.ColumnMappings.Add("PODATE", "PODATE")
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY")
            tableMapping.ColumnMappings.Add("INDENTNO", "INDENTNO")
            tableMapping.ColumnMappings.Add("INDENTDATE", "INDENTDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("AUTH_DOCNO", "AUTH_DOCNO")
            tableMapping.ColumnMappings.Add("QUOTNO", "QUOTNO")
            tableMapping.ColumnMappings.Add("DEPARTMENT", "DEPARTMENT")
            tableMapping.ColumnMappings.Add("APPROVEDBY", "APPROVEDBY")
            tableMapping.ColumnMappings.Add("POSTATUS", "POSTATUS")
            tableMapping.ColumnMappings.Add("POTOTAL", "POTOTAL")
            tableMapping.ColumnMappings.Add("TOT_VAT", "TOT_VAT")
            tableMapping.ColumnMappings.Add("TOT_TAX", "TOT_TAX")
            tableMapping.ColumnMappings.Add("TOT_DISCOUNT", "TOT_DISCOUNT")
            tableMapping.ColumnMappings.Add("ADVANCE", "ADVANCE")
            tableMapping.ColumnMappings.Add("overalldisc", "overalldisc")
            tableMapping.ColumnMappings.Add("POCF", "POCF")
            tableMapping.ColumnMappings.Add("POTRANSPORT", "POTRANSPORT")
            tableMapping.ColumnMappings.Add("PODELIVERYAMT", "PODELIVERYAMT")
            tableMapping.ColumnMappings.Add("PAYMENTTERMS", "PAYMENTTERMS")
            tableMapping.ColumnMappings.Add("POREMARKS", "POREMARKS")
            tableMapping.ColumnMappings.Add("DELIVERYTERMS", "DELIVERYTERMS")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("RATE", "RATE")
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT")
            tableMapping.ColumnMappings.Add("VATAMT", "VATAMT")
            tableMapping.ColumnMappings.Add("VAT", "VAT")
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL")
            tableMapping.ColumnMappings.Add("DISCAMT", "DISCAMT")
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT")
            tableMapping.ColumnMappings.Add("AMOUNT1", "AMOUNT1")
            tableMapping.ColumnMappings.Add("FREEZE", "FREEZE")
            tableMapping.ColumnMappings.Add("ADDUSER", "ADDUSER")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER")
            tableMapping.ColumnMappings.Add("UPDATETIME", "UPDATETIME")
            tableMapping.ColumnMappings.Add("SUBJECT", "SUBJECT")
            tableMapping.ColumnMappings.Add("POCST", "POCST")
            tableMapping.ColumnMappings.Add("POED", "POED")
            tableMapping.ColumnMappings.Add("POMODVAT", "POMODVAT")
            tableMapping.ColumnMappings.Add("POPTAX", "POPTAX")
            tableMapping.ColumnMappings.Add("POOCTRA", "POOCTRA")
            tableMapping.ColumnMappings.Add("POINSURANCE", "POINSURANCE")
            tableMapping.ColumnMappings.Add("POLST", "POLST")
            tableMapping.ColumnMappings.Add("POADVPERC", "POADVPERC")
            tableMapping.ColumnMappings.Add("POSALET", "POSALET")
            tableMapping.ColumnMappings.Add("PODESPMODE", "PODESPMODE")
            tableMapping.ColumnMappings.Add("PODOCSTHROUGH", "PODOCSTHROUGH")
            tableMapping.ColumnMappings.Add("ED", "ED")
            tableMapping.ColumnMappings.Add("CST", "CST")
            tableMapping.ColumnMappings.Add("MODVATVAL", "MODVATVAL")
            tableMapping.ColumnMappings.Add("quot_date", "quot_date")
            tableMapping.ColumnMappings.Add("poquotno", "poquotno")
            tableMapping.ColumnMappings.Add("ser_Ch", "ser_Ch")
            tableMapping.ColumnMappings.Add("WARRANTY", "WARRANTY")
            tableMapping.ColumnMappings.Add("DELIVERYTERMDESC", "DELIVERYTERMDESC")
            tableMapping.ColumnMappings.Add("PAYMENTTERMDESC", "PAYMENTTERMDESC")
            tableMapping.ColumnMappings.Add("vendorcode", "vendorcode")
            tableMapping.ColumnMappings.Add("vendorname", "vendorname")
            tableMapping.ColumnMappings.Add("address1", "address1")
            tableMapping.ColumnMappings.Add("address2", "address2")
            tableMapping.ColumnMappings.Add("address3", "address3")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("pincode", "pincode")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("phone1", "phone1")
            tableMapping.ColumnMappings.Add("phone2", "phone2")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("contactperson", "contactperson")
            tableMapping.ColumnMappings.Add("tinno", "tinno")
            tableMapping.ColumnMappings.Add("panno", "panno")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ITEMCODE, autoid, PONO, PODATE, CATEGORY, INDENTNO, INDENTDATE, SUPPLIERCO"& _ 
                "DE, SUPPLIERNAME, AUTH_DOCNO, QUOTNO, DEPARTMENT, APPROVEDBY, POSTATUS, POTOTAL,"& _ 
                " TOT_VAT, TOT_TAX, TOT_DISCOUNT, ADVANCE, overalldisc, POCF, POTRANSPORT, PODELI"& _ 
                "VERYAMT, PAYMENTTERMS, POREMARKS, DELIVERYTERMS, ITEMNAME, UOM, QTY, RATE, DISCO"& _ 
                "UNT, VATAMT, VAT, TOTAL, DISCAMT, AMOUNT, AMOUNT1, FREEZE, ADDUSER, ADDDATE, UPD"& _ 
                "ATEUSER, UPDATETIME, SUBJECT, POCST, POED, POMODVAT, POPTAX, POOCTRA, POINSURANC"& _ 
                "E, POLST, POADVPERC, POSALET, PODESPMODE, PODOCSTHROUGH, ED, CST, MODVATVAL, quo"& _ 
                "t_date, poquotno, ser_Ch, WARRANTY, DELIVERYTERMDESC, PAYMENTTERMDESC, vendorcod"& _ 
                "e, vendorname, address1, address2, address3, city, pincode, email, phone1, phone"& _ 
                "2, fax, contactperson, tinno, panno FROM dbo.VW_POPRINT_RPT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VW_POPRINT_RPTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VW_POPRINT_RPTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VW_POPRINT_RPTDataTable = New ndataset.VW_POPRINT_RPTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_PO_POBILL_DETTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_PO_POBILL_DET"
            tableMapping.ColumnMappings.Add("pono", "pono")
            tableMapping.ColumnMappings.Add("podate", "podate")
            tableMapping.ColumnMappings.Add("TaxDesc", "TaxDesc")
            tableMapping.ColumnMappings.Add("taxper", "taxper")
            tableMapping.ColumnMappings.Add("Taxamt", "Taxamt")
            tableMapping.ColumnMappings.Add("Torder", "Torder")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT pono, podate, TaxDesc, taxper, Taxamt, Torder FROM dbo.VW_PO_POBILL_DET"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VW_PO_POBILL_DETDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VW_PO_POBILL_DETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VW_PO_POBILL_DETDataTable = New ndataset.VW_PO_POBILL_DETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_pending_authTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_pending_auth"
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENT_DATE", "INDENT_DATE")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("fromStoreCode", "fromStoreCode")
            tableMapping.ColumnMappings.Add("STORELOCATIONNAME", "STORELOCATIONNAME")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INDENT_NO, INDENT_DATE, ITEMCODE, ITEMNAME, QTY, fromStoreCode, STORELOCAT"& _ 
                "IONNAME FROM dbo.Vw_pending_auth"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_pending_authDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_pending_authDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_pending_authDataTable = New ndataset.Vw_pending_authDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_INDGRNITEMSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_INDGRNITEMS"
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENT_DATE", "INDENT_DATE")
            tableMapping.ColumnMappings.Add("Grndetails", "Grndetails")
            tableMapping.ColumnMappings.Add("Grndate", "Grndate")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("indQty", "indQty")
            tableMapping.ColumnMappings.Add("grnQTy", "grnQTy")
            tableMapping.ColumnMappings.Add("pendingQty", "pendingQty")
            tableMapping.ColumnMappings.Add("inditemtp", "inditemtp")
            tableMapping.ColumnMappings.Add("store", "store")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INDENT_NO, INDENT_DATE, Grndetails, Grndate, ITEMCODE, ITEMNAME, indQty, g"& _ 
                "rnQTy, pendingQty, inditemtp, store FROM dbo.Vw_INDGRNITEMS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_INDGRNITEMSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_INDGRNITEMSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_INDGRNITEMSDataTable = New ndataset.Vw_INDGRNITEMSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_Indent_GRNTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_Indent_GRN"
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENT_DATE", "INDENT_DATE")
            tableMapping.ColumnMappings.Add("STORELOCATIONNAME", "STORELOCATIONNAME")
            tableMapping.ColumnMappings.Add("fromStoreCode", "fromStoreCode")
            tableMapping.ColumnMappings.Add("Grndetails", "Grndetails")
            tableMapping.ColumnMappings.Add("indtype", "indtype")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INDENT_NO, INDENT_DATE, STORELOCATIONNAME, fromStoreCode, Grndetails, indt"& _ 
                "ype FROM dbo.Vw_Indent_GRN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_Indent_GRNDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_Indent_GRNDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_Indent_GRNDataTable = New ndataset.Vw_Indent_GRNDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_PO_GRNTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_PO_GRN"
            tableMapping.ColumnMappings.Add("pono", "pono")
            tableMapping.ColumnMappings.Add("podate", "podate")
            tableMapping.ColumnMappings.Add("podepartment", "podepartment")
            tableMapping.ColumnMappings.Add("povalue", "povalue")
            tableMapping.ColumnMappings.Add("category", "category")
            tableMapping.ColumnMappings.Add("subject", "subject")
            tableMapping.ColumnMappings.Add("QUOT_DATE", "QUOT_DATE")
            tableMapping.ColumnMappings.Add("povnm", "povnm")
            tableMapping.ColumnMappings.Add("Grndetails", "Grndetails")
            tableMapping.ColumnMappings.Add("Grndate", "Grndate")
            tableMapping.ColumnMappings.Add("POTYPE", "POTYPE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT pono, podate, podepartment, povalue, category, subject, QUOT_DATE, povnm, "& _ 
                "Grndetails, Grndate, POTYPE FROM dbo.Vw_PO_GRN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_PO_GRNDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_PO_GRNDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_PO_GRNDataTable = New ndataset.Vw_PO_GRNDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_POGRNITEMSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_POGRNITEMS"
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENT_DATE", "INDENT_DATE")
            tableMapping.ColumnMappings.Add("Grndetails", "Grndetails")
            tableMapping.ColumnMappings.Add("Grndate", "Grndate")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("indQty", "indQty")
            tableMapping.ColumnMappings.Add("grnQTy", "grnQTy")
            tableMapping.ColumnMappings.Add("pendingQty", "pendingQty")
            tableMapping.ColumnMappings.Add("inditemtp", "inditemtp")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INDENT_NO, INDENT_DATE, Grndetails, Grndate, ITEMCODE, ITEMNAME, indQty, g"& _ 
                "rnQTy, pendingQty, inditemtp FROM dbo.Vw_POGRNITEMS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_POGRNITEMSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_POGRNITEMSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_POGRNITEMSDataTable = New ndataset.Vw_POGRNITEMSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_POGRNITEMS_pendingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_POGRNITEMS_pending"
            tableMapping.ColumnMappings.Add("pono", "pono")
            tableMapping.ColumnMappings.Add("itemcode", "itemcode")
            tableMapping.ColumnMappings.Add("itemname", "itemname")
            tableMapping.ColumnMappings.Add("uom", "uom")
            tableMapping.ColumnMappings.Add("quantity", "quantity")
            tableMapping.ColumnMappings.Add("Grndetails", "Grndetails")
            tableMapping.ColumnMappings.Add("Grndate", "Grndate")
            tableMapping.ColumnMappings.Add("guom", "guom")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("pendingQty", "pendingQty")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT pono, itemcode, itemname, uom, quantity, Grndetails, Grndate, guom, Qty, p"& _ 
                "endingQty FROM dbo.Vw_POGRNITEMS_pending"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.Vw_POGRNITEMS_pendingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.Vw_POGRNITEMS_pendingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.Vw_POGRNITEMS_pendingDataTable = New ndataset.Vw_POGRNITEMS_pendingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_PO_WOBBILL2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_PO_WOBBILL2"
            tableMapping.ColumnMappings.Add("wodetails", "wodetails")
            tableMapping.ColumnMappings.Add("woBDATE", "woBDATE")
            tableMapping.ColumnMappings.Add("address", "address")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("state", "state")
            tableMapping.ColumnMappings.Add("pincode", "pincode")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("mobile", "mobile")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("ORDERSUBJECT", "ORDERSUBJECT")
            tableMapping.ColumnMappings.Add("requestedby", "requestedby")
            tableMapping.ColumnMappings.Add("approvedby", "approvedby")
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS")
            tableMapping.ColumnMappings.Add("SINO", "SINO")
            tableMapping.ColumnMappings.Add("workdescription", "workdescription")
            tableMapping.ColumnMappings.Add("UNIT", "UNIT")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("RATE", "RATE")
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT")
            tableMapping.ColumnMappings.Add("void", "void")
            tableMapping.ColumnMappings.Add("AUTOID", "AUTOID")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("UPDATETIME", "UPDATETIME")
            tableMapping.ColumnMappings.Add("INDENT_NO", "INDENT_NO")
            tableMapping.ColumnMappings.Add("INDENT_DATE", "INDENT_DATE")
            tableMapping.ColumnMappings.Add("payTerms", "payTerms")
            tableMapping.ColumnMappings.Add("compDate", "compDate")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1516ConnectionString3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT wodetails, woBDATE, address, city, state, pincode, email, mobile, SUPPLIER"& _ 
                "CODE, SUPPLIERNAME, ORDERSUBJECT, requestedby, approvedby, REMARKS, SINO, workde"& _ 
                "scription, UNIT, QTY, RATE, AMOUNT, void, AUTOID, ADDDATE, UPDATETIME, INDENT_NO"& _ 
                ", INDENT_DATE, payTerms, compDate FROM dbo.VW_PO_WOBBILL2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VW_PO_WOBBILL2DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VW_PO_WOBBILL2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VW_PO_WOBBILL2DataTable = New ndataset.VW_PO_WOBBILL2DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VIEW_WO_REPORTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VIEW_WO_REPORT"
            tableMapping.ColumnMappings.Add("WOBDETAILS", "WOBDETAILS")
            tableMapping.ColumnMappings.Add("WOBDATE", "WOBDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("ORDERSUBJECT", "ORDERSUBJECT")
            tableMapping.ColumnMappings.Add("TOTALAMT", "TOTALAMT")
            tableMapping.ColumnMappings.Add("remarks", "remarks")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SmartCard.My.MySettings.Default.KGA1920ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT WOBDETAILS, WOBDATE, SUPPLIERCODE, SUPPLIERNAME, ORDERSUBJECT, TOTALAMT, r"& _ 
                "emarks FROM dbo.VIEW_WO_REPORT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ndataset.VIEW_WO_REPORTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ndataset.VIEW_WO_REPORTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ndataset.VIEW_WO_REPORTDataTable = New ndataset.VIEW_WO_REPORTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _pO_WORKINDENTTableAdapter As PO_WORKINDENTTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PO_WORKINDENTTableAdapter() As PO_WORKINDENTTableAdapter
            Get
                Return Me._pO_WORKINDENTTableAdapter
            End Get
            Set
                Me._pO_WORKINDENTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._pO_WORKINDENTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pO_WORKINDENTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pO_WORKINDENTTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ndataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PO_WORKINDENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pO_WORKINDENTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ndataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PO_WORKINDENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pO_WORKINDENTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ndataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PO_WORKINDENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pO_WORKINDENTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ndataset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._pO_WORKINDENTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pO_WORKINDENTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pO_WORKINDENTTableAdapter, Me._pO_WORKINDENTTableAdapter.Connection)
                    Me._pO_WORKINDENTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pO_WORKINDENTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pO_WORKINDENTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pO_WORKINDENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pO_WORKINDENTTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._pO_WORKINDENTTableAdapter) Is Nothing) Then
                    Me._pO_WORKINDENTTableAdapter.Connection = CType(revertConnections(Me._pO_WORKINDENTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pO_WORKINDENTTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
