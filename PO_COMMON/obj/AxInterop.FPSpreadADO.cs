//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("7.0.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("25/08/2004 9:00:14 PM")]

namespace AxFPSpreadADO {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{7114683a-020d-4d16-80fd-6ace384b66df}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("Advance")]
    public class AxfpSpread : System.Windows.Forms.AxHost {
        
        private FPSpreadADO._DSpreadSheet ocx;
        
        private AxfpSpreadEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        private msdatasrc.DataSource axDataSource;
        
        public AxfpSpread() : 
                base("7114683a-020d-4d16-80fd-6ace384b66df") {
            this.SetAboutBoxDelegate(new AboutBoxDelegate(AboutBox));
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1)]
        public virtual FPSpreadADO.ActionConstants Action {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Action", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Action;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Action", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Action = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(2)]
        public virtual int ActiveCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ActiveCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ActiveCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(3)]
        public virtual int ActiveRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ActiveRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ActiveRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(4)]
        public virtual bool AllowCellOverflow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowCellOverflow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowCellOverflow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowCellOverflow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowCellOverflow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(5)]
        public virtual bool AllowDragDrop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDragDrop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowDragDrop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDragDrop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowDragDrop = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(6)]
        public virtual bool AllowMultiBlocks {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMultiBlocks", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowMultiBlocks;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMultiBlocks", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowMultiBlocks = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(7)]
        public virtual bool AllowUserFormulas {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowUserFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowUserFormulas;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowUserFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowUserFormulas = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(8)]
        public virtual bool ArrowsExitEditMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ArrowsExitEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ArrowsExitEditMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ArrowsExitEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ArrowsExitEditMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(9)]
        public virtual bool AutoCalc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoCalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoCalc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoCalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoCalc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(10)]
        public virtual bool AutoClipboard {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoClipboard", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoClipboard;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoClipboard", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoClipboard = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(11)]
        public virtual bool AutoSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(12)]
        public virtual bool BlockMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BlockMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BlockMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BlockMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BlockMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(13)]
        public virtual FPSpreadADO.ButtonDrawModeConstants ButtonDrawMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ButtonDrawMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ButtonDrawMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ButtonDrawMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ButtonDrawMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(14)]
        public virtual bool CalcDependencies {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalcDependencies", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CalcDependencies;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalcDependencies", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalcDependencies = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(15)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CellBorderColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.CellBorderColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellBorderColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(16)]
        public virtual FPSpreadADO.CellBorderStyleConstants CellBorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellBorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellBorderStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(17)]
        public virtual short CellBorderType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellBorderType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellBorderType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellBorderType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(18)]
        public virtual FPSpreadADO.CellTypeConstants CellType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(19)]
        public virtual bool ChangeMade {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ChangeMade", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ChangeMade;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ChangeMade", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ChangeMade = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(20)]
        public virtual string Clip {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Clip;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Clip = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(21)]
        public virtual string ClipValue {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ClipValue;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ClipValue = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(22)]
        public virtual int Col {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Col;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Col = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(23)]
        public virtual int Col2 {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Col2;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Col2 = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(24)]
        public virtual FPSpreadADO.HeaderDisplayConstants ColHeaderDisplay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeaderDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeaderDisplay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeaderDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeaderDisplay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(25)]
        public virtual bool ColHidden {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHidden;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHidden = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(26)]
        public virtual bool ColPageBreak {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColPageBreak;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColPageBreak = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(27)]
        public virtual int ColsFrozen {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColsFrozen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColsFrozen;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColsFrozen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColsFrozen = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(28)]
        public virtual FPSpreadADO.CursorStyleConstants CursorStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CursorStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CursorStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(29)]
        public virtual FPSpreadADO.CursorTypeConstants CursorType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CursorType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CursorType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(30)]
        public virtual bool DataChanged {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataChanged;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataChanged = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(31)]
        public virtual int DataColCnt {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataColCnt", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataColCnt;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataColCnt", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataColCnt = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(32)]
        public virtual string DataField {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataField", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataField;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataField", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataField = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(33)]
        public virtual bool DataFillEvent {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataFillEvent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataFillEvent;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataFillEvent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataFillEvent = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(34)]
        public virtual int DataRowCnt {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataRowCnt", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataRowCnt;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataRowCnt", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataRowCnt = value;
            }
        }
        
        [System.Runtime.InteropServices.DispIdAttribute(35)]
        public virtual msdatasrc.DataSource DataSource {
            get {
                return this.axDataSource;
            }
            set {
                this.axDataSource = value;
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    this.ocx.DataSource = value;
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(36)]
        public virtual bool DAutoCellTypes {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoCellTypes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DAutoCellTypes;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoCellTypes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DAutoCellTypes = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(37)]
        public virtual bool DAutoFill {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DAutoFill;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DAutoFill = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(38)]
        public virtual bool DAutoHeadings {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoHeadings", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DAutoHeadings;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoHeadings", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DAutoHeadings = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(39)]
        public virtual bool DAutoSave {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoSave", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DAutoSave;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoSave", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DAutoSave = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(40)]
        public virtual FPSpreadADO.DAutoSizeColsConstants DAutoSizeCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoSizeCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DAutoSizeCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DAutoSizeCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DAutoSizeCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(41)]
        public virtual int DestCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DestCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DestCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DestCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DestCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(42)]
        public virtual int DestRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DestRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DestRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DestRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DestRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(43)]
        public virtual bool DInformActiveRowChange {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DInformActiveRowChange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DInformActiveRowChange;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DInformActiveRowChange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DInformActiveRowChange = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(44)]
        public virtual bool DisplayColHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayColHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DisplayColHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayColHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DisplayColHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(45)]
        public virtual bool DisplayRowHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayRowHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DisplayRowHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayRowHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DisplayRowHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(46)]
        public virtual FPSpreadADO.EditEnterActionConstants EditEnterAction {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditEnterAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EditEnterAction;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditEnterAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EditEnterAction = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(47)]
        public virtual bool CtlEditMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EditMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EditMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(48)]
        public virtual bool EditModePermanent {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditModePermanent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EditModePermanent;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditModePermanent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EditModePermanent = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(49)]
        public virtual bool EditModeReplace {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditModeReplace", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EditModeReplace;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditModeReplace", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EditModeReplace = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(50)]
        public virtual short FileNum {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FileNum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FileNum;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FileNum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FileNum = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(51)]
        public virtual short FloatDefCurrencyChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefCurrencyChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FloatDefCurrencyChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefCurrencyChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FloatDefCurrencyChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(52)]
        public virtual short FloatDefDecimalChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefDecimalChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FloatDefDecimalChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefDecimalChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FloatDefDecimalChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(53)]
        public virtual short FloatDefSepChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefSepChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FloatDefSepChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FloatDefSepChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FloatDefSepChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(54)]
        public virtual string Formula {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Formula", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Formula;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Formula", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Formula = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(55)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color GrayAreaBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.GrayAreaBackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GrayAreaBackColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(56)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color GridColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.GridColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GridColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(57)]
        public virtual bool GridShowHoriz {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridShowHoriz", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GridShowHoriz;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridShowHoriz", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GridShowHoriz = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(58)]
        public virtual bool GridShowVert {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridShowVert", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GridShowVert;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridShowVert", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GridShowVert = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(59)]
        public virtual bool GridSolid {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridSolid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GridSolid;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridSolid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GridSolid = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(60)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int hDCPrinter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hDCPrinter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.hDCPrinter);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hDCPrinter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.hDCPrinter = ((int)((value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(61)]
        public virtual short InterfaceDesigner {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InterfaceDesigner", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.InterfaceDesigner;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InterfaceDesigner", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.InterfaceDesigner = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(62)]
        public virtual bool IsBlockSelected {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsBlockSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsBlockSelected;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsBlockSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsBlockSelected = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(63)]
        public virtual int LeftCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LeftCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LeftCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(64)]
        public virtual bool Lock {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Lock", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Lock;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Lock", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Lock = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(65)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color LockBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.LockBackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LockBackColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(66)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color LockForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.LockForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LockForeColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(67)]
        public virtual int MaxCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(68)]
        public virtual int MaxRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(69)]
        public virtual System.Double MaxTextCellHeight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxTextCellHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxTextCellHeight;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxTextCellHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxTextCellHeight = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(70)]
        public virtual System.Double MaxTextCellWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxTextCellWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxTextCellWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxTextCellWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxTextCellWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(71)]
        public virtual bool MoveActiveOnFocus {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveActiveOnFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MoveActiveOnFocus;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveActiveOnFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MoveActiveOnFocus = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(72)]
        public virtual int MultiSelCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiSelCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultiSelCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiSelCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultiSelCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(73)]
        public virtual int MultiSelIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiSelIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultiSelIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiSelIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultiSelIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(74)]
        public virtual bool NoBeep {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NoBeep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NoBeep;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NoBeep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NoBeep = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(75)]
        public virtual bool NoBorder {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NoBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NoBorder;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NoBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NoBorder = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(76)]
        public virtual FPSpreadADO.OperationModeConstants OperationMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OperationMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OperationMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OperationMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OperationMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(77)]
        public virtual FPSpreadADO.PositionConstants Position {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Position", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Position;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Position", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Position = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(78)]
        public virtual string PrintAbortMsg {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintAbortMsg", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintAbortMsg;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintAbortMsg", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintAbortMsg = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(79)]
        public virtual bool PrintBorder {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintBorder;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintBorder = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(80)]
        public virtual bool PrintColHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintColHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintColHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(81)]
        public virtual bool PrintColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintColor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintColor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(82)]
        public virtual string PrintFooter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFooter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintFooter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFooter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintFooter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(83)]
        public virtual bool PrintGrid {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintGrid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintGrid;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintGrid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintGrid = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(84)]
        public virtual string PrintHeader {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintHeader;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintHeader = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(85)]
        public virtual string PrintJobName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintJobName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintJobName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintJobName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintJobName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(86)]
        public virtual int PrintMarginBottom {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginBottom", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintMarginBottom;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginBottom", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintMarginBottom = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(87)]
        public virtual int PrintMarginLeft {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginLeft", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintMarginLeft;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginLeft", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintMarginLeft = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(88)]
        public virtual int PrintMarginRight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginRight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintMarginRight;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginRight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintMarginRight = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(89)]
        public virtual int PrintMarginTop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginTop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintMarginTop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintMarginTop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintMarginTop = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(90)]
        public virtual short PrintPageEnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageEnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintPageEnd;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageEnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintPageEnd = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(91)]
        public virtual short PrintPageStart {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintPageStart;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintPageStart = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(92)]
        public virtual bool PrintRowHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRowHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintRowHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRowHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintRowHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(93)]
        public virtual bool PrintShadows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintShadows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintShadows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintShadows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintShadows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(94)]
        public virtual FPSpreadADO.PrintTypeConstants PrintType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(95)]
        public virtual bool PrintUseDataMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintUseDataMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintUseDataMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintUseDataMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintUseDataMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(96)]
        public virtual bool ProcessTab {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ProcessTab", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ProcessTab;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ProcessTab", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ProcessTab = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(97)]
        public virtual bool Protect {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Protect", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Protect;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Protect", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Protect = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(98)]
        public virtual bool ReDraw {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReDraw", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ReDraw;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReDraw", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ReDraw = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(99)]
        public virtual bool RestrictCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestrictCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RestrictCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestrictCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RestrictCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(100)]
        public virtual bool RestrictRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestrictRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RestrictRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestrictRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RestrictRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(101)]
        public virtual bool RetainSelBlock {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RetainSelBlock", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RetainSelBlock;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RetainSelBlock", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RetainSelBlock = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(102)]
        public virtual int Row {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Row;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Row = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(103)]
        public virtual int Row2 {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Row2;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Row2 = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(104)]
        public virtual FPSpreadADO.HeaderDisplayConstants RowHeaderDisplay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeaderDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHeaderDisplay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeaderDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHeaderDisplay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(105)]
        public virtual bool RowHidden {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHidden;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHidden = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(106)]
        public virtual bool RowPageBreak {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowPageBreak;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowPageBreak = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(107)]
        public virtual int RowsFrozen {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowsFrozen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowsFrozen;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowsFrozen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowsFrozen = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(108)]
        public virtual bool ScrollBarExtMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarExtMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarExtMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarExtMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarExtMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(109)]
        public virtual bool ScrollBarMaxAlign {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarMaxAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarMaxAlign;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarMaxAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarMaxAlign = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(110)]
        public virtual FPSpreadADO.ScrollBarsConstants ScrollBars {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBars", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBars;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBars", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBars = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(111)]
        public virtual bool ScrollBarShowMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarShowMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarShowMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarShowMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarShowMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(112)]
        public virtual int SelBlockCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelBlockCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelBlockCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(113)]
        public virtual int SelBlockCol2 {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockCol2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelBlockCol2;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockCol2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelBlockCol2 = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(114)]
        public virtual int SelBlockRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelBlockRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelBlockRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(115)]
        public virtual int SelBlockRow2 {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockRow2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelBlockRow2;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBlockRow2", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelBlockRow2 = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(116)]
        public virtual FPSpreadADO.SelectBlockOptionsConstants SelectBlockOptions {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectBlockOptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectBlockOptions;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectBlockOptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectBlockOptions = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(117)]
        public virtual int SelLength {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelLength;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelLength = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(118)]
        public virtual int SelModeIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelModeIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelModeIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(119)]
        public virtual int SelModeSelCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeSelCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelModeSelCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeSelCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelModeSelCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(120)]
        public virtual bool SelModeSelected {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelModeSelected;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelModeSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelModeSelected = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(121)]
        public virtual int SelStart {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelStart;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelStart = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(122)]
        public virtual string SelText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(123)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ShadowColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.ShadowColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShadowColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(124)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ShadowDark {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowDark", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.ShadowDark)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowDark", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShadowDark = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(125)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ShadowText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.ShadowText)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShadowText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShadowText = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(126)]
        public virtual FPSpreadADO.SortByConstants SortBy {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortBy", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SortBy;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortBy", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SortBy = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(127)]
        public virtual int StartingColNumber {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartingColNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StartingColNumber;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartingColNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StartingColNumber = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(128)]
        public virtual int StartingRowNumber {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartingRowNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StartingRowNumber;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartingRowNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StartingRowNumber = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(129)]
        public virtual int TopRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TopRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TopRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(130)]
        public virtual FPSpreadADO.TypeButtonAlignConstants TypeButtonAlign {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeButtonAlign;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonAlign = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(131)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color TypeButtonBorderColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.TypeButtonBorderColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonBorderColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(132)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color TypeButtonColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.TypeButtonColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(133)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color TypeButtonDarkColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonDarkColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.TypeButtonDarkColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonDarkColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonDarkColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(134)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color TypeButtonLightColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonLightColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.TypeButtonLightColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonLightColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonLightColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(135)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image TypeButtonPicture {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.TypeButtonPicture);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonPicture = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(136)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image TypeButtonPictureDown {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonPictureDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.TypeButtonPictureDown);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonPictureDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonPictureDown = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(137)]
        public virtual short TypeButtonShadowSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonShadowSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeButtonShadowSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonShadowSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonShadowSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(138)]
        public virtual string TypeButtonText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeButtonText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(139)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color TypeButtonTextColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonTextColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.TypeButtonTextColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonTextColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonTextColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(140)]
        public virtual FPSpreadADO.TypeButtonTypeConstants TypeButtonType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeButtonType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeButtonType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeButtonType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(141)]
        public virtual bool TypeCheckCenter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCheckCenter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCheckCenter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(142)]
        public virtual string TypeCheckText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCheckText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCheckText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(143)]
        public virtual FPSpreadADO.TypeCheckTextAlignConstants TypeCheckTextAlign {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckTextAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCheckTextAlign;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckTextAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCheckTextAlign = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(144)]
        public virtual short TypeComboBoxCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(145)]
        public virtual short TypeComboBoxCurSel {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxCurSel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxCurSel;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxCurSel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxCurSel = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(146)]
        public virtual bool TypeComboBoxEditable {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxEditable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxEditable;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxEditable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxEditable = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(147)]
        public virtual short TypeComboBoxIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(148)]
        public virtual string TypeComboBoxList {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxList;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxList = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(149)]
        public virtual string TypeComboBoxString {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxString", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxString;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxString", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxString = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(150)]
        public virtual bool TypeDateCentury {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateCentury", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeDateCentury;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateCentury", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeDateCentury = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(151)]
        public virtual FPSpreadADO.TypeDateFormatConstants TypeDateFormat {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeDateFormat;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeDateFormat = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(152)]
        public virtual string TypeDateMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeDateMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeDateMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(153)]
        public virtual string TypeDateMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeDateMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeDateMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(154)]
        public virtual short TypeDateSeparator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeDateSeparator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeDateSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeDateSeparator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(155)]
        public virtual FPSpreadADO.TypeEditCharCaseConstants TypeEditCharCase {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditCharCase", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEditCharCase;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditCharCase", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEditCharCase = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(156)]
        public virtual FPSpreadADO.TypeEditCharSetConstants TypeEditCharSet {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditCharSet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEditCharSet;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditCharSet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEditCharSet = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(157)]
        public virtual int TypeEditLen {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditLen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEditLen;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditLen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEditLen = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(158)]
        public virtual bool TypeEditMultiLine {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditMultiLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEditMultiLine;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditMultiLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEditMultiLine = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(159)]
        public virtual bool TypeEditPassword {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditPassword", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEditPassword;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEditPassword", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEditPassword = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(160)]
        public virtual short TypeFloatCurrencyChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatCurrencyChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatCurrencyChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatCurrencyChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatCurrencyChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(161)]
        public virtual short TypeFloatDecimalChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatDecimalChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatDecimalChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatDecimalChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatDecimalChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(162)]
        public virtual short TypeFloatDecimalPlaces {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatDecimalPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatDecimalPlaces;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatDecimalPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatDecimalPlaces = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(163)]
        public virtual System.Double TypeFloatMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(164)]
        public virtual System.Double TypeFloatMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(165)]
        public virtual bool TypeFloatMoney {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMoney", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatMoney;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatMoney", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatMoney = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(166)]
        public virtual bool TypeFloatSeparator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatSeparator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatSeparator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(167)]
        public virtual short TypeFloatSepChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatSepChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeFloatSepChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeFloatSepChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeFloatSepChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(168)]
        public virtual FPSpreadADO.TypeHAlignConstants TypeHAlign {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeHAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeHAlign;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeHAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeHAlign = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(169)]
        public virtual int TypeIntegerMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeIntegerMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeIntegerMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(170)]
        public virtual int TypeIntegerMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeIntegerMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeIntegerMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(171)]
        public virtual int TypeIntegerSpinInc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerSpinInc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeIntegerSpinInc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerSpinInc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeIntegerSpinInc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(172)]
        public virtual bool TypeIntegerSpinWrap {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerSpinWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeIntegerSpinWrap;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeIntegerSpinWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeIntegerSpinWrap = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(173)]
        public virtual int TypeOwnerDrawStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeOwnerDrawStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeOwnerDrawStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeOwnerDrawStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeOwnerDrawStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(174)]
        public virtual string TypePicDefaultText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePicDefaultText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePicDefaultText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePicDefaultText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePicDefaultText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(175)]
        public virtual string TypePicMask {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePicMask", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePicMask;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePicMask", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePicMask = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(176)]
        public virtual bool TypePictCenter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePictCenter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePictCenter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(177)]
        public virtual bool TypePictMaintainScale {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictMaintainScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePictMaintainScale;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictMaintainScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePictMaintainScale = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(178)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image TypePictPicture {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.TypePictPicture);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePictPicture = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(179)]
        public virtual bool TypePictStretch {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictStretch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePictStretch;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePictStretch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePictStretch = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(180)]
        public virtual bool TypeSpin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeSpin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeSpin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(181)]
        public virtual FPSpreadADO.TypeTextAlignVertConstants TypeTextAlignVert {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextAlignVert", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextAlignVert;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextAlignVert", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextAlignVert = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(182)]
        public virtual bool TypeTextPrefix {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextPrefix", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextPrefix;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextPrefix", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextPrefix = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(183)]
        public virtual bool TypeTextShadow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextShadow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextShadow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextShadow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextShadow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(184)]
        public virtual bool TypeTextShadowIn {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextShadowIn", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextShadowIn;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextShadowIn", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextShadowIn = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(185)]
        public virtual bool TypeTextWordWrap {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextWordWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextWordWrap;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextWordWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextWordWrap = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(186)]
        public virtual FPSpreadADO.TypeTime24HourConstants TypeTime24Hour {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTime24Hour", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTime24Hour;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTime24Hour", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTime24Hour = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(187)]
        public virtual string TypeTimeMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTimeMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTimeMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(188)]
        public virtual string TypeTimeMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTimeMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTimeMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(189)]
        public virtual bool TypeTimeSeconds {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeSeconds", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTimeSeconds;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeSeconds", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTimeSeconds = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(190)]
        public virtual short TypeTimeSeparator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTimeSeparator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTimeSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTimeSeparator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(191)]
        public virtual FPSpreadADO.UnitTypeConstants UnitType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UnitType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UnitType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UnitType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UnitType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(192)]
        public virtual FPSpreadADO.UserResizeConstants UserResize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UserResize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UserResize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(193)]
        public virtual FPSpreadADO.UserResizeConstants2 UserResizeCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResizeCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UserResizeCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResizeCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UserResizeCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(194)]
        public virtual FPSpreadADO.UserResizeConstants2 UserResizeRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResizeRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UserResizeRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserResizeRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UserResizeRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(195)]
        public virtual string Value {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Value", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Value;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Value", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Value = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(196)]
        public virtual int VirtualCurRowCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualCurRowCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualCurRowCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualCurRowCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualCurRowCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(197)]
        public virtual int VirtualCurTop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualCurTop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualCurTop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualCurTop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualCurTop = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(198)]
        public virtual int VirtualMaxRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualMaxRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualMaxRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualMaxRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualMaxRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(199)]
        public virtual bool VirtualMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(200)]
        public virtual int VirtualOverlap {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualOverlap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualOverlap;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualOverlap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualOverlap = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(201)]
        public virtual int VirtualRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(202)]
        public virtual bool VirtualScrollBuffer {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualScrollBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VirtualScrollBuffer;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualScrollBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VirtualScrollBuffer = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(203)]
        public virtual int VisibleCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VisibleCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VisibleCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VisibleCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VisibleCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(204)]
        public virtual int VisibleRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VisibleRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VisibleRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VisibleRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VisibleRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(205)]
        public virtual bool VScrollSpecial {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VScrollSpecial", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VScrollSpecial;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VScrollSpecial", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VScrollSpecial = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(206)]
        public virtual FPSpreadADO.VScrollSpecialTypeConstants VScrollSpecialType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VScrollSpecialType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VScrollSpecialType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VScrollSpecialType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.VScrollSpecialType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(207)]
        public virtual bool FontBold {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontBold;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontBold = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(208)]
        public virtual bool FontItalic {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontItalic", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontItalic;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontItalic", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontItalic = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(209)]
        public virtual string FontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(210)]
        public virtual System.Single FontSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(211)]
        public virtual bool FontStrikethru {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontStrikethru", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontStrikethru;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontStrikethru", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontStrikethru = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(212)]
        public virtual bool FontUnderline {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontUnderline", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontUnderline;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontUnderline", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontUnderline = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(213)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image CursorIcon {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.CursorIcon);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CursorIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CursorIcon = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(214)]
        public virtual FPSpreadADO.PrintOrientationConstants PrintOrientation {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintOrientation", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintOrientation;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintOrientation", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintOrientation = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(215)]
        public virtual FPSpreadADO.BackColorStyleConstants BackColorStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BackColorStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BackColorStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BackColorStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BackColorStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(216)]
        public virtual bool FormulaSync {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormulaSync", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FormulaSync;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormulaSync", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FormulaSync = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(272)]
        public virtual FPSpreadADO.TypeCheckTypeConstants TypeCheckType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCheckType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCheckType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCheckType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(273)]
        public virtual FPSpreadADO.AppearanceConstants Appearance {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Appearance;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Appearance = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(274)]
        public virtual short TypeComboBoxMaxDrop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxMaxDrop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxMaxDrop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxMaxDrop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxMaxDrop = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(275)]
        public virtual short TypeMaxEditLen {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeMaxEditLen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeMaxEditLen;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeMaxEditLen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeMaxEditLen = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(276)]
        public virtual short TypeComboBoxWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(277)]
        public virtual FPSpreadADO.TextTipConstants TextTip {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextTip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TextTip;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextTip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TextTip = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(278)]
        public virtual int TextTipDelay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextTipDelay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TextTipDelay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextTipDelay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TextTipDelay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(279)]
        public virtual FPSpreadADO.ScrollBarTrackConstants ScrollBarTrack {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarTrack", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarTrack;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarTrack", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarTrack = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(280)]
        public virtual FPSpreadADO.TypeVAlignConstants TypeVAlign {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeVAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeVAlign;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeVAlign", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeVAlign = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(281)]
        public virtual FPSpreadADO.ClipboardOptionsConstants ClipboardOptions {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipboardOptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ClipboardOptions;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipboardOptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ClipboardOptions = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(282)]
        public virtual bool PrintSmartPrint {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintSmartPrint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintSmartPrint;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintSmartPrint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintSmartPrint = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(283)]
        public virtual FPSpreadADO.PrintPageOrderConstants PrintPageOrder {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintPageOrder;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintPageOrder = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(284)]
        public virtual int PrintPageCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintPageCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintPageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintPageCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(285)]
        public virtual int PrintFirstPageNumber {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFirstPageNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintFirstPageNumber;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFirstPageNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintFirstPageNumber = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(286)]
        public virtual int PrintNextPageBreakCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNextPageBreakCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintNextPageBreakCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNextPageBreakCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintNextPageBreakCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(287)]
        public virtual int PrintNextPageBreakRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNextPageBreakRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintNextPageBreakRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNextPageBreakRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintNextPageBreakRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(288)]
        public virtual int TypeComboBoxhWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxhWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxhWnd;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxhWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxhWnd = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(289)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color SelBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.SelBackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelBackColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(290)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color SelForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.SelForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelForeColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(291)]
        public virtual short TwoDigitYearMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TwoDigitYearMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TwoDigitYearMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TwoDigitYearMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TwoDigitYearMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(315)]
        public virtual FPSpreadADO.OLEDropModeConstants OLEDropMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OLEDropMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OLEDropMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(317)]
        public virtual string DataMember {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataMember", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DataMember;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataMember", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DataMember = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(318)]
        public virtual string CellNote {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellNote", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellNote;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellNote", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellNote = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(319)]
        public virtual FPSpreadADO.UserColActionConstants UserColAction {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserColAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UserColAction;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserColAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UserColAction = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(320)]
        public virtual FPSpreadADO.ShowScrollTipsConstants ShowScrollTips {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowScrollTips", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowScrollTips;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowScrollTips", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowScrollTips = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(321)]
        public virtual FPSpreadADO.CellNoteIndicatorConstants CellNoteIndicator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellNoteIndicator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellNoteIndicator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellNoteIndicator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellNoteIndicator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(330)]
        public virtual bool TypeEllipses {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEllipses", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeEllipses;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeEllipses", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeEllipses = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(336)]
        public virtual bool ScriptEnhanced {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptEnhanced", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScriptEnhanced;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptEnhanced", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScriptEnhanced = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(337)]
        public virtual FPSpreadADO.MergeConstants ColMerge {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColMerge", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColMerge;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColMerge", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColMerge = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(338)]
        public virtual FPSpreadADO.MergeConstants RowMerge {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowMerge", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowMerge;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowMerge", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowMerge = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(339)]
        public virtual string ColID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColID;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColID = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(340)]
        public virtual int RowHeaderCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeaderCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHeaderCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeaderCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHeaderCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(341)]
        public virtual int RowHeadersAutoTextIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersAutoTextIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHeadersAutoTextIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersAutoTextIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHeadersAutoTextIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(342)]
        public virtual int ColHeaderRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeaderRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeaderRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeaderRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeaderRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(343)]
        public virtual int ColHeadersAutoTextIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersAutoTextIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeadersAutoTextIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersAutoTextIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeadersAutoTextIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(344)]
        public virtual int ColHeadersUserSortIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersUserSortIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeadersUserSortIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersUserSortIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeadersUserSortIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(345)]
        public virtual FPSpreadADO.TypeComboAutoSearchConstants TypeComboBoxAutoSearch {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxAutoSearch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeComboBoxAutoSearch;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxAutoSearch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeComboBoxAutoSearch = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(346)]
        public virtual System.Double TypeSpinInc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpinInc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeSpinInc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpinInc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeSpinInc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(347)]
        public virtual bool TypeSpinWrap {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpinWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeSpinWrap;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeSpinWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeSpinWrap = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(348)]
        public virtual bool TypeNegRed {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNegRed", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNegRed;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNegRed", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNegRed = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(349)]
        public virtual System.Double TypeCurrencyMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(350)]
        public virtual System.Double TypeCurrencyMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(351)]
        public virtual string TypeCurrencyDecimal {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyDecimal;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyDecimal = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(352)]
        public virtual string TypeCurrencySeparator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencySeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencySeparator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencySeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencySeparator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(353)]
        public virtual string TypeCurrencySymbol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencySymbol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencySymbol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencySymbol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencySymbol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(354)]
        public virtual FPSpreadADO.TypeLeadingZeroConstants TypeCurrencyLeadingZero {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyLeadingZero;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyLeadingZero = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(355)]
        public virtual short TypeCurrencyDecPlaces {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyDecPlaces;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyDecPlaces = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(356)]
        public virtual FPSpreadADO.TypeCurrencyNegStyleConstants TypeCurrencyNegStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyNegStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyNegStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(357)]
        public virtual FPSpreadADO.TypeCurrencyPosStyleConstants TypeCurrencyPosStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyPosStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyPosStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyPosStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyPosStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(358)]
        public virtual bool TypeCurrencyShowSep {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyShowSep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyShowSep;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyShowSep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyShowSep = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(359)]
        public virtual bool TypeCurrencyShowSymbol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyShowSymbol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeCurrencyShowSymbol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeCurrencyShowSymbol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeCurrencyShowSymbol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(360)]
        public virtual System.Double TypeNumberMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(361)]
        public virtual System.Double TypeNumberMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(362)]
        public virtual string TypeNumberDecimal {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberDecimal;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberDecimal = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(363)]
        public virtual string TypeNumberSeparator {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberSeparator;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberSeparator", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberSeparator = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(364)]
        public virtual FPSpreadADO.TypeLeadingZeroConstants TypeNumberLeadingZero {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberLeadingZero;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberLeadingZero = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(365)]
        public virtual short TypeNumberDecPlaces {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberDecPlaces;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberDecPlaces = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(366)]
        public virtual FPSpreadADO.TypeNumberNegStyleConstants TypeNumberNegStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberNegStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberNegStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(367)]
        public virtual bool TypeNumberShowSep {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberShowSep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeNumberShowSep;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeNumberShowSep", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeNumberShowSep = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(368)]
        public virtual System.Double TypePercentMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(369)]
        public virtual System.Double TypePercentMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(370)]
        public virtual string TypePercentDecimal {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentDecimal;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentDecimal = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(371)]
        public virtual short TypePercentDecPlaces {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentDecPlaces;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentDecPlaces = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(372)]
        public virtual FPSpreadADO.TypePercentNegStyleConstants TypePercentNegStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentNegStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentNegStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentNegStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(373)]
        public virtual FPSpreadADO.TypeTextOrientConstants TypeTextOrient {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextOrient", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeTextOrient;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeTextOrient", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeTextOrient = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(374)]
        public virtual string CellTag {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellTag", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CellTag;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellTag", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CellTag = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(375)]
        public virtual bool AllowEditOverflow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowEditOverflow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowEditOverflow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowEditOverflow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowEditOverflow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(376)]
        public virtual FPSpreadADO.HeaderDisplayConstants ColHeadersAutoText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersAutoText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeadersAutoText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersAutoText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeadersAutoText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(377)]
        public virtual bool ColHeadersShow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersShow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColHeadersShow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColHeadersShow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColHeadersShow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(378)]
        public virtual FPSpreadADO.HeaderDisplayConstants RowHeadersAutoText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersAutoText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHeadersAutoText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersAutoText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHeadersAutoText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(379)]
        public virtual bool RowHeadersShow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersShow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowHeadersShow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeadersShow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowHeadersShow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(380)]
        public virtual FPSpreadADO.TypeLeadingZeroConstants TypePercentLeadingZero {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypePercentLeadingZero;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypePercentLeadingZero", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypePercentLeadingZero = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(381)]
        public virtual short SheetCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SheetCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SheetCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(382)]
        public virtual short ActiveSheet {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ActiveSheet;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ActiveSheet = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(383)]
        public virtual short TabStripLeftSheet {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripLeftSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TabStripLeftSheet;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripLeftSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TabStripLeftSheet = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(384)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdFont")]
        public virtual System.Drawing.Font TabStripFont {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetFontFromIFont(this.ocx.TabStripFont);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TabStripFont = ((stdole.StdFont)(GetIFontFromFont(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(385)]
        public virtual string SheetName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SheetName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SheetName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(386)]
        public virtual FPSpreadADO.TabStripPolicyConstants TabStripPolicy {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripPolicy", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TabStripPolicy;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripPolicy", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TabStripPolicy = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(387)]
        public virtual System.Double TabStripRatio {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripRatio", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TabStripRatio;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TabStripRatio", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TabStripRatio = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(388)]
        public virtual System.Double PrintZoomFactor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintZoomFactor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintZoomFactor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintZoomFactor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintZoomFactor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(389)]
        public virtual short ScrollBarWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(390)]
        public virtual short ScrollBarHeight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarHeight;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarHeight = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(391)]
        public virtual FPSpreadADO.ActiveCellHighlightStyleConstants ActiveCellHighlightStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveCellHighlightStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ActiveCellHighlightStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActiveCellHighlightStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ActiveCellHighlightStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(392)]
        public virtual FPSpreadADO.PrintScalingMethodConstants PrintScalingMethod {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintScalingMethod", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintScalingMethod;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintScalingMethod", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintScalingMethod = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(393)]
        public virtual short PrintBestFitPagesWide {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBestFitPagesWide", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintBestFitPagesWide;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBestFitPagesWide", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintBestFitPagesWide = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(394)]
        public virtual short PrintBestFitPagesTall {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBestFitPagesTall", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintBestFitPagesTall;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBestFitPagesTall", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintBestFitPagesTall = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(395)]
        public virtual bool PrintCenterOnPageH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintCenterOnPageH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintCenterOnPageH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintCenterOnPageH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintCenterOnPageH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(396)]
        public virtual bool PrintCenterOnPageV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintCenterOnPageV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintCenterOnPageV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintCenterOnPageV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintCenterOnPageV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(397)]
        public virtual bool AllowColMove {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowColMove", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowColMove;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowColMove", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowColMove = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(398)]
        public virtual bool AllowRowMove {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowRowMove", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowRowMove;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowRowMove", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowRowMove = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(399)]
        public virtual System.Double TypeScientificMin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeScientificMin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeScientificMin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(400)]
        public virtual System.Double TypeScientificMax {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeScientificMax;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeScientificMax = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(401)]
        public virtual string TypeScientificDecimal {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeScientificDecimal;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificDecimal", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeScientificDecimal = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(402)]
        public virtual short TypeScientificDecPlaces {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TypeScientificDecPlaces;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeScientificDecPlaces", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TypeScientificDecPlaces = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(403)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ScrollBarHColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarHColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.ScrollBarHColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarHColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarHColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(404)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ScrollBarVColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarVColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.ScrollBarVColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarVColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarVColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(405)]
        public virtual short Sheet {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Sheet;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Sheet = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(406)]
        public virtual short SheetSendingEvent {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetSendingEvent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SheetSendingEvent;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetSendingEvent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SheetSendingEvent = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(407)]
        public virtual bool SheetVisible {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SheetVisible;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SheetVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SheetVisible = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(489)]
        public virtual int SelectionCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectionCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectionCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectionCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectionCount = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-501)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public override System.Drawing.Color BackColor {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return GetColorFromOleColor(((System.UInt32)(this.ocx.BackColor)));
                }
                else {
                    return base.BackColor;
                }
            }
            set {
                base.BackColor = value;
                if ((this.ocx != null)) {
                    this.ocx.BackColor = ((System.UInt32)(GetOleColorFromColor(value)));
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-504)]
        public virtual FPSpreadADO.BorderStyleConstants BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-514)]
        public override bool Enabled {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return this.ocx.Enabled;
                }
                else {
                    return base.Enabled;
                }
            }
            set {
                base.Enabled = value;
                if ((this.ocx != null)) {
                    this.ocx.Enabled = value;
                }
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-512)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdFont")]
        public override System.Drawing.Font Font {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return GetFontFromIFont(this.ocx.Font);
                }
                else {
                    return base.Font;
                }
            }
            set {
                base.Font = value;
                if ((this.ocx != null)) {
                    this.ocx.Font = ((stdole.StdFont)(GetIFontFromFont(value)));
                }
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-513)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public override System.Drawing.Color ForeColor {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return GetColorFromOleColor(((System.UInt32)(this.ocx.ForeColor)));
                }
                else {
                    return base.ForeColor;
                }
            }
            set {
                base.ForeColor = value;
                if ((this.ocx != null)) {
                    this.ocx.ForeColor = ((System.UInt32)(GetOleColorFromColor(value)));
                }
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-515)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int hWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.hWnd);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.hWnd = ((int)((value)));
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-517)]
        public override string Text {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return this.ocx.Text;
                }
                else {
                    return base.Text;
                }
            }
            set {
                base.Text = value;
                if ((this.ocx != null)) {
                    this.ocx.Text = value;
                }
            }
        }
        
        public event _DSpreadEvents_BeforeRowMoveEventHandler BeforeRowMove;
        
        public event _DSpreadEvents_BeforeColMoveEventHandler BeforeColMove;
        
        public event _DSpreadEvents_BeforeScrollTipEventHandler BeforeScrollTip;
        
        public event System.EventHandler DataLoaded;
        
        public event _DSpreadEvents_BeforeEditModeEventHandler BeforeEditMode;
        
        public event _DSpreadEvents_TabScrolledEventHandler TabScrolled;
        
        public event _DSpreadEvents_TabScrollingEventHandler TabScrolling;
        
        public event _DSpreadEvents_SheetChangedEventHandler SheetChanged;
        
        public event _DSpreadEvents_SheetChangingEventHandler SheetChanging;
        
        public event _DSpreadEvents_ScriptKeyUpEventHandler ScriptKeyUp;
        
        public event _DSpreadEvents_ScriptKeyPressEventHandler ScriptKeyPress;
        
        public event _DSpreadEvents_ScriptKeyDownEventHandler ScriptKeyDown;
        
        public event _DSpreadEvents_ScriptBeforeUserSortEventHandler ScriptBeforeUserSort;
        
        public event _DSpreadEvents_ScriptOLEStartDragEventHandler ScriptOLEStartDrag;
        
        public event _DSpreadEvents_ScriptOLEGiveFeedbackEventHandler ScriptOLEGiveFeedback;
        
        public event _DSpreadEvents_ScriptOLEDragOverEventHandler ScriptOLEDragOver;
        
        public event _DSpreadEvents_ScriptOLEDragDropEventHandler ScriptOLEDragDrop;
        
        public event _DSpreadEvents_ScriptOLECompleteDragEventHandler ScriptOLECompleteDrag;
        
        public event _DSpreadEvents_ScriptTextTipFetchEventHandler ScriptTextTipFetch;
        
        public event _DSpreadEvents_ScriptPrintMsgBoxEventHandler ScriptPrintMsgBox;
        
        public event _DSpreadEvents_ScriptQueryDataEventHandler ScriptQueryData;
        
        public event _DSpreadEvents_ScriptQueryAdvanceEventHandler ScriptQueryAdvance;
        
        public event _DSpreadEvents_ScriptPrintAbortEventHandler ScriptPrintAbort;
        
        public event _DSpreadEvents_ScriptLeaveRowEventHandler ScriptLeaveRow;
        
        public event _DSpreadEvents_ScriptLeaveCellEventHandler ScriptLeaveCell;
        
        public event _DSpreadEvents_ScriptDragDropBlockEventHandler ScriptDragDropBlock;
        
        public event _DSpreadEvents_ScriptDataFillEventHandler ScriptDataFill;
        
        public event _DSpreadEvents_ScriptCustomFunctionEventHandler ScriptCustomFunction;
        
        public event _DSpreadEvents_MouseUpEventHandler MouseUpEvent;
        
        public event _DSpreadEvents_MouseMoveEventHandler MouseMoveEvent;
        
        public event _DSpreadEvents_MouseDownEventHandler MouseDownEvent;
        
        public event _DSpreadEvents_KeyUpEventHandler KeyUpEvent;
        
        public event _DSpreadEvents_KeyPressEventHandler KeyPressEvent;
        
        public event _DSpreadEvents_KeyDownEventHandler KeyDownEvent;
        
        public event _DSpreadEvents_AfterUserSortEventHandler AfterUserSort;
        
        public event _DSpreadEvents_BeforeUserSortEventHandler BeforeUserSort;
        
        public event _DSpreadEvents_OLEStartDragEventHandler OLEStartDrag;
        
        public event _DSpreadEvents_OLESetDataEventHandler OLESetData;
        
        public event _DSpreadEvents_OLEGiveFeedbackEventHandler OLEGiveFeedback;
        
        public event _DSpreadEvents_OLEDragOverEventHandler OLEDragOver;
        
        public event _DSpreadEvents_OLEDragDropEventHandler OLEDragDrop;
        
        public event _DSpreadEvents_OLECompleteDragEventHandler OLECompleteDrag;
        
        public event _DSpreadEvents_EditChangeEventHandler EditChange;
        
        public event _DSpreadEvents_TextTipFetchEventHandler TextTipFetch;
        
        public event _DSpreadEvents_ComboSelChangeEventHandler ComboSelChange;
        
        public event _DSpreadEvents_ComboDropDownEventHandler ComboDropDown;
        
        public event _DSpreadEvents_ComboCloseUpEventHandler ComboCloseUp;
        
        public event _DSpreadEvents_PrintMsgBoxEventHandler PrintMsgBox;
        
        public event _DSpreadEvents_VirtualClearDataEventHandler VirtualClearData;
        
        public event _DSpreadEvents_UserFormulaEnteredEventHandler UserFormulaEntered;
        
        public event _DSpreadEvents_TopLeftChangeEventHandler TopLeftChange;
        
        public event _DSpreadEvents_SelChangeEventHandler SelChange;
        
        public event _DSpreadEvents_RowHeightChangeEventHandler RowHeightChange;
        
        public event _DSpreadEvents_RightClickEventHandler RightClick;
        
        public event _DSpreadEvents_QueryDataEventHandler QueryData;
        
        public event _DSpreadEvents_QueryAdvanceEventHandler QueryAdvance;
        
        public event _DSpreadEvents_PrintAbortEventHandler PrintAbort;
        
        public event _DSpreadEvents_LeaveRowEventHandler LeaveRow;
        
        public event _DSpreadEvents_LeaveCellEventHandler LeaveCell;
        
        public event _DSpreadEvents_EnterRowEventHandler EnterRow;
        
        public event _DSpreadEvents_EditModeEventHandler EditModeEvent;
        
        public event _DSpreadEvents_EditErrorEventHandler EditError;
        
        public event _DSpreadEvents_DrawItemEventHandler DrawItem;
        
        public event _DSpreadEvents_DragDropBlockEventHandler DragDropBlock;
        
        public event _DSpreadEvents_DblClickEventHandler DblClick;
        
        public event _DSpreadEvents_DataFillEventHandler DataFill;
        
        public event _DSpreadEvents_DataColConfigEventHandler DataColConfig;
        
        public event _DSpreadEvents_CustomFunctionEventHandler CustomFunction;
        
        public event _DSpreadEvents_ColWidthChangeEventHandler ColWidthChange;
        
        public event _DSpreadEvents_ClickEventHandler ClickEvent;
        
        public event _DSpreadEvents_ChangeEventHandler Change;
        
        public event _DSpreadEvents_ButtonClickedEventHandler ButtonClicked;
        
        public event _DSpreadEvents_BlockSelectedEventHandler BlockSelected;
        
        public event _DSpreadEvents_AdvanceEventHandler Advance;
        
        public virtual void AboutBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AboutBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AboutBox();
        }
        
        public virtual void CtlRefresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlRefresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Refresh();
        }
        
        public virtual bool ExportExcelBookEx(string fileName, string logFileName, FPSpreadADO.ExcelSaveFlagConstants flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportExcelBookEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportExcelBookEx(fileName, logFileName, flags);
        }
        
        public virtual bool ExportToExcelEx(string fileName, string sheetName, string logFileName, FPSpreadADO.ExcelSaveFlagConstants flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToExcelEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToExcelEx(fileName, sheetName, logFileName, flags);
        }
        
        public virtual void ScriptCFGetRangeParamExt(short param, ref object sheet, ref object col, ref object row, ref object col2, ref object row2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetRangeParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptCFGetRangeParamExt(param, ref sheet, ref col, ref row, ref col2, ref row2);
        }
        
        public virtual void ScriptCFGetCellParamExt(short param, ref object sheet, ref object col, ref object row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetCellParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptCFGetCellParamExt(param, ref sheet, ref col, ref row);
        }
        
        public virtual void CFGetRangeParamExt(short param, ref short sheet, ref int col, ref int row, ref int col2, ref int row2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetRangeParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CFGetRangeParamExt(param, ref sheet, ref col, ref row, ref col2, ref row2);
        }
        
        public virtual void CFGetCellParamExt(short param, ref short sheet, ref int col, ref int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetCellParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CFGetCellParamExt(param, ref sheet, ref col, ref row);
        }
        
        public virtual bool SavePictureBuffer(stdole.StdPicture picture, FPSpreadADO.PictureTypeConstants pictType, ref object buffer, ref object size) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SavePictureBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SavePictureBuffer(picture, pictType, ref buffer, ref size);
        }
        
        public virtual bool SavePicture(stdole.StdPicture picture, string fileName, FPSpreadADO.PictureTypeConstants pictType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SavePicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SavePicture(picture, fileName, pictType);
        }
        
        public virtual System.Drawing.Image LoadPictureBuffer(ref object buffer, ref object size, FPSpreadADO.PictureTypeConstants pictType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadPictureBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return GetPictureFromIPicture(this.ocx.LoadPictureBuffer(ref buffer, ref size, pictType));
        }
        
        public virtual System.Drawing.Image LoadResPicture(int hInstance, string resourceName, string resourceType, FPSpreadADO.PictureTypeConstants pictType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadResPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return GetPictureFromIPicture(this.ocx.LoadResPicture(hInstance, resourceName, resourceType, pictType));
        }
        
        public virtual System.Drawing.Image LoadPicture(string fileName, FPSpreadADO.PictureTypeConstants pictType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return GetPictureFromIPicture(this.ocx.LoadPicture(fileName, pictType));
        }
        
        public virtual bool ResetSheet(short sheet) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ResetSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ResetSheet(sheet);
        }
        
        public virtual bool MoveSheets(short sheetSrc, short sheetCnt, short sheetDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.MoveSheets(sheetSrc, sheetCnt, sheetDest);
        }
        
        public virtual bool DeleteSheets(short sheetIndex, short sheetCnt) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.DeleteSheets(sheetIndex, sheetCnt);
        }
        
        public virtual bool InsertSheets(short sheetIndex, short sheetCnt) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InsertSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.InsertSheets(sheetIndex, sheetCnt);
        }
        
        public virtual bool ExportExcelBook(string fileName, string logFileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportExcelBook", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportExcelBook(fileName, logFileName);
        }
        
        public virtual bool ImportExcelBook(string fileName, string logFileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ImportExcelBook", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ImportExcelBook(fileName, logFileName);
        }
        
        public virtual void DataRefresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataRefresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DataRefresh();
        }
        
        public virtual int ColLetterToNumber(string headerLetter) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColLetterToNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ColLetterToNumber(headerLetter);
        }
        
        public virtual bool SaveTabFileU(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveTabFileU", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SaveTabFileU(fileName);
        }
        
        public virtual bool ExportToTextFileU(string fileName, string cellDelim, string colDelim, string rowDelim, FPSpreadADO.ExportToTextFileConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToTextFileU", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToTextFileU(fileName, cellDelim, colDelim, rowDelim, flags, logFile);
        }
        
        public virtual bool ExportRangeToTextFileU(int col, int row, int col2, int row2, string fileName, string cellDelim, string colDelim, string rowDelim, FPSpreadADO.ExportRangeToTextFileConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportRangeToTextFileU", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportRangeToTextFileU(col, row, col2, row2, fileName, cellDelim, colDelim, rowDelim, flags, logFile);
        }
        
        public virtual void set_EventEnabled(FPSpreadADO.EVENTENABLEDConstants @event, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_EventEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_EventEnabled(@event, param0);
        }
        
        public virtual bool get_EventEnabled(FPSpreadADO.EVENTENABLEDConstants @event) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_EventEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_EventEnabled(@event);
        }
        
        public virtual int SearchRow(int lRow, int lColStart, int lColEnd, string text, FPSpreadADO.SearchFlagsConstants searchFlags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SearchRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SearchRow(lRow, lColStart, lColEnd, text, searchFlags);
        }
        
        public virtual int SearchCol(int lCol, int lRowStart, int lRowEnd, string text, FPSpreadADO.SearchFlagsConstants searchFlags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SearchCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SearchCol(lCol, lRowStart, lRowEnd, text, searchFlags);
        }
        
        public virtual void SwapRowRange(int lRow, int lRow2, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SwapRowRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SwapRowRange(lRow, lRow2, lRowDest);
        }
        
        public virtual void SwapColRange(int lCol, int lCol2, int lColDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SwapColRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SwapColRange(lCol, lCol2, lColDest);
        }
        
        public virtual void MoveRowRange(int lRow, int lRow2, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveRowRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.MoveRowRange(lRow, lRow2, lRowDest);
        }
        
        public virtual void MoveColRange(int lCol, int lCol2, int lColDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveColRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.MoveColRange(lCol, lCol2, lColDest);
        }
        
        public virtual void CopyRowRange(int lRow, int lRow2, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyRowRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyRowRange(lRow, lRow2, lRowDest);
        }
        
        public virtual void CopyColRange(int lCol, int lCol2, int lColDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyColRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyColRange(lCol, lCol2, lColDest);
        }
        
        public virtual int GetColFromID(string colID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColFromID", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetColFromID(colID);
        }
        
        public virtual void RemoveCellSpan(int lCol, int lRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveCellSpan", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveCellSpan(lCol, lRow);
        }
        
        public virtual FPSpreadADO.GetCellSpanConstants GetCellSpan(int lCol, int lRow, ref object pvColAnchor, ref object pvRowAnchor, ref object pvNumCols, ref object pvNumRows) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCellSpan", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetCellSpan(lCol, lRow, ref pvColAnchor, ref pvRowAnchor, ref pvNumCols, ref pvNumRows);
        }
        
        public virtual bool AddCellSpan(int lCol, int lRow, int lNumCols, int lNumRows) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCellSpan", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.AddCellSpan(lCol, lRow, lNumCols, lNumRows);
        }
        
        public virtual void VirtualRefresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VirtualRefresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VirtualRefresh();
        }
        
        public virtual void TypeComboBoxRemoveItem(int lCol, int lRow, short nIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxRemoveItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TypeComboBoxRemoveItem(lCol, lRow, nIndex);
        }
        
        public virtual void TypeComboBoxClear(int lCol, int lRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TypeComboBoxClear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TypeComboBoxClear(lCol, lRow);
        }
        
        public virtual void SwapRange(int lCol, int lRow, int lCol2, int lRow2, int lColDest, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SwapRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SwapRange(lCol, lRow, lCol2, lRow2, lColDest, lRowDest);
        }
        
        public virtual bool Sort(int lCol, int lRow, int lCol2, int lRow2, FPSpreadADO.SortByConstants nSortBy, [System.Runtime.InteropServices.Optional()] ref object sortKeys, [System.Runtime.InteropServices.Optional()] ref object sortKeyOrders) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sort", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.Sort(lCol, lRow, lCol2, lRow2, nSortBy, ref sortKeys, ref sortKeyOrders);
        }
        
        public virtual void ShowCell(int lCol, int lRow, FPSpreadADO.PositionConstants nPosition) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowCell(lCol, lRow, nPosition);
        }
        
        public virtual void SetSelection(int lCol, int lRow, int lCol2, int lRow2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetSelection(lCol, lRow, lCol2, lRow2);
        }
        
        public virtual void SetCellBorder(int lCol, int lRow, int lCol2, int lRow2, FPSpreadADO.CellBorderIndexConstants nIndex, System.UInt32 crColor, FPSpreadADO.CellBorderStyleConstants nStyle) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCellBorder(lCol, lRow, lCol2, lRow2, nIndex, crColor, nStyle);
        }
        
        public virtual void SetActiveCell(int lCol, int lRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetActiveCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetActiveCell(lCol, lRow);
        }
        
        public virtual void Reset() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Reset", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Reset();
        }
        
        public virtual void ReCalc() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReCalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ReCalc();
        }
        
        public virtual void MoveRange(int lCol, int lRow, int lCol2, int lRow2, int lColDest, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.MoveRange(lCol, lRow, lCol2, lRow2, lColDest, lRowDest);
        }
        
        public virtual void InsertRows(int lRow, int lNumRows) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InsertRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InsertRows(lRow, lNumRows);
        }
        
        public virtual void InsertCols(int lCol, int lNumCols) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InsertCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InsertCols(lCol, lNumCols);
        }
        
        public virtual void GetSelection(int lIndex, ref object plCol, ref object plRow, ref object plCol2, ref object plRow2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetSelection(lIndex, ref plCol, ref plRow, ref plCol2, ref plRow2);
        }
        
        public virtual void GetCellBorder(int lCol, int lRow, FPSpreadADO.CellBorderIndexConstants nIndex, ref object pcrColor, ref object pnStyle) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCellBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetCellBorder(lCol, lRow, nIndex, ref pcrColor, ref pnStyle);
        }
        
        public virtual void DataSave() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DataSave", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DataSave();
        }
        
        public virtual void DeleteRows(int lRow, int lNumRows) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteRows(lRow, lNumRows);
        }
        
        public virtual void DeleteCols(int lCol, int lNumCols) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteCols(lCol, lNumCols);
        }
        
        public virtual void CopyRange(int lCol, int lRow, int lCol2, int lRow2, int lColDest, int lRowDest) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyRange(lCol, lRow, lCol2, lRow2, lColDest, lRowDest);
        }
        
        public virtual void ClipboardPaste() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipboardPaste", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClipboardPaste();
        }
        
        public virtual void ClipboardCut() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipboardCut", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClipboardCut();
        }
        
        public virtual void ClipboardCopy() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipboardCopy", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClipboardCopy();
        }
        
        public virtual void ClearSelection() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearSelection();
        }
        
        public virtual void ClearRange(int lCol, int lRow, int lCol2, int lRow2, bool bDataOnly) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearRange(lCol, lRow, lCol2, lRow2, bDataOnly);
        }
        
        public virtual void AddSelection(int lCol, int lRow, int lCol2, int lRow2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddSelection(lCol, lRow, lCol2, lRow2);
        }
        
        public virtual void PrintSheet([System.Runtime.InteropServices.Optional()] ref object flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PrintSheet(ref flags);
        }
        
        public virtual void ScriptGetCalTextOverride(ref object shortDays, ref object lenShortDays, ref object longDays, ref object lenLongDays, ref object shortMonths, ref object lenShortMonths, ref object longMonths, ref object lenLongMonths, ref object okText, ref object lenOkText, ref object cancelText, ref object lenCancelText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetCalTextOverride", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetCalTextOverride(ref shortDays, ref lenShortDays, ref longDays, ref lenLongDays, ref shortMonths, ref lenShortMonths, ref longMonths, ref lenLongMonths, ref okText, ref lenOkText, ref cancelText, ref lenCancelText);
        }
        
        public virtual int ScriptOwnerPrintPageCount(int hDC, int left, int top, int right, int bottom, ref object pageCount) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptOwnerPrintPageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptOwnerPrintPageCount(hDC, left, top, right, bottom, ref pageCount);
        }
        
        public virtual bool ScriptExportRangeToXMLBuffer(int col, int row, int col2, int row2, string root, string collection, ref object buff, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptExportRangeToXMLBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptExportRangeToXMLBuffer(col, row, col2, row2, root, collection, ref buff, flags, logFile);
        }
        
        public virtual bool ScriptExportToXMLBuffer(string root, string collection, ref object buff, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptExportToXMLBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptExportToXMLBuffer(root, collection, ref buff, flags, logFile);
        }
        
        public virtual bool ScriptGetCustomFunction(string funcName, ref object minArgs, ref object maxArgs, ref object flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetCustomFunction(funcName, ref minArgs, ref maxArgs, ref flags);
        }
        
        public virtual bool ScriptEnumCustomFunction(string prevFuncName, ref object funcName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptEnumCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptEnumCustomFunction(prevFuncName, ref funcName);
        }
        
        public virtual bool ScriptGetExcelSheetList(string fileName, object varArray, ref object listCount, string logFileName, ref object workbookHandle, bool replace) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetExcelSheetList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetExcelSheetList(fileName, varArray, ref listCount, logFileName, ref workbookHandle, replace);
        }
        
        public virtual bool ScriptGetTextTipAppearance(ref object fontName, ref object fontSize, ref object fontBold, ref object fontItalic, ref object backColor, ref object foreColor) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetTextTipAppearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetTextTipAppearance(ref fontName, ref fontSize, ref fontBold, ref fontItalic, ref backColor, ref foreColor);
        }
        
        public virtual bool ScriptGetInteger(int col, int row, ref object value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetInteger", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetInteger(col, row, ref value);
        }
        
        public virtual bool ScriptGetFloat(int col, int row, ref object value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetFloat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetFloat(col, row, ref value);
        }
        
        public virtual bool ScriptGetOddEvenRowColor(ref object clrBackOdd, ref object clrForeOdd, ref object clrBackEven, ref object clrForeEven) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetOddEvenRowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetOddEvenRowColor(ref clrBackOdd, ref clrForeOdd, ref clrBackEven, ref clrForeEven);
        }
        
        public virtual bool ScriptGetActionKey(short action, ref object fShift, ref object fCtrl, ref object key) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetActionKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetActionKey(action, ref fShift, ref fCtrl, ref key);
        }
        
        public virtual void ScriptTwipsToRowHeight(int row, int twips, ref object rowHeight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptTwipsToRowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptTwipsToRowHeight(row, twips, ref rowHeight);
        }
        
        public virtual void ScriptTwipsToColWidth(int twips, ref object colWidth) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptTwipsToColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptTwipsToColWidth(twips, ref colWidth);
        }
        
        public virtual void ScriptRowHeightToTwips(int row, System.Single height, ref object twips) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptRowHeightToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptRowHeightToTwips(row, height, ref twips);
        }
        
        public virtual void ScriptGetLastValidCell(ref object col, ref object row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetLastValidCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetLastValidCell(ref col, ref row);
        }
        
        public virtual bool ScriptGetIteration(ref object maxIterations, ref object maxChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetIteration", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetIteration(ref maxIterations, ref maxChange);
        }
        
        public virtual void ScriptGetFirstValidCell(ref object col, ref object row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetFirstValidCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetFirstValidCell(ref col, ref row);
        }
        
        public virtual void ScriptGetClientArea(ref object width, ref object height) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetClientArea", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetClientArea(ref width, ref height);
        }
        
        public virtual bool ScriptGetCellPos(int col, int row, ref object x, ref object y, ref object width, ref object height) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetCellPos", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptGetCellPos(col, row, ref x, ref y, ref width, ref height);
        }
        
        public virtual void ScriptGetCellFromScreenCoord(ref object col, ref object row, int x, int y) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetCellFromScreenCoord", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetCellFromScreenCoord(ref col, ref row, x, y);
        }
        
        public virtual void ScriptGetBottomRightCell(ref object col, ref object row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptGetBottomRightCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptGetBottomRightCell(ref col, ref row);
        }
        
        public virtual void ScriptColWidthToTwips(System.Single width, ref object twips) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptColWidthToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptColWidthToTwips(width, ref twips);
        }
        
        public virtual void ScriptCFGetRangeParam(short param, ref object col, ref object row, ref object col2, ref object row2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetRangeParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptCFGetRangeParam(param, ref col, ref row, ref col2, ref row2);
        }
        
        public virtual bool ScriptCFGetParamInfo(short param, ref object type, ref object status) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetParamInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptCFGetParamInfo(param, ref type, ref status);
        }
        
        public virtual System.Double ScriptCFGetDoubleParamExt(short param, ref object paramValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetDoubleParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ScriptCFGetDoubleParamExt(param, ref paramValue);
        }
        
        public virtual void ScriptCFGetCellParam(short param, ref object col, ref object row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptCFGetCellParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ScriptCFGetCellParam(param, ref col, ref row);
        }
        
        public virtual void GetCalTextOverride(ref string shortDays, ref short lenShortDays, ref string longDays, ref short lenLongDays, ref string shortMonths, ref short lenShortMonths, ref string longMonths, ref short lenLongMonths, ref string okText, ref short lenOkText, ref string cancelText, ref short lenCancelText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCalTextOverride", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetCalTextOverride(ref shortDays, ref lenShortDays, ref longDays, ref lenLongDays, ref shortMonths, ref lenShortMonths, ref longMonths, ref lenLongMonths, ref okText, ref lenOkText, ref cancelText, ref lenCancelText);
        }
        
        public virtual void SetCalTextOverride(string shortDays, string longDays, string shortMonths, string longMonths, string okText, string cancelText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCalTextOverride", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCalTextOverride(shortDays, longDays, shortMonths, longMonths, okText, cancelText);
        }
        
        public virtual bool LoadTextFile(string fileName, string cellDelim, string colDelim, string rowDelim, FPSpreadADO.LoadTextFileConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadTextFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.LoadTextFile(fileName, cellDelim, colDelim, rowDelim, flags, logFile);
        }
        
        public virtual bool ExportToTextFile(string fileName, string cellDelim, string colDelim, string rowDelim, FPSpreadADO.ExportToTextFileConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToTextFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToTextFile(fileName, cellDelim, colDelim, rowDelim, flags, logFile);
        }
        
        public virtual bool ExportRangeToTextFile(int col, int row, int col2, int row2, string fileName, string cellDelim, string colDelim, string rowDelim, FPSpreadADO.ExportRangeToTextFileConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportRangeToTextFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportRangeToTextFile(col, row, col2, row2, fileName, cellDelim, colDelim, rowDelim, flags, logFile);
        }
        
        public virtual bool OwnerPrintPageCount(int hDC, int left, int top, int right, int bottom, ref short pageCount) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OwnerPrintPageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.OwnerPrintPageCount(hDC, left, top, right, bottom, ref pageCount);
        }
        
        public virtual bool OwnerPrintDraw(int hDC, int left, int top, int right, int bottom, short page) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OwnerPrintDraw", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.OwnerPrintDraw(hDC, left, top, right, bottom, page);
        }
        
        public virtual bool ExportRangeToXMLBuffer(int col, int row, int col2, int row2, string root, string collection, ref string buff, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportRangeToXMLBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportRangeToXMLBuffer(col, row, col2, row2, root, collection, ref buff, flags, logFile);
        }
        
        public virtual bool ExportToXMLBuffer(string root, string collection, ref string buff, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToXMLBuffer", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToXMLBuffer(root, collection, ref buff, flags, logFile);
        }
        
        public virtual bool ExportRangeToXML(int col, int row, int col2, int row2, string fileName, string root, string collection, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportRangeToXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportRangeToXML(col, row, col2, row2, fileName, root, collection, flags, logFile);
        }
        
        public virtual bool ExportToXML(string fileName, string root, string collection, FPSpreadADO.ExportToXMLConstants flags, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToXML(fileName, root, collection, flags, logFile);
        }
        
        public virtual bool IsFetchCellNote() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsFetchCellNote", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.IsFetchCellNote();
        }
        
        public virtual void set_ColUserSortIndicator(int lCol, FPSpreadADO.ColUserSortIndicatorConstants param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColUserSortIndicator", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColUserSortIndicator(lCol, param0);
        }
        
        public virtual FPSpreadADO.ColUserSortIndicatorConstants get_ColUserSortIndicator(int lCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColUserSortIndicator", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_ColUserSortIndicator(lCol);
        }
        
        public virtual void OLEDrag() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDrag", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.OLEDrag();
        }
        
        public virtual bool ReCalcCell(int col, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReCalcCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ReCalcCell(col, row);
        }
        
        public virtual bool RemoveCustomFunction(string funcName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.RemoveCustomFunction(funcName);
        }
        
        public virtual bool GetCustomFunction(string funcName, ref short minArgs, ref short maxArgs, ref FPSpreadADO.CustomFunctionFlagsConstants flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetCustomFunction(funcName, ref minArgs, ref maxArgs, ref flags);
        }
        
        public virtual bool EnumCustomFunction(string prevFuncName, ref string funcName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnumCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.EnumCustomFunction(prevFuncName, ref funcName);
        }
        
        public virtual bool ExportToExcel(string fileName, string sheetName, string logFileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToExcel", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToExcel(fileName, sheetName, logFileName);
        }
        
        public virtual bool ImportExcelSheet(short workbookHandle, object sheet) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ImportExcelSheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ImportExcelSheet(workbookHandle, sheet);
        }
        
        public virtual bool GetExcelSheetList(string fileName, object varArray, ref short listCount, string logFileName, ref short workbookHandle, bool replace) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetExcelSheetList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetExcelSheetList(fileName, varArray, ref listCount, logFileName, ref workbookHandle, replace);
        }
        
        public virtual short IsExcelFile(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsExcelFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.IsExcelFile(fileName);
        }
        
        public virtual bool SetArray(int colLeft, int rowTop, object varArray) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetArray", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetArray(colLeft, rowTop, varArray);
        }
        
        public virtual bool GetArray(int colLeft, int rowTop, object varArray) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetArray", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetArray(colLeft, rowTop, varArray);
        }
        
        public virtual bool ExportRangeToHTML(int col, int row, int col2, int row2, string fileName, bool appendFlag, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportRangeToHTML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportRangeToHTML(col, row, col2, row2, fileName, appendFlag, logFile);
        }
        
        public virtual bool ExportToHTML(string fileName, bool appendFlag, string logFile) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToHTML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ExportToHTML(fileName, appendFlag, logFile);
        }
        
        public virtual bool SetTextTipAppearance(string fontName, short fontSize, bool fontBold, bool fontItalic, int backColor, int foreColor) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetTextTipAppearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetTextTipAppearance(fontName, fontSize, fontBold, fontItalic, backColor, foreColor);
        }
        
        public virtual bool GetTextTipAppearance(ref string fontName, ref short fontSize, ref bool fontBold, ref bool fontItalic, ref int backColor, ref int foreColor) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetTextTipAppearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetTextTipAppearance(ref fontName, ref fontSize, ref fontBold, ref fontItalic, ref backColor, ref foreColor);
        }
        
        public virtual void SetCalText(string shortDays, string longDays, string shortMonths, string longMonths, string okText, string cancelText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCalText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCalText(shortDays, longDays, shortMonths, longMonths, okText, cancelText);
        }
        
        public virtual bool SetInteger(int col, int row, int value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetInteger", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetInteger(col, row, value);
        }
        
        public virtual bool GetInteger(int col, int row, ref int value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetInteger", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetInteger(col, row, ref value);
        }
        
        public virtual bool SetFloat(int col, int row, System.Double value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFloat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetFloat(col, row, value);
        }
        
        public virtual bool GetFloat(int col, int row, ref System.Double value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFloat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetFloat(col, row, ref value);
        }
        
        public virtual bool SetOddEvenRowColor(int clrBackOdd, int clrForeOdd, int clrBackEven, int clrForeEven) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetOddEvenRowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetOddEvenRowColor(clrBackOdd, clrForeOdd, clrBackEven, clrForeEven);
        }
        
        public virtual bool GetOddEvenRowColor(ref int clrBackOdd, ref int clrForeOdd, ref int clrBackEven, ref int clrForeEven) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetOddEvenRowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetOddEvenRowColor(ref clrBackOdd, ref clrForeOdd, ref clrBackEven, ref clrForeEven);
        }
        
        public virtual bool SetActionKey(FPSpreadADO.ActionKeyConstants action, bool fShift, bool fCtrl, short key) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetActionKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetActionKey(action, fShift, fCtrl, key);
        }
        
        public virtual bool GetActionKey(FPSpreadADO.ActionKeyConstants action, ref bool fShift, ref bool fCtrl, ref short key) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetActionKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetActionKey(action, ref fShift, ref fCtrl, ref key);
        }
        
        public virtual void TwipsToRowHeight(int row, int twips, ref System.Single rowHeight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TwipsToRowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TwipsToRowHeight(row, twips, ref rowHeight);
        }
        
        public virtual void TwipsToColWidth(int twips, ref System.Single colWidth) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TwipsToColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TwipsToColWidth(twips, ref colWidth);
        }
        
        public virtual void SetText(int col, int row, object var) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetText(col, row, var);
        }
        
        public virtual void SetRowItemData(int row, int value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRowItemData(row, value);
        }
        
        public virtual void SetRefStyle(FPSpreadADO.RefStyleConstants refStyle) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRefStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRefStyle(refStyle);
        }
        
        public virtual void SetIteration(bool iteration, short maxIterations, System.Double maxChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetIteration", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetIteration(iteration, maxIterations, maxChange);
        }
        
        public virtual void SetItemData(int value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetItemData(value);
        }
        
        public virtual bool SetDataFillData(object var) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetDataFillData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetDataFillData(var);
        }
        
        public virtual bool SetCustomName(string name, string value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCustomName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetCustomName(name, value);
        }
        
        public virtual void SetColItemData(int col, int value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetColItemData(col, value);
        }
        
        public virtual bool SetCellDirtyFlag(int col, int row, bool dirty) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellDirtyFlag", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SetCellDirtyFlag(col, row, dirty);
        }
        
        public virtual bool SaveToFile(string fileName, bool dataOnly) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveToFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SaveToFile(fileName, dataOnly);
        }
        
        public virtual bool SaveTabFile(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveTabFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.SaveTabFile(fileName);
        }
        
        public virtual void RowHeightToTwips(int row, System.Single height, ref int twips) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeightToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RowHeightToTwips(row, height, ref twips);
        }
        
        public virtual bool LoadTabFile(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadTabFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.LoadTabFile(fileName);
        }
        
        public virtual bool LoadFromFile(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadFromFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.LoadFromFile(fileName);
        }
        
        public virtual bool IsVisible(int col, int row, bool partial) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.IsVisible(col, row, partial);
        }
        
        public virtual bool IsFormulaValid(string formula) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsFormulaValid", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.IsFormulaValid(formula);
        }
        
        public virtual bool IsCellSelected(int col, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsCellSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.IsCellSelected(col, row);
        }
        
        public virtual bool GetText(int col, int row, ref object var) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetText(col, row, ref var);
        }
        
        public virtual int GetRowItemData(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetRowItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetRowItemData(row);
        }
        
        public virtual FPSpreadADO.RefStyleConstants GetRefStyle() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetRefStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetRefStyle();
        }
        
        public virtual int GetMultiSelItem(int selPrev) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetMultiSelItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetMultiSelItem(selPrev);
        }
        
        public virtual void GetLastValidCell(ref int col, ref int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetLastValidCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetLastValidCell(ref col, ref row);
        }
        
        public virtual bool GetIteration(ref short maxIterations, ref System.Double maxChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetIteration", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetIteration(ref maxIterations, ref maxChange);
        }
        
        public virtual int GetItemData() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetItemData();
        }
        
        public virtual void GetFirstValidCell(ref int col, ref int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFirstValidCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetFirstValidCell(ref col, ref row);
        }
        
        public virtual bool GetDataFillData(ref object var, short varType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetDataFillData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetDataFillData(ref var, varType);
        }
        
        public virtual string GetCustomName(string name) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCustomName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetCustomName(name);
        }
        
        public virtual string QueryCustomName(string name) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("QueryCustomName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.QueryCustomName(name);
        }
        
        public virtual int GetColItemData(int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetColItemData(col);
        }
        
        public virtual void GetClientArea(ref int width, ref int height) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetClientArea", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetClientArea(ref width, ref height);
        }
        
        public virtual bool GetCellPos(int col, int row, ref int x, ref int y, ref int width, ref int height) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCellPos", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetCellPos(col, row, ref x, ref y, ref width, ref height);
        }
        
        public virtual void GetCellFromScreenCoord(ref int col, ref int row, int x, int y) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCellFromScreenCoord", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetCellFromScreenCoord(ref col, ref row, x, y);
        }
        
        public virtual bool GetCellDirtyFlag(int col, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCellDirtyFlag", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.GetCellDirtyFlag(col, row);
        }
        
        public virtual void GetBottomRightCell(ref int col, ref int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBottomRightCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetBottomRightCell(ref col, ref row);
        }
        
        public virtual void ColWidthToTwips(System.Single width, ref int twips) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColWidthToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ColWidthToTwips(width, ref twips);
        }
        
        public virtual string ColNumberToLetter(int headerNumber) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColNumberToLetter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.ColNumberToLetter(headerNumber);
        }
        
        public virtual void CFSetResult(object var) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFSetResult", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CFSetResult(var);
        }
        
        public virtual string CFGetStringParam(short param) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetStringParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.CFGetStringParam(param);
        }
        
        public virtual void CFGetRangeParam(short param, ref int col, ref int row, ref int col2, ref int row2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetRangeParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CFGetRangeParam(param, ref col, ref row, ref col2, ref row2);
        }
        
        public virtual bool CFGetParamInfo(short param, ref FPSpreadADO.ValueTypeConstants type, ref FPSpreadADO.ValueStatusConstants status) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetParamInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.CFGetParamInfo(param, ref type, ref status);
        }
        
        public virtual int CFGetLongParam(short param) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetLongParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.CFGetLongParam(param);
        }
        
        public virtual System.Double CFGetDoubleParamExt(short param, ref System.Double paramValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetDoubleParamExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.CFGetDoubleParamExt(param, ref paramValue);
        }
        
        public virtual System.Double CFGetDoubleParam(short param) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetDoubleParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.CFGetDoubleParam(param);
        }
        
        public virtual void CFGetCellParam(short param, ref int col, ref int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CFGetCellParam", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CFGetCellParam(param, ref col, ref row);
        }
        
        public virtual bool AddCustomFunctionExt(string functionName, short minParamCnt, short maxParamCnt, FPSpreadADO.CustomFunctionFlagsConstants flags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCustomFunctionExt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.AddCustomFunctionExt(functionName, minParamCnt, maxParamCnt, flags);
        }
        
        public virtual bool AddCustomFunction(string functionName, short parameterCnt) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCustomFunction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.AddCustomFunction(functionName, parameterCnt);
        }
        
        public virtual void set_TypeCheckPicture(short index, stdole.StdPicture param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TypeCheckPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TypeCheckPicture(index, param0);
        }
        
        public virtual System.Drawing.Image get_TypeCheckPicture(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TypeCheckPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return GetPictureFromIPicture(this.ocx.get_TypeCheckPicture(index));
        }
        
        public virtual void set_SortKeyOrder(short nIndex, FPSpreadADO.SortKeyOrderConstants param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortKeyOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SortKeyOrder(nIndex, param0);
        }
        
        public virtual FPSpreadADO.SortKeyOrderConstants get_SortKeyOrder(short nIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortKeyOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_SortKeyOrder(nIndex);
        }
        
        public virtual void set_SortKey(short nIndex, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SortKey(nIndex, param0);
        }
        
        public virtual int get_SortKey(short nIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_SortKey(nIndex);
        }
        
        public virtual void set_RowHeight(int lRow, System.Double param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_RowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_RowHeight(lRow, param0);
        }
        
        public virtual System.Double get_RowHeight(int lRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_RowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_RowHeight(lRow);
        }
        
        public virtual void set_MaxTextRowHeight(int lRow, System.Double param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MaxTextRowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MaxTextRowHeight(lRow, param0);
        }
        
        public virtual System.Double get_MaxTextRowHeight(int lRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_MaxTextRowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_MaxTextRowHeight(lRow);
        }
        
        public virtual void set_MaxTextColWidth(int lCol, System.Double param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MaxTextColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MaxTextColWidth(lCol, param0);
        }
        
        public virtual System.Double get_MaxTextColWidth(int lCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_MaxTextColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_MaxTextColWidth(lCol);
        }
        
        public virtual void set_ColWidth(int lCol, System.Double param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColWidth(lCol, param0);
        }
        
        public virtual System.Double get_ColWidth(int lCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            return this.ocx.get_ColWidth(lCol);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxfpSpreadEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(FPSpreadADO._DSpreadEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((FPSpreadADO._DSpreadSheet)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnBeforeRowMove(object sender, _DSpreadEvents_BeforeRowMoveEvent e) {
            if ((this.BeforeRowMove != null)) {
                this.BeforeRowMove(sender, e);
            }
        }
        
        internal void RaiseOnBeforeColMove(object sender, _DSpreadEvents_BeforeColMoveEvent e) {
            if ((this.BeforeColMove != null)) {
                this.BeforeColMove(sender, e);
            }
        }
        
        internal void RaiseOnBeforeScrollTip(object sender, _DSpreadEvents_BeforeScrollTipEvent e) {
            if ((this.BeforeScrollTip != null)) {
                this.BeforeScrollTip(sender, e);
            }
        }
        
        internal void RaiseOnDataLoaded(object sender, System.EventArgs e) {
            if ((this.DataLoaded != null)) {
                this.DataLoaded(sender, e);
            }
        }
        
        internal void RaiseOnBeforeEditMode(object sender, _DSpreadEvents_BeforeEditModeEvent e) {
            if ((this.BeforeEditMode != null)) {
                this.BeforeEditMode(sender, e);
            }
        }
        
        internal void RaiseOnTabScrolled(object sender, _DSpreadEvents_TabScrolledEvent e) {
            if ((this.TabScrolled != null)) {
                this.TabScrolled(sender, e);
            }
        }
        
        internal void RaiseOnTabScrolling(object sender, _DSpreadEvents_TabScrollingEvent e) {
            if ((this.TabScrolling != null)) {
                this.TabScrolling(sender, e);
            }
        }
        
        internal void RaiseOnSheetChanged(object sender, _DSpreadEvents_SheetChangedEvent e) {
            if ((this.SheetChanged != null)) {
                this.SheetChanged(sender, e);
            }
        }
        
        internal void RaiseOnSheetChanging(object sender, _DSpreadEvents_SheetChangingEvent e) {
            if ((this.SheetChanging != null)) {
                this.SheetChanging(sender, e);
            }
        }
        
        internal void RaiseOnScriptKeyUp(object sender, _DSpreadEvents_ScriptKeyUpEvent e) {
            if ((this.ScriptKeyUp != null)) {
                this.ScriptKeyUp(sender, e);
            }
        }
        
        internal void RaiseOnScriptKeyPress(object sender, _DSpreadEvents_ScriptKeyPressEvent e) {
            if ((this.ScriptKeyPress != null)) {
                this.ScriptKeyPress(sender, e);
            }
        }
        
        internal void RaiseOnScriptKeyDown(object sender, _DSpreadEvents_ScriptKeyDownEvent e) {
            if ((this.ScriptKeyDown != null)) {
                this.ScriptKeyDown(sender, e);
            }
        }
        
        internal void RaiseOnScriptBeforeUserSort(object sender, _DSpreadEvents_ScriptBeforeUserSortEvent e) {
            if ((this.ScriptBeforeUserSort != null)) {
                this.ScriptBeforeUserSort(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEStartDrag(object sender, _DSpreadEvents_ScriptOLEStartDragEvent e) {
            if ((this.ScriptOLEStartDrag != null)) {
                this.ScriptOLEStartDrag(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEGiveFeedback(object sender, _DSpreadEvents_ScriptOLEGiveFeedbackEvent e) {
            if ((this.ScriptOLEGiveFeedback != null)) {
                this.ScriptOLEGiveFeedback(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEDragOver(object sender, _DSpreadEvents_ScriptOLEDragOverEvent e) {
            if ((this.ScriptOLEDragOver != null)) {
                this.ScriptOLEDragOver(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEDragDrop(object sender, _DSpreadEvents_ScriptOLEDragDropEvent e) {
            if ((this.ScriptOLEDragDrop != null)) {
                this.ScriptOLEDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLECompleteDrag(object sender, _DSpreadEvents_ScriptOLECompleteDragEvent e) {
            if ((this.ScriptOLECompleteDrag != null)) {
                this.ScriptOLECompleteDrag(sender, e);
            }
        }
        
        internal void RaiseOnScriptTextTipFetch(object sender, _DSpreadEvents_ScriptTextTipFetchEvent e) {
            if ((this.ScriptTextTipFetch != null)) {
                this.ScriptTextTipFetch(sender, e);
            }
        }
        
        internal void RaiseOnScriptPrintMsgBox(object sender, _DSpreadEvents_ScriptPrintMsgBoxEvent e) {
            if ((this.ScriptPrintMsgBox != null)) {
                this.ScriptPrintMsgBox(sender, e);
            }
        }
        
        internal void RaiseOnScriptQueryData(object sender, _DSpreadEvents_ScriptQueryDataEvent e) {
            if ((this.ScriptQueryData != null)) {
                this.ScriptQueryData(sender, e);
            }
        }
        
        internal void RaiseOnScriptQueryAdvance(object sender, _DSpreadEvents_ScriptQueryAdvanceEvent e) {
            if ((this.ScriptQueryAdvance != null)) {
                this.ScriptQueryAdvance(sender, e);
            }
        }
        
        internal void RaiseOnScriptPrintAbort(object sender, _DSpreadEvents_ScriptPrintAbortEvent e) {
            if ((this.ScriptPrintAbort != null)) {
                this.ScriptPrintAbort(sender, e);
            }
        }
        
        internal void RaiseOnScriptLeaveRow(object sender, _DSpreadEvents_ScriptLeaveRowEvent e) {
            if ((this.ScriptLeaveRow != null)) {
                this.ScriptLeaveRow(sender, e);
            }
        }
        
        internal void RaiseOnScriptLeaveCell(object sender, _DSpreadEvents_ScriptLeaveCellEvent e) {
            if ((this.ScriptLeaveCell != null)) {
                this.ScriptLeaveCell(sender, e);
            }
        }
        
        internal void RaiseOnScriptDragDropBlock(object sender, _DSpreadEvents_ScriptDragDropBlockEvent e) {
            if ((this.ScriptDragDropBlock != null)) {
                this.ScriptDragDropBlock(sender, e);
            }
        }
        
        internal void RaiseOnScriptDataFill(object sender, _DSpreadEvents_ScriptDataFillEvent e) {
            if ((this.ScriptDataFill != null)) {
                this.ScriptDataFill(sender, e);
            }
        }
        
        internal void RaiseOnScriptCustomFunction(object sender, _DSpreadEvents_ScriptCustomFunctionEvent e) {
            if ((this.ScriptCustomFunction != null)) {
                this.ScriptCustomFunction(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, _DSpreadEvents_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, _DSpreadEvents_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, _DSpreadEvents_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, _DSpreadEvents_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, _DSpreadEvents_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, _DSpreadEvents_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnAfterUserSort(object sender, _DSpreadEvents_AfterUserSortEvent e) {
            if ((this.AfterUserSort != null)) {
                this.AfterUserSort(sender, e);
            }
        }
        
        internal void RaiseOnBeforeUserSort(object sender, _DSpreadEvents_BeforeUserSortEvent e) {
            if ((this.BeforeUserSort != null)) {
                this.BeforeUserSort(sender, e);
            }
        }
        
        internal void RaiseOnOLEStartDrag(object sender, _DSpreadEvents_OLEStartDragEvent e) {
            if ((this.OLEStartDrag != null)) {
                this.OLEStartDrag(sender, e);
            }
        }
        
        internal void RaiseOnOLESetData(object sender, _DSpreadEvents_OLESetDataEvent e) {
            if ((this.OLESetData != null)) {
                this.OLESetData(sender, e);
            }
        }
        
        internal void RaiseOnOLEGiveFeedback(object sender, _DSpreadEvents_OLEGiveFeedbackEvent e) {
            if ((this.OLEGiveFeedback != null)) {
                this.OLEGiveFeedback(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragOver(object sender, _DSpreadEvents_OLEDragOverEvent e) {
            if ((this.OLEDragOver != null)) {
                this.OLEDragOver(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragDrop(object sender, _DSpreadEvents_OLEDragDropEvent e) {
            if ((this.OLEDragDrop != null)) {
                this.OLEDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnOLECompleteDrag(object sender, _DSpreadEvents_OLECompleteDragEvent e) {
            if ((this.OLECompleteDrag != null)) {
                this.OLECompleteDrag(sender, e);
            }
        }
        
        internal void RaiseOnEditChange(object sender, _DSpreadEvents_EditChangeEvent e) {
            if ((this.EditChange != null)) {
                this.EditChange(sender, e);
            }
        }
        
        internal void RaiseOnTextTipFetch(object sender, _DSpreadEvents_TextTipFetchEvent e) {
            if ((this.TextTipFetch != null)) {
                this.TextTipFetch(sender, e);
            }
        }
        
        internal void RaiseOnComboSelChange(object sender, _DSpreadEvents_ComboSelChangeEvent e) {
            if ((this.ComboSelChange != null)) {
                this.ComboSelChange(sender, e);
            }
        }
        
        internal void RaiseOnComboDropDown(object sender, _DSpreadEvents_ComboDropDownEvent e) {
            if ((this.ComboDropDown != null)) {
                this.ComboDropDown(sender, e);
            }
        }
        
        internal void RaiseOnComboCloseUp(object sender, _DSpreadEvents_ComboCloseUpEvent e) {
            if ((this.ComboCloseUp != null)) {
                this.ComboCloseUp(sender, e);
            }
        }
        
        internal void RaiseOnPrintMsgBox(object sender, _DSpreadEvents_PrintMsgBoxEvent e) {
            if ((this.PrintMsgBox != null)) {
                this.PrintMsgBox(sender, e);
            }
        }
        
        internal void RaiseOnVirtualClearData(object sender, _DSpreadEvents_VirtualClearDataEvent e) {
            if ((this.VirtualClearData != null)) {
                this.VirtualClearData(sender, e);
            }
        }
        
        internal void RaiseOnUserFormulaEntered(object sender, _DSpreadEvents_UserFormulaEnteredEvent e) {
            if ((this.UserFormulaEntered != null)) {
                this.UserFormulaEntered(sender, e);
            }
        }
        
        internal void RaiseOnTopLeftChange(object sender, _DSpreadEvents_TopLeftChangeEvent e) {
            if ((this.TopLeftChange != null)) {
                this.TopLeftChange(sender, e);
            }
        }
        
        internal void RaiseOnSelChange(object sender, _DSpreadEvents_SelChangeEvent e) {
            if ((this.SelChange != null)) {
                this.SelChange(sender, e);
            }
        }
        
        internal void RaiseOnRowHeightChange(object sender, _DSpreadEvents_RowHeightChangeEvent e) {
            if ((this.RowHeightChange != null)) {
                this.RowHeightChange(sender, e);
            }
        }
        
        internal void RaiseOnRightClick(object sender, _DSpreadEvents_RightClickEvent e) {
            if ((this.RightClick != null)) {
                this.RightClick(sender, e);
            }
        }
        
        internal void RaiseOnQueryData(object sender, _DSpreadEvents_QueryDataEvent e) {
            if ((this.QueryData != null)) {
                this.QueryData(sender, e);
            }
        }
        
        internal void RaiseOnQueryAdvance(object sender, _DSpreadEvents_QueryAdvanceEvent e) {
            if ((this.QueryAdvance != null)) {
                this.QueryAdvance(sender, e);
            }
        }
        
        internal void RaiseOnPrintAbort(object sender, _DSpreadEvents_PrintAbortEvent e) {
            if ((this.PrintAbort != null)) {
                this.PrintAbort(sender, e);
            }
        }
        
        internal void RaiseOnLeaveRow(object sender, _DSpreadEvents_LeaveRowEvent e) {
            if ((this.LeaveRow != null)) {
                this.LeaveRow(sender, e);
            }
        }
        
        internal void RaiseOnLeaveCell(object sender, _DSpreadEvents_LeaveCellEvent e) {
            if ((this.LeaveCell != null)) {
                this.LeaveCell(sender, e);
            }
        }
        
        internal void RaiseOnEnterRow(object sender, _DSpreadEvents_EnterRowEvent e) {
            if ((this.EnterRow != null)) {
                this.EnterRow(sender, e);
            }
        }
        
        internal void RaiseOnEditModeEvent(object sender, _DSpreadEvents_EditModeEvent e) {
            if ((this.EditModeEvent != null)) {
                this.EditModeEvent(sender, e);
            }
        }
        
        internal void RaiseOnEditError(object sender, _DSpreadEvents_EditErrorEvent e) {
            if ((this.EditError != null)) {
                this.EditError(sender, e);
            }
        }
        
        internal void RaiseOnDrawItem(object sender, _DSpreadEvents_DrawItemEvent e) {
            if ((this.DrawItem != null)) {
                this.DrawItem(sender, e);
            }
        }
        
        internal void RaiseOnDragDropBlock(object sender, _DSpreadEvents_DragDropBlockEvent e) {
            if ((this.DragDropBlock != null)) {
                this.DragDropBlock(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, _DSpreadEvents_DblClickEvent e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnDataFill(object sender, _DSpreadEvents_DataFillEvent e) {
            if ((this.DataFill != null)) {
                this.DataFill(sender, e);
            }
        }
        
        internal void RaiseOnDataColConfig(object sender, _DSpreadEvents_DataColConfigEvent e) {
            if ((this.DataColConfig != null)) {
                this.DataColConfig(sender, e);
            }
        }
        
        internal void RaiseOnCustomFunction(object sender, _DSpreadEvents_CustomFunctionEvent e) {
            if ((this.CustomFunction != null)) {
                this.CustomFunction(sender, e);
            }
        }
        
        internal void RaiseOnColWidthChange(object sender, _DSpreadEvents_ColWidthChangeEvent e) {
            if ((this.ColWidthChange != null)) {
                this.ColWidthChange(sender, e);
            }
        }
        
        internal void RaiseOnClickEvent(object sender, _DSpreadEvents_ClickEvent e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnChange(object sender, _DSpreadEvents_ChangeEvent e) {
            if ((this.Change != null)) {
                this.Change(sender, e);
            }
        }
        
        internal void RaiseOnButtonClicked(object sender, _DSpreadEvents_ButtonClickedEvent e) {
            if ((this.ButtonClicked != null)) {
                this.ButtonClicked(sender, e);
            }
        }
        
        internal void RaiseOnBlockSelected(object sender, _DSpreadEvents_BlockSelectedEvent e) {
            if ((this.BlockSelected != null)) {
                this.BlockSelected(sender, e);
            }
        }
        
        internal void RaiseOnAdvance(object sender, _DSpreadEvents_AdvanceEvent e) {
            if ((this.Advance != null)) {
                this.Advance(sender, e);
            }
        }
        
        protected override void OnInPlaceActive() {
            base.OnInPlaceActive();
            if ((this.axDataSource != null)) {
                this.ocx.DataSource = this.axDataSource;
            }
        }
    }
    
    public delegate void _DSpreadEvents_BeforeRowMoveEventHandler(object sender, _DSpreadEvents_BeforeRowMoveEvent e);
    
    public class _DSpreadEvents_BeforeRowMoveEvent {
        
        public int row;
        
        public int row2;
        
        public int rowDest;
        
        public object cancel;
        
        public _DSpreadEvents_BeforeRowMoveEvent(int row, int row2, int rowDest, object cancel) {
            this.row = row;
            this.row2 = row2;
            this.rowDest = rowDest;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_BeforeColMoveEventHandler(object sender, _DSpreadEvents_BeforeColMoveEvent e);
    
    public class _DSpreadEvents_BeforeColMoveEvent {
        
        public int col;
        
        public int col2;
        
        public int colDest;
        
        public object cancel;
        
        public _DSpreadEvents_BeforeColMoveEvent(int col, int col2, int colDest, object cancel) {
            this.col = col;
            this.col2 = col2;
            this.colDest = colDest;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_BeforeScrollTipEventHandler(object sender, _DSpreadEvents_BeforeScrollTipEvent e);
    
    public class _DSpreadEvents_BeforeScrollTipEvent {
        
        public bool isVertical;
        
        public int index;
        
        public string text;
        
        public object width;
        
        public _DSpreadEvents_BeforeScrollTipEvent(bool isVertical, int index, string text, object width) {
            this.isVertical = isVertical;
            this.index = index;
            this.text = text;
            this.width = width;
        }
    }
    
    public delegate void _DSpreadEvents_BeforeEditModeEventHandler(object sender, _DSpreadEvents_BeforeEditModeEvent e);
    
    public class _DSpreadEvents_BeforeEditModeEvent {
        
        public int col;
        
        public int row;
        
        public FPSpreadADO.BeforeEditModeActionConstants userAction;
        
        public object cursorPos;
        
        public object cancel;
        
        public _DSpreadEvents_BeforeEditModeEvent(int col, int row, FPSpreadADO.BeforeEditModeActionConstants userAction, object cursorPos, object cancel) {
            this.col = col;
            this.row = row;
            this.userAction = userAction;
            this.cursorPos = cursorPos;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_TabScrolledEventHandler(object sender, _DSpreadEvents_TabScrolledEvent e);
    
    public class _DSpreadEvents_TabScrolledEvent {
        
        public short oldLeftSheet;
        
        public short newLeftSheet;
        
        public _DSpreadEvents_TabScrolledEvent(short oldLeftSheet, short newLeftSheet) {
            this.oldLeftSheet = oldLeftSheet;
            this.newLeftSheet = newLeftSheet;
        }
    }
    
    public delegate void _DSpreadEvents_TabScrollingEventHandler(object sender, _DSpreadEvents_TabScrollingEvent e);
    
    public class _DSpreadEvents_TabScrollingEvent {
        
        public short oldLeftSheet;
        
        public short newLeftSheet;
        
        public _DSpreadEvents_TabScrollingEvent(short oldLeftSheet, short newLeftSheet) {
            this.oldLeftSheet = oldLeftSheet;
            this.newLeftSheet = newLeftSheet;
        }
    }
    
    public delegate void _DSpreadEvents_SheetChangedEventHandler(object sender, _DSpreadEvents_SheetChangedEvent e);
    
    public class _DSpreadEvents_SheetChangedEvent {
        
        public short oldSheet;
        
        public short newSheet;
        
        public _DSpreadEvents_SheetChangedEvent(short oldSheet, short newSheet) {
            this.oldSheet = oldSheet;
            this.newSheet = newSheet;
        }
    }
    
    public delegate void _DSpreadEvents_SheetChangingEventHandler(object sender, _DSpreadEvents_SheetChangingEvent e);
    
    public class _DSpreadEvents_SheetChangingEvent {
        
        public short oldSheet;
        
        public short newSheet;
        
        public object cancel;
        
        public _DSpreadEvents_SheetChangingEvent(short oldSheet, short newSheet, object cancel) {
            this.oldSheet = oldSheet;
            this.newSheet = newSheet;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptKeyUpEventHandler(object sender, _DSpreadEvents_ScriptKeyUpEvent e);
    
    public class _DSpreadEvents_ScriptKeyUpEvent {
        
        public object keyCode;
        
        public short shift;
        
        public _DSpreadEvents_ScriptKeyUpEvent(object keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptKeyPressEventHandler(object sender, _DSpreadEvents_ScriptKeyPressEvent e);
    
    public class _DSpreadEvents_ScriptKeyPressEvent {
        
        public object keyAscii;
        
        public _DSpreadEvents_ScriptKeyPressEvent(object keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptKeyDownEventHandler(object sender, _DSpreadEvents_ScriptKeyDownEvent e);
    
    public class _DSpreadEvents_ScriptKeyDownEvent {
        
        public object keyCode;
        
        public short shift;
        
        public _DSpreadEvents_ScriptKeyDownEvent(object keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptBeforeUserSortEventHandler(object sender, _DSpreadEvents_ScriptBeforeUserSortEvent e);
    
    public class _DSpreadEvents_ScriptBeforeUserSortEvent {
        
        public int col;
        
        public int state;
        
        public object defaultAction;
        
        public _DSpreadEvents_ScriptBeforeUserSortEvent(int col, int state, object defaultAction) {
            this.col = col;
            this.state = state;
            this.defaultAction = defaultAction;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptOLEStartDragEventHandler(object sender, _DSpreadEvents_ScriptOLEStartDragEvent e);
    
    public class _DSpreadEvents_ScriptOLEStartDragEvent {
        
        public object data;
        
        public object allowedEffects;
        
        public _DSpreadEvents_ScriptOLEStartDragEvent(object data, object allowedEffects) {
            this.data = data;
            this.allowedEffects = allowedEffects;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptOLEGiveFeedbackEventHandler(object sender, _DSpreadEvents_ScriptOLEGiveFeedbackEvent e);
    
    public class _DSpreadEvents_ScriptOLEGiveFeedbackEvent {
        
        public object effect;
        
        public object defaultCursors;
        
        public _DSpreadEvents_ScriptOLEGiveFeedbackEvent(object effect, object defaultCursors) {
            this.effect = effect;
            this.defaultCursors = defaultCursors;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptOLEDragOverEventHandler(object sender, _DSpreadEvents_ScriptOLEDragOverEvent e);
    
    public class _DSpreadEvents_ScriptOLEDragOverEvent {
        
        public object data;
        
        public object effect;
        
        public object button;
        
        public object shift;
        
        public object x;
        
        public object y;
        
        public object state;
        
        public _DSpreadEvents_ScriptOLEDragOverEvent(object data, object effect, object button, object shift, object x, object y, object state) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptOLEDragDropEventHandler(object sender, _DSpreadEvents_ScriptOLEDragDropEvent e);
    
    public class _DSpreadEvents_ScriptOLEDragDropEvent {
        
        public object data;
        
        public object effect;
        
        public object button;
        
        public object shift;
        
        public object x;
        
        public object y;
        
        public _DSpreadEvents_ScriptOLEDragDropEvent(object data, object effect, object button, object shift, object x, object y) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptOLECompleteDragEventHandler(object sender, _DSpreadEvents_ScriptOLECompleteDragEvent e);
    
    public class _DSpreadEvents_ScriptOLECompleteDragEvent {
        
        public object effect;
        
        public _DSpreadEvents_ScriptOLECompleteDragEvent(object effect) {
            this.effect = effect;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptTextTipFetchEventHandler(object sender, _DSpreadEvents_ScriptTextTipFetchEvent e);
    
    public class _DSpreadEvents_ScriptTextTipFetchEvent {
        
        public int col;
        
        public int row;
        
        public object multiLine;
        
        public object tipWidth;
        
        public object tipText;
        
        public object showTip;
        
        public _DSpreadEvents_ScriptTextTipFetchEvent(int col, int row, object multiLine, object tipWidth, object tipText, object showTip) {
            this.col = col;
            this.row = row;
            this.multiLine = multiLine;
            this.tipWidth = tipWidth;
            this.tipText = tipText;
            this.showTip = showTip;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptPrintMsgBoxEventHandler(object sender, _DSpreadEvents_ScriptPrintMsgBoxEvent e);
    
    public class _DSpreadEvents_ScriptPrintMsgBoxEvent {
        
        public string text;
        
        public int printID;
        
        public bool openMsgBox;
        
        public object processed;
        
        public _DSpreadEvents_ScriptPrintMsgBoxEvent(string text, int printID, bool openMsgBox, object processed) {
            this.text = text;
            this.printID = printID;
            this.openMsgBox = openMsgBox;
            this.processed = processed;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptQueryDataEventHandler(object sender, _DSpreadEvents_ScriptQueryDataEvent e);
    
    public class _DSpreadEvents_ScriptQueryDataEvent {
        
        public int row;
        
        public int rowsNeeded;
        
        public object rowsLoaded;
        
        public short direction;
        
        public object atTop;
        
        public object atBottom;
        
        public _DSpreadEvents_ScriptQueryDataEvent(int row, int rowsNeeded, object rowsLoaded, short direction, object atTop, object atBottom) {
            this.row = row;
            this.rowsNeeded = rowsNeeded;
            this.rowsLoaded = rowsLoaded;
            this.direction = direction;
            this.atTop = atTop;
            this.atBottom = atBottom;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptQueryAdvanceEventHandler(object sender, _DSpreadEvents_ScriptQueryAdvanceEvent e);
    
    public class _DSpreadEvents_ScriptQueryAdvanceEvent {
        
        public bool advanceNext;
        
        public object cancel;
        
        public _DSpreadEvents_ScriptQueryAdvanceEvent(bool advanceNext, object cancel) {
            this.advanceNext = advanceNext;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptPrintAbortEventHandler(object sender, _DSpreadEvents_ScriptPrintAbortEvent e);
    
    public class _DSpreadEvents_ScriptPrintAbortEvent {
        
        public object abort;
        
        public _DSpreadEvents_ScriptPrintAbortEvent(object abort) {
            this.abort = abort;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptLeaveRowEventHandler(object sender, _DSpreadEvents_ScriptLeaveRowEvent e);
    
    public class _DSpreadEvents_ScriptLeaveRowEvent {
        
        public int row;
        
        public bool rowWasLast;
        
        public bool rowChanged;
        
        public bool allCellsHaveData;
        
        public int newRow;
        
        public int newRowIsLast;
        
        public object cancel;
        
        public _DSpreadEvents_ScriptLeaveRowEvent(int row, bool rowWasLast, bool rowChanged, bool allCellsHaveData, int newRow, int newRowIsLast, object cancel) {
            this.row = row;
            this.rowWasLast = rowWasLast;
            this.rowChanged = rowChanged;
            this.allCellsHaveData = allCellsHaveData;
            this.newRow = newRow;
            this.newRowIsLast = newRowIsLast;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptLeaveCellEventHandler(object sender, _DSpreadEvents_ScriptLeaveCellEvent e);
    
    public class _DSpreadEvents_ScriptLeaveCellEvent {
        
        public int col;
        
        public int row;
        
        public int newCol;
        
        public int newRow;
        
        public object cancel;
        
        public _DSpreadEvents_ScriptLeaveCellEvent(int col, int row, int newCol, int newRow, object cancel) {
            this.col = col;
            this.row = row;
            this.newCol = newCol;
            this.newRow = newRow;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptDragDropBlockEventHandler(object sender, _DSpreadEvents_ScriptDragDropBlockEvent e);
    
    public class _DSpreadEvents_ScriptDragDropBlockEvent {
        
        public int col;
        
        public int row;
        
        public int col2;
        
        public int row2;
        
        public int newCol;
        
        public int newRow;
        
        public int newCol2;
        
        public int newRow2;
        
        public bool overwrite;
        
        public object action;
        
        public object dataOnly;
        
        public object cancel;
        
        public _DSpreadEvents_ScriptDragDropBlockEvent(int col, int row, int col2, int row2, int newCol, int newRow, int newCol2, int newRow2, bool overwrite, object action, object dataOnly, object cancel) {
            this.col = col;
            this.row = row;
            this.col2 = col2;
            this.row2 = row2;
            this.newCol = newCol;
            this.newRow = newRow;
            this.newCol2 = newCol2;
            this.newRow2 = newRow2;
            this.overwrite = overwrite;
            this.action = action;
            this.dataOnly = dataOnly;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptDataFillEventHandler(object sender, _DSpreadEvents_ScriptDataFillEvent e);
    
    public class _DSpreadEvents_ScriptDataFillEvent {
        
        public int col;
        
        public int row;
        
        public short dataType;
        
        public short fGetData;
        
        public object cancel;
        
        public _DSpreadEvents_ScriptDataFillEvent(int col, int row, short dataType, short fGetData, object cancel) {
            this.col = col;
            this.row = row;
            this.dataType = dataType;
            this.fGetData = fGetData;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_ScriptCustomFunctionEventHandler(object sender, _DSpreadEvents_ScriptCustomFunctionEvent e);
    
    public class _DSpreadEvents_ScriptCustomFunctionEvent {
        
        public string functionName;
        
        public short parameterCnt;
        
        public int col;
        
        public int row;
        
        public object status;
        
        public _DSpreadEvents_ScriptCustomFunctionEvent(string functionName, short parameterCnt, int col, int row, object status) {
            this.functionName = functionName;
            this.parameterCnt = parameterCnt;
            this.col = col;
            this.row = row;
            this.status = status;
        }
    }
    
    public delegate void _DSpreadEvents_MouseUpEventHandler(object sender, _DSpreadEvents_MouseUpEvent e);
    
    public class _DSpreadEvents_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadEvents_MouseUpEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadEvents_MouseMoveEventHandler(object sender, _DSpreadEvents_MouseMoveEvent e);
    
    public class _DSpreadEvents_MouseMoveEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadEvents_MouseMoveEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadEvents_MouseDownEventHandler(object sender, _DSpreadEvents_MouseDownEvent e);
    
    public class _DSpreadEvents_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadEvents_MouseDownEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadEvents_KeyUpEventHandler(object sender, _DSpreadEvents_KeyUpEvent e);
    
    public class _DSpreadEvents_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DSpreadEvents_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadEvents_KeyPressEventHandler(object sender, _DSpreadEvents_KeyPressEvent e);
    
    public class _DSpreadEvents_KeyPressEvent {
        
        public short keyAscii;
        
        public _DSpreadEvents_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void _DSpreadEvents_KeyDownEventHandler(object sender, _DSpreadEvents_KeyDownEvent e);
    
    public class _DSpreadEvents_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DSpreadEvents_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadEvents_AfterUserSortEventHandler(object sender, _DSpreadEvents_AfterUserSortEvent e);
    
    public class _DSpreadEvents_AfterUserSortEvent {
        
        public int col;
        
        public _DSpreadEvents_AfterUserSortEvent(int col) {
            this.col = col;
        }
    }
    
    public delegate void _DSpreadEvents_BeforeUserSortEventHandler(object sender, _DSpreadEvents_BeforeUserSortEvent e);
    
    public class _DSpreadEvents_BeforeUserSortEvent {
        
        public int col;
        
        public FPSpreadADO.BeforeUserSortStateConstants state;
        
        public FPSpreadADO.BeforeUserSortDefaultActionConstants defaultAction;
        
        public _DSpreadEvents_BeforeUserSortEvent(int col, FPSpreadADO.BeforeUserSortStateConstants state, FPSpreadADO.BeforeUserSortDefaultActionConstants defaultAction) {
            this.col = col;
            this.state = state;
            this.defaultAction = defaultAction;
        }
    }
    
    public delegate void _DSpreadEvents_OLEStartDragEventHandler(object sender, _DSpreadEvents_OLEStartDragEvent e);
    
    public class _DSpreadEvents_OLEStartDragEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int allowedEffects;
        
        public _DSpreadEvents_OLEStartDragEvent(FPSpreadADO.fpDataObject data, int allowedEffects) {
            this.data = data;
            this.allowedEffects = allowedEffects;
        }
    }
    
    public delegate void _DSpreadEvents_OLESetDataEventHandler(object sender, _DSpreadEvents_OLESetDataEvent e);
    
    public class _DSpreadEvents_OLESetDataEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public short dataFormat;
        
        public _DSpreadEvents_OLESetDataEvent(FPSpreadADO.fpDataObject data, short dataFormat) {
            this.data = data;
            this.dataFormat = dataFormat;
        }
    }
    
    public delegate void _DSpreadEvents_OLEGiveFeedbackEventHandler(object sender, _DSpreadEvents_OLEGiveFeedbackEvent e);
    
    public class _DSpreadEvents_OLEGiveFeedbackEvent {
        
        public int effect;
        
        public bool defaultCursors;
        
        public _DSpreadEvents_OLEGiveFeedbackEvent(int effect, bool defaultCursors) {
            this.effect = effect;
            this.defaultCursors = defaultCursors;
        }
    }
    
    public delegate void _DSpreadEvents_OLEDragOverEventHandler(object sender, _DSpreadEvents_OLEDragOverEvent e);
    
    public class _DSpreadEvents_OLEDragOverEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public System.Single x;
        
        public System.Single y;
        
        public short state;
        
        public _DSpreadEvents_OLEDragOverEvent(FPSpreadADO.fpDataObject data, int effect, short button, short shift, System.Single x, System.Single y, short state) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void _DSpreadEvents_OLEDragDropEventHandler(object sender, _DSpreadEvents_OLEDragDropEvent e);
    
    public class _DSpreadEvents_OLEDragDropEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public System.Single x;
        
        public System.Single y;
        
        public _DSpreadEvents_OLEDragDropEvent(FPSpreadADO.fpDataObject data, int effect, short button, short shift, System.Single x, System.Single y) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadEvents_OLECompleteDragEventHandler(object sender, _DSpreadEvents_OLECompleteDragEvent e);
    
    public class _DSpreadEvents_OLECompleteDragEvent {
        
        public int effect;
        
        public _DSpreadEvents_OLECompleteDragEvent(int effect) {
            this.effect = effect;
        }
    }
    
    public delegate void _DSpreadEvents_EditChangeEventHandler(object sender, _DSpreadEvents_EditChangeEvent e);
    
    public class _DSpreadEvents_EditChangeEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_EditChangeEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_TextTipFetchEventHandler(object sender, _DSpreadEvents_TextTipFetchEvent e);
    
    public class _DSpreadEvents_TextTipFetchEvent {
        
        public int col;
        
        public int row;
        
        public FPSpreadADO.TextTipFetchMultilineConstants multiLine;
        
        public int tipWidth;
        
        public string tipText;
        
        public bool showTip;
        
        public _DSpreadEvents_TextTipFetchEvent(int col, int row, FPSpreadADO.TextTipFetchMultilineConstants multiLine, int tipWidth, string tipText, bool showTip) {
            this.col = col;
            this.row = row;
            this.multiLine = multiLine;
            this.tipWidth = tipWidth;
            this.tipText = tipText;
            this.showTip = showTip;
        }
    }
    
    public delegate void _DSpreadEvents_ComboSelChangeEventHandler(object sender, _DSpreadEvents_ComboSelChangeEvent e);
    
    public class _DSpreadEvents_ComboSelChangeEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_ComboSelChangeEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_ComboDropDownEventHandler(object sender, _DSpreadEvents_ComboDropDownEvent e);
    
    public class _DSpreadEvents_ComboDropDownEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_ComboDropDownEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_ComboCloseUpEventHandler(object sender, _DSpreadEvents_ComboCloseUpEvent e);
    
    public class _DSpreadEvents_ComboCloseUpEvent {
        
        public int col;
        
        public int row;
        
        public short selChange;
        
        public _DSpreadEvents_ComboCloseUpEvent(int col, int row, short selChange) {
            this.col = col;
            this.row = row;
            this.selChange = selChange;
        }
    }
    
    public delegate void _DSpreadEvents_PrintMsgBoxEventHandler(object sender, _DSpreadEvents_PrintMsgBoxEvent e);
    
    public class _DSpreadEvents_PrintMsgBoxEvent {
        
        public string text;
        
        public int printID;
        
        public bool openMsgBox;
        
        public bool processed;
        
        public _DSpreadEvents_PrintMsgBoxEvent(string text, int printID, bool openMsgBox, bool processed) {
            this.text = text;
            this.printID = printID;
            this.openMsgBox = openMsgBox;
            this.processed = processed;
        }
    }
    
    public delegate void _DSpreadEvents_VirtualClearDataEventHandler(object sender, _DSpreadEvents_VirtualClearDataEvent e);
    
    public class _DSpreadEvents_VirtualClearDataEvent {
        
        public int row;
        
        public int rowsBeingCleared;
        
        public _DSpreadEvents_VirtualClearDataEvent(int row, int rowsBeingCleared) {
            this.row = row;
            this.rowsBeingCleared = rowsBeingCleared;
        }
    }
    
    public delegate void _DSpreadEvents_UserFormulaEnteredEventHandler(object sender, _DSpreadEvents_UserFormulaEnteredEvent e);
    
    public class _DSpreadEvents_UserFormulaEnteredEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_UserFormulaEnteredEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_TopLeftChangeEventHandler(object sender, _DSpreadEvents_TopLeftChangeEvent e);
    
    public class _DSpreadEvents_TopLeftChangeEvent {
        
        public int oldLeft;
        
        public int oldTop;
        
        public int newLeft;
        
        public int newTop;
        
        public _DSpreadEvents_TopLeftChangeEvent(int oldLeft, int oldTop, int newLeft, int newTop) {
            this.oldLeft = oldLeft;
            this.oldTop = oldTop;
            this.newLeft = newLeft;
            this.newTop = newTop;
        }
    }
    
    public delegate void _DSpreadEvents_SelChangeEventHandler(object sender, _DSpreadEvents_SelChangeEvent e);
    
    public class _DSpreadEvents_SelChangeEvent {
        
        public int blockCol;
        
        public int blockRow;
        
        public int blockCol2;
        
        public int blockRow2;
        
        public int curCol;
        
        public int curRow;
        
        public _DSpreadEvents_SelChangeEvent(int blockCol, int blockRow, int blockCol2, int blockRow2, int curCol, int curRow) {
            this.blockCol = blockCol;
            this.blockRow = blockRow;
            this.blockCol2 = blockCol2;
            this.blockRow2 = blockRow2;
            this.curCol = curCol;
            this.curRow = curRow;
        }
    }
    
    public delegate void _DSpreadEvents_RowHeightChangeEventHandler(object sender, _DSpreadEvents_RowHeightChangeEvent e);
    
    public class _DSpreadEvents_RowHeightChangeEvent {
        
        public int row1;
        
        public int row2;
        
        public _DSpreadEvents_RowHeightChangeEvent(int row1, int row2) {
            this.row1 = row1;
            this.row2 = row2;
        }
    }
    
    public delegate void _DSpreadEvents_RightClickEventHandler(object sender, _DSpreadEvents_RightClickEvent e);
    
    public class _DSpreadEvents_RightClickEvent {
        
        public short clickType;
        
        public int col;
        
        public int row;
        
        public int mouseX;
        
        public int mouseY;
        
        public _DSpreadEvents_RightClickEvent(short clickType, int col, int row, int mouseX, int mouseY) {
            this.clickType = clickType;
            this.col = col;
            this.row = row;
            this.mouseX = mouseX;
            this.mouseY = mouseY;
        }
    }
    
    public delegate void _DSpreadEvents_QueryDataEventHandler(object sender, _DSpreadEvents_QueryDataEvent e);
    
    public class _DSpreadEvents_QueryDataEvent {
        
        public int row;
        
        public int rowsNeeded;
        
        public int rowsLoaded;
        
        public short direction;
        
        public bool atTop;
        
        public bool atBottom;
        
        public _DSpreadEvents_QueryDataEvent(int row, int rowsNeeded, int rowsLoaded, short direction, bool atTop, bool atBottom) {
            this.row = row;
            this.rowsNeeded = rowsNeeded;
            this.rowsLoaded = rowsLoaded;
            this.direction = direction;
            this.atTop = atTop;
            this.atBottom = atBottom;
        }
    }
    
    public delegate void _DSpreadEvents_QueryAdvanceEventHandler(object sender, _DSpreadEvents_QueryAdvanceEvent e);
    
    public class _DSpreadEvents_QueryAdvanceEvent {
        
        public bool advanceNext;
        
        public bool cancel;
        
        public _DSpreadEvents_QueryAdvanceEvent(bool advanceNext, bool cancel) {
            this.advanceNext = advanceNext;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_PrintAbortEventHandler(object sender, _DSpreadEvents_PrintAbortEvent e);
    
    public class _DSpreadEvents_PrintAbortEvent {
        
        public bool abort;
        
        public _DSpreadEvents_PrintAbortEvent(bool abort) {
            this.abort = abort;
        }
    }
    
    public delegate void _DSpreadEvents_LeaveRowEventHandler(object sender, _DSpreadEvents_LeaveRowEvent e);
    
    public class _DSpreadEvents_LeaveRowEvent {
        
        public int row;
        
        public bool rowWasLast;
        
        public bool rowChanged;
        
        public bool allCellsHaveData;
        
        public int newRow;
        
        public int newRowIsLast;
        
        public bool cancel;
        
        public _DSpreadEvents_LeaveRowEvent(int row, bool rowWasLast, bool rowChanged, bool allCellsHaveData, int newRow, int newRowIsLast, bool cancel) {
            this.row = row;
            this.rowWasLast = rowWasLast;
            this.rowChanged = rowChanged;
            this.allCellsHaveData = allCellsHaveData;
            this.newRow = newRow;
            this.newRowIsLast = newRowIsLast;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_LeaveCellEventHandler(object sender, _DSpreadEvents_LeaveCellEvent e);
    
    public class _DSpreadEvents_LeaveCellEvent {
        
        public int col;
        
        public int row;
        
        public int newCol;
        
        public int newRow;
        
        public bool cancel;
        
        public _DSpreadEvents_LeaveCellEvent(int col, int row, int newCol, int newRow, bool cancel) {
            this.col = col;
            this.row = row;
            this.newCol = newCol;
            this.newRow = newRow;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_EnterRowEventHandler(object sender, _DSpreadEvents_EnterRowEvent e);
    
    public class _DSpreadEvents_EnterRowEvent {
        
        public int row;
        
        public int rowIsLast;
        
        public _DSpreadEvents_EnterRowEvent(int row, int rowIsLast) {
            this.row = row;
            this.rowIsLast = rowIsLast;
        }
    }
    
    public delegate void _DSpreadEvents_EditModeEventHandler(object sender, _DSpreadEvents_EditModeEvent e);
    
    public class _DSpreadEvents_EditModeEvent {
        
        public int col;
        
        public int row;
        
        public short mode;
        
        public bool changeMade;
        
        public _DSpreadEvents_EditModeEvent(int col, int row, short mode, bool changeMade) {
            this.col = col;
            this.row = row;
            this.mode = mode;
            this.changeMade = changeMade;
        }
    }
    
    public delegate void _DSpreadEvents_EditErrorEventHandler(object sender, _DSpreadEvents_EditErrorEvent e);
    
    public class _DSpreadEvents_EditErrorEvent {
        
        public int col;
        
        public int row;
        
        public short editError;
        
        public _DSpreadEvents_EditErrorEvent(int col, int row, short editError) {
            this.col = col;
            this.row = row;
            this.editError = editError;
        }
    }
    
    public delegate void _DSpreadEvents_DrawItemEventHandler(object sender, _DSpreadEvents_DrawItemEvent e);
    
    public class _DSpreadEvents_DrawItemEvent {
        
        public int col;
        
        public int row;
        
        public int hDC;
        
        public int left;
        
        public int top;
        
        public int right;
        
        public int bottom;
        
        public int style;
        
        public _DSpreadEvents_DrawItemEvent(int col, int row, int hDC, int left, int top, int right, int bottom, int style) {
            this.col = col;
            this.row = row;
            this.hDC = hDC;
            this.left = left;
            this.top = top;
            this.right = right;
            this.bottom = bottom;
            this.style = style;
        }
    }
    
    public delegate void _DSpreadEvents_DragDropBlockEventHandler(object sender, _DSpreadEvents_DragDropBlockEvent e);
    
    public class _DSpreadEvents_DragDropBlockEvent {
        
        public int col;
        
        public int row;
        
        public int col2;
        
        public int row2;
        
        public int newCol;
        
        public int newRow;
        
        public int newCol2;
        
        public int newRow2;
        
        public bool overwrite;
        
        public short action;
        
        public bool dataOnly;
        
        public bool cancel;
        
        public _DSpreadEvents_DragDropBlockEvent(int col, int row, int col2, int row2, int newCol, int newRow, int newCol2, int newRow2, bool overwrite, short action, bool dataOnly, bool cancel) {
            this.col = col;
            this.row = row;
            this.col2 = col2;
            this.row2 = row2;
            this.newCol = newCol;
            this.newRow = newRow;
            this.newCol2 = newCol2;
            this.newRow2 = newRow2;
            this.overwrite = overwrite;
            this.action = action;
            this.dataOnly = dataOnly;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_DblClickEventHandler(object sender, _DSpreadEvents_DblClickEvent e);
    
    public class _DSpreadEvents_DblClickEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_DblClickEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_DataFillEventHandler(object sender, _DSpreadEvents_DataFillEvent e);
    
    public class _DSpreadEvents_DataFillEvent {
        
        public int col;
        
        public int row;
        
        public short dataType;
        
        public short fGetData;
        
        public short cancel;
        
        public _DSpreadEvents_DataFillEvent(int col, int row, short dataType, short fGetData, short cancel) {
            this.col = col;
            this.row = row;
            this.dataType = dataType;
            this.fGetData = fGetData;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DSpreadEvents_DataColConfigEventHandler(object sender, _DSpreadEvents_DataColConfigEvent e);
    
    public class _DSpreadEvents_DataColConfigEvent {
        
        public int col;
        
        public string dataField;
        
        public short dataType;
        
        public _DSpreadEvents_DataColConfigEvent(int col, string dataField, short dataType) {
            this.col = col;
            this.dataField = dataField;
            this.dataType = dataType;
        }
    }
    
    public delegate void _DSpreadEvents_CustomFunctionEventHandler(object sender, _DSpreadEvents_CustomFunctionEvent e);
    
    public class _DSpreadEvents_CustomFunctionEvent {
        
        public string functionName;
        
        public short parameterCnt;
        
        public int col;
        
        public int row;
        
        public FPSpreadADO.ValueStatusConstants status;
        
        public _DSpreadEvents_CustomFunctionEvent(string functionName, short parameterCnt, int col, int row, FPSpreadADO.ValueStatusConstants status) {
            this.functionName = functionName;
            this.parameterCnt = parameterCnt;
            this.col = col;
            this.row = row;
            this.status = status;
        }
    }
    
    public delegate void _DSpreadEvents_ColWidthChangeEventHandler(object sender, _DSpreadEvents_ColWidthChangeEvent e);
    
    public class _DSpreadEvents_ColWidthChangeEvent {
        
        public int col1;
        
        public int col2;
        
        public _DSpreadEvents_ColWidthChangeEvent(int col1, int col2) {
            this.col1 = col1;
            this.col2 = col2;
        }
    }
    
    public delegate void _DSpreadEvents_ClickEventHandler(object sender, _DSpreadEvents_ClickEvent e);
    
    public class _DSpreadEvents_ClickEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_ClickEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_ChangeEventHandler(object sender, _DSpreadEvents_ChangeEvent e);
    
    public class _DSpreadEvents_ChangeEvent {
        
        public int col;
        
        public int row;
        
        public _DSpreadEvents_ChangeEvent(int col, int row) {
            this.col = col;
            this.row = row;
        }
    }
    
    public delegate void _DSpreadEvents_ButtonClickedEventHandler(object sender, _DSpreadEvents_ButtonClickedEvent e);
    
    public class _DSpreadEvents_ButtonClickedEvent {
        
        public int col;
        
        public int row;
        
        public short buttonDown;
        
        public _DSpreadEvents_ButtonClickedEvent(int col, int row, short buttonDown) {
            this.col = col;
            this.row = row;
            this.buttonDown = buttonDown;
        }
    }
    
    public delegate void _DSpreadEvents_BlockSelectedEventHandler(object sender, _DSpreadEvents_BlockSelectedEvent e);
    
    public class _DSpreadEvents_BlockSelectedEvent {
        
        public int blockCol;
        
        public int blockRow;
        
        public int blockCol2;
        
        public int blockRow2;
        
        public _DSpreadEvents_BlockSelectedEvent(int blockCol, int blockRow, int blockCol2, int blockRow2) {
            this.blockCol = blockCol;
            this.blockRow = blockRow;
            this.blockCol2 = blockCol2;
            this.blockRow2 = blockRow2;
        }
    }
    
    public delegate void _DSpreadEvents_AdvanceEventHandler(object sender, _DSpreadEvents_AdvanceEvent e);
    
    public class _DSpreadEvents_AdvanceEvent {
        
        public bool advanceNext;
        
        public _DSpreadEvents_AdvanceEvent(bool advanceNext) {
            this.advanceNext = advanceNext;
        }
    }
    
    public class AxfpSpreadEventMulticaster : FPSpreadADO._DSpreadEvents {
        
        private AxfpSpread parent;
        
        public AxfpSpreadEventMulticaster(AxfpSpread parent) {
            this.parent = parent;
        }
        
        public virtual void BeforeRowMove(int row, int row2, int rowDest, ref object cancel) {
            _DSpreadEvents_BeforeRowMoveEvent beforerowmoveEvent = new _DSpreadEvents_BeforeRowMoveEvent(row, row2, rowDest, cancel);
            this.parent.RaiseOnBeforeRowMove(this.parent, beforerowmoveEvent);
            cancel = beforerowmoveEvent.cancel;
        }
        
        public virtual void BeforeColMove(int col, int col2, int colDest, ref object cancel) {
            _DSpreadEvents_BeforeColMoveEvent beforecolmoveEvent = new _DSpreadEvents_BeforeColMoveEvent(col, col2, colDest, cancel);
            this.parent.RaiseOnBeforeColMove(this.parent, beforecolmoveEvent);
            cancel = beforecolmoveEvent.cancel;
        }
        
        public virtual void BeforeScrollTip(bool isVertical, int index, ref string text, ref object width) {
            _DSpreadEvents_BeforeScrollTipEvent beforescrolltipEvent = new _DSpreadEvents_BeforeScrollTipEvent(isVertical, index, text, width);
            this.parent.RaiseOnBeforeScrollTip(this.parent, beforescrolltipEvent);
            text = beforescrolltipEvent.text;
            width = beforescrolltipEvent.width;
        }
        
        public virtual void DataLoaded() {
            System.EventArgs dataloadedEvent = new System.EventArgs();
            this.parent.RaiseOnDataLoaded(this.parent, dataloadedEvent);
        }
        
        public virtual void BeforeEditMode(int col, int row, FPSpreadADO.BeforeEditModeActionConstants userAction, ref object cursorPos, ref object cancel) {
            _DSpreadEvents_BeforeEditModeEvent beforeeditmodeEvent = new _DSpreadEvents_BeforeEditModeEvent(col, row, userAction, cursorPos, cancel);
            this.parent.RaiseOnBeforeEditMode(this.parent, beforeeditmodeEvent);
            cursorPos = beforeeditmodeEvent.cursorPos;
            cancel = beforeeditmodeEvent.cancel;
        }
        
        public virtual void TabScrolled(short oldLeftSheet, short newLeftSheet) {
            _DSpreadEvents_TabScrolledEvent tabscrolledEvent = new _DSpreadEvents_TabScrolledEvent(oldLeftSheet, newLeftSheet);
            this.parent.RaiseOnTabScrolled(this.parent, tabscrolledEvent);
        }
        
        public virtual void TabScrolling(short oldLeftSheet, short newLeftSheet) {
            _DSpreadEvents_TabScrollingEvent tabscrollingEvent = new _DSpreadEvents_TabScrollingEvent(oldLeftSheet, newLeftSheet);
            this.parent.RaiseOnTabScrolling(this.parent, tabscrollingEvent);
        }
        
        public virtual void SheetChanged(short oldSheet, short newSheet) {
            _DSpreadEvents_SheetChangedEvent sheetchangedEvent = new _DSpreadEvents_SheetChangedEvent(oldSheet, newSheet);
            this.parent.RaiseOnSheetChanged(this.parent, sheetchangedEvent);
        }
        
        public virtual void SheetChanging(short oldSheet, short newSheet, ref object cancel) {
            _DSpreadEvents_SheetChangingEvent sheetchangingEvent = new _DSpreadEvents_SheetChangingEvent(oldSheet, newSheet, cancel);
            this.parent.RaiseOnSheetChanging(this.parent, sheetchangingEvent);
            cancel = sheetchangingEvent.cancel;
        }
        
        public virtual void ScriptKeyUp(ref object keyCode, short shift) {
            _DSpreadEvents_ScriptKeyUpEvent scriptkeyupEvent = new _DSpreadEvents_ScriptKeyUpEvent(keyCode, shift);
            this.parent.RaiseOnScriptKeyUp(this.parent, scriptkeyupEvent);
            keyCode = scriptkeyupEvent.keyCode;
        }
        
        public virtual void ScriptKeyPress(ref object keyAscii) {
            _DSpreadEvents_ScriptKeyPressEvent scriptkeypressEvent = new _DSpreadEvents_ScriptKeyPressEvent(keyAscii);
            this.parent.RaiseOnScriptKeyPress(this.parent, scriptkeypressEvent);
            keyAscii = scriptkeypressEvent.keyAscii;
        }
        
        public virtual void ScriptKeyDown(ref object keyCode, short shift) {
            _DSpreadEvents_ScriptKeyDownEvent scriptkeydownEvent = new _DSpreadEvents_ScriptKeyDownEvent(keyCode, shift);
            this.parent.RaiseOnScriptKeyDown(this.parent, scriptkeydownEvent);
            keyCode = scriptkeydownEvent.keyCode;
        }
        
        public virtual void ScriptBeforeUserSort(int col, int state, ref object defaultAction) {
            _DSpreadEvents_ScriptBeforeUserSortEvent scriptbeforeusersortEvent = new _DSpreadEvents_ScriptBeforeUserSortEvent(col, state, defaultAction);
            this.parent.RaiseOnScriptBeforeUserSort(this.parent, scriptbeforeusersortEvent);
            defaultAction = scriptbeforeusersortEvent.defaultAction;
        }
        
        public virtual void ScriptOLEStartDrag(ref object data, ref object allowedEffects) {
            _DSpreadEvents_ScriptOLEStartDragEvent scriptolestartdragEvent = new _DSpreadEvents_ScriptOLEStartDragEvent(data, allowedEffects);
            this.parent.RaiseOnScriptOLEStartDrag(this.parent, scriptolestartdragEvent);
            data = scriptolestartdragEvent.data;
            allowedEffects = scriptolestartdragEvent.allowedEffects;
        }
        
        public virtual void ScriptOLEGiveFeedback(ref object effect, ref object defaultCursors) {
            _DSpreadEvents_ScriptOLEGiveFeedbackEvent scriptolegivefeedbackEvent = new _DSpreadEvents_ScriptOLEGiveFeedbackEvent(effect, defaultCursors);
            this.parent.RaiseOnScriptOLEGiveFeedback(this.parent, scriptolegivefeedbackEvent);
            effect = scriptolegivefeedbackEvent.effect;
            defaultCursors = scriptolegivefeedbackEvent.defaultCursors;
        }
        
        public virtual void ScriptOLEDragOver(ref object data, ref object effect, ref object button, ref object shift, ref object x, ref object y, ref object state) {
            _DSpreadEvents_ScriptOLEDragOverEvent scriptoledragoverEvent = new _DSpreadEvents_ScriptOLEDragOverEvent(data, effect, button, shift, x, y, state);
            this.parent.RaiseOnScriptOLEDragOver(this.parent, scriptoledragoverEvent);
            data = scriptoledragoverEvent.data;
            effect = scriptoledragoverEvent.effect;
            button = scriptoledragoverEvent.button;
            shift = scriptoledragoverEvent.shift;
            x = scriptoledragoverEvent.x;
            y = scriptoledragoverEvent.y;
            state = scriptoledragoverEvent.state;
        }
        
        public virtual void ScriptOLEDragDrop(ref object data, ref object effect, ref object button, ref object shift, ref object x, ref object y) {
            _DSpreadEvents_ScriptOLEDragDropEvent scriptoledragdropEvent = new _DSpreadEvents_ScriptOLEDragDropEvent(data, effect, button, shift, x, y);
            this.parent.RaiseOnScriptOLEDragDrop(this.parent, scriptoledragdropEvent);
            data = scriptoledragdropEvent.data;
            effect = scriptoledragdropEvent.effect;
            button = scriptoledragdropEvent.button;
            shift = scriptoledragdropEvent.shift;
            x = scriptoledragdropEvent.x;
            y = scriptoledragdropEvent.y;
        }
        
        public virtual void ScriptOLECompleteDrag(ref object effect) {
            _DSpreadEvents_ScriptOLECompleteDragEvent scriptolecompletedragEvent = new _DSpreadEvents_ScriptOLECompleteDragEvent(effect);
            this.parent.RaiseOnScriptOLECompleteDrag(this.parent, scriptolecompletedragEvent);
            effect = scriptolecompletedragEvent.effect;
        }
        
        public virtual void ScriptTextTipFetch(int col, int row, ref object multiLine, ref object tipWidth, ref object tipText, ref object showTip) {
            _DSpreadEvents_ScriptTextTipFetchEvent scripttexttipfetchEvent = new _DSpreadEvents_ScriptTextTipFetchEvent(col, row, multiLine, tipWidth, tipText, showTip);
            this.parent.RaiseOnScriptTextTipFetch(this.parent, scripttexttipfetchEvent);
            multiLine = scripttexttipfetchEvent.multiLine;
            tipWidth = scripttexttipfetchEvent.tipWidth;
            tipText = scripttexttipfetchEvent.tipText;
            showTip = scripttexttipfetchEvent.showTip;
        }
        
        public virtual void ScriptPrintMsgBox(string text, int printID, bool openMsgBox, ref object processed) {
            _DSpreadEvents_ScriptPrintMsgBoxEvent scriptprintmsgboxEvent = new _DSpreadEvents_ScriptPrintMsgBoxEvent(text, printID, openMsgBox, processed);
            this.parent.RaiseOnScriptPrintMsgBox(this.parent, scriptprintmsgboxEvent);
            processed = scriptprintmsgboxEvent.processed;
        }
        
        public virtual void ScriptQueryData(int row, int rowsNeeded, ref object rowsLoaded, short direction, ref object atTop, ref object atBottom) {
            _DSpreadEvents_ScriptQueryDataEvent scriptquerydataEvent = new _DSpreadEvents_ScriptQueryDataEvent(row, rowsNeeded, rowsLoaded, direction, atTop, atBottom);
            this.parent.RaiseOnScriptQueryData(this.parent, scriptquerydataEvent);
            rowsLoaded = scriptquerydataEvent.rowsLoaded;
            atTop = scriptquerydataEvent.atTop;
            atBottom = scriptquerydataEvent.atBottom;
        }
        
        public virtual void ScriptQueryAdvance(bool advanceNext, ref object cancel) {
            _DSpreadEvents_ScriptQueryAdvanceEvent scriptqueryadvanceEvent = new _DSpreadEvents_ScriptQueryAdvanceEvent(advanceNext, cancel);
            this.parent.RaiseOnScriptQueryAdvance(this.parent, scriptqueryadvanceEvent);
            cancel = scriptqueryadvanceEvent.cancel;
        }
        
        public virtual void ScriptPrintAbort(ref object abort) {
            _DSpreadEvents_ScriptPrintAbortEvent scriptprintabortEvent = new _DSpreadEvents_ScriptPrintAbortEvent(abort);
            this.parent.RaiseOnScriptPrintAbort(this.parent, scriptprintabortEvent);
            abort = scriptprintabortEvent.abort;
        }
        
        public virtual void ScriptLeaveRow(int row, bool rowWasLast, bool rowChanged, bool allCellsHaveData, int newRow, int newRowIsLast, ref object cancel) {
            _DSpreadEvents_ScriptLeaveRowEvent scriptleaverowEvent = new _DSpreadEvents_ScriptLeaveRowEvent(row, rowWasLast, rowChanged, allCellsHaveData, newRow, newRowIsLast, cancel);
            this.parent.RaiseOnScriptLeaveRow(this.parent, scriptleaverowEvent);
            cancel = scriptleaverowEvent.cancel;
        }
        
        public virtual void ScriptLeaveCell(int col, int row, int newCol, int newRow, ref object cancel) {
            _DSpreadEvents_ScriptLeaveCellEvent scriptleavecellEvent = new _DSpreadEvents_ScriptLeaveCellEvent(col, row, newCol, newRow, cancel);
            this.parent.RaiseOnScriptLeaveCell(this.parent, scriptleavecellEvent);
            cancel = scriptleavecellEvent.cancel;
        }
        
        public virtual void ScriptDragDropBlock(int col, int row, int col2, int row2, int newCol, int newRow, int newCol2, int newRow2, bool overwrite, ref object action, ref object dataOnly, ref object cancel) {
            _DSpreadEvents_ScriptDragDropBlockEvent scriptdragdropblockEvent = new _DSpreadEvents_ScriptDragDropBlockEvent(col, row, col2, row2, newCol, newRow, newCol2, newRow2, overwrite, action, dataOnly, cancel);
            this.parent.RaiseOnScriptDragDropBlock(this.parent, scriptdragdropblockEvent);
            action = scriptdragdropblockEvent.action;
            dataOnly = scriptdragdropblockEvent.dataOnly;
            cancel = scriptdragdropblockEvent.cancel;
        }
        
        public virtual void ScriptDataFill(int col, int row, short dataType, short fGetData, ref object cancel) {
            _DSpreadEvents_ScriptDataFillEvent scriptdatafillEvent = new _DSpreadEvents_ScriptDataFillEvent(col, row, dataType, fGetData, cancel);
            this.parent.RaiseOnScriptDataFill(this.parent, scriptdatafillEvent);
            cancel = scriptdatafillEvent.cancel;
        }
        
        public virtual void ScriptCustomFunction(string functionName, short parameterCnt, int col, int row, ref object status) {
            _DSpreadEvents_ScriptCustomFunctionEvent scriptcustomfunctionEvent = new _DSpreadEvents_ScriptCustomFunctionEvent(functionName, parameterCnt, col, row, status);
            this.parent.RaiseOnScriptCustomFunction(this.parent, scriptcustomfunctionEvent);
            status = scriptcustomfunctionEvent.status;
        }
        
        public virtual void MouseUp(short button, short shift, int x, int y) {
            _DSpreadEvents_MouseUpEvent mouseupEvent = new _DSpreadEvents_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
        }
        
        public virtual void MouseMove(short button, short shift, int x, int y) {
            _DSpreadEvents_MouseMoveEvent mousemoveEvent = new _DSpreadEvents_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
        }
        
        public virtual void MouseDown(short button, short shift, int x, int y) {
            _DSpreadEvents_MouseDownEvent mousedownEvent = new _DSpreadEvents_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
        }
        
        public virtual void KeyUp(ref short keyCode, short shift) {
            _DSpreadEvents_KeyUpEvent keyupEvent = new _DSpreadEvents_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
            keyCode = keyupEvent.keyCode;
        }
        
        public virtual void KeyPress(ref short keyAscii) {
            _DSpreadEvents_KeyPressEvent keypressEvent = new _DSpreadEvents_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
            keyAscii = keypressEvent.keyAscii;
        }
        
        public virtual void KeyDown(ref short keyCode, short shift) {
            _DSpreadEvents_KeyDownEvent keydownEvent = new _DSpreadEvents_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
            keyCode = keydownEvent.keyCode;
        }
        
        public virtual void AfterUserSort(int col) {
            _DSpreadEvents_AfterUserSortEvent afterusersortEvent = new _DSpreadEvents_AfterUserSortEvent(col);
            this.parent.RaiseOnAfterUserSort(this.parent, afterusersortEvent);
        }
        
        public virtual void BeforeUserSort(int col, FPSpreadADO.BeforeUserSortStateConstants state, ref FPSpreadADO.BeforeUserSortDefaultActionConstants defaultAction) {
            _DSpreadEvents_BeforeUserSortEvent beforeusersortEvent = new _DSpreadEvents_BeforeUserSortEvent(col, state, defaultAction);
            this.parent.RaiseOnBeforeUserSort(this.parent, beforeusersortEvent);
            defaultAction = beforeusersortEvent.defaultAction;
        }
        
        public virtual void OLEStartDrag(ref FPSpreadADO.fpDataObject data, ref int allowedEffects) {
            _DSpreadEvents_OLEStartDragEvent olestartdragEvent = new _DSpreadEvents_OLEStartDragEvent(data, allowedEffects);
            this.parent.RaiseOnOLEStartDrag(this.parent, olestartdragEvent);
            data = olestartdragEvent.data;
            allowedEffects = olestartdragEvent.allowedEffects;
        }
        
        public virtual void OLESetData(ref FPSpreadADO.fpDataObject data, ref short dataFormat) {
            _DSpreadEvents_OLESetDataEvent olesetdataEvent = new _DSpreadEvents_OLESetDataEvent(data, dataFormat);
            this.parent.RaiseOnOLESetData(this.parent, olesetdataEvent);
            data = olesetdataEvent.data;
            dataFormat = olesetdataEvent.dataFormat;
        }
        
        public virtual void OLEGiveFeedback(ref int effect, ref bool defaultCursors) {
            _DSpreadEvents_OLEGiveFeedbackEvent olegivefeedbackEvent = new _DSpreadEvents_OLEGiveFeedbackEvent(effect, defaultCursors);
            this.parent.RaiseOnOLEGiveFeedback(this.parent, olegivefeedbackEvent);
            effect = olegivefeedbackEvent.effect;
            defaultCursors = olegivefeedbackEvent.defaultCursors;
        }
        
        public virtual void OLEDragOver(ref FPSpreadADO.fpDataObject data, ref int effect, ref short button, ref short shift, ref System.Single x, ref System.Single y, ref short state) {
            _DSpreadEvents_OLEDragOverEvent oledragoverEvent = new _DSpreadEvents_OLEDragOverEvent(data, effect, button, shift, x, y, state);
            this.parent.RaiseOnOLEDragOver(this.parent, oledragoverEvent);
            data = oledragoverEvent.data;
            effect = oledragoverEvent.effect;
            button = oledragoverEvent.button;
            shift = oledragoverEvent.shift;
            x = oledragoverEvent.x;
            y = oledragoverEvent.y;
            state = oledragoverEvent.state;
        }
        
        public virtual void OLEDragDrop(ref FPSpreadADO.fpDataObject data, ref int effect, ref short button, ref short shift, ref System.Single x, ref System.Single y) {
            _DSpreadEvents_OLEDragDropEvent oledragdropEvent = new _DSpreadEvents_OLEDragDropEvent(data, effect, button, shift, x, y);
            this.parent.RaiseOnOLEDragDrop(this.parent, oledragdropEvent);
            data = oledragdropEvent.data;
            effect = oledragdropEvent.effect;
            button = oledragdropEvent.button;
            shift = oledragdropEvent.shift;
            x = oledragdropEvent.x;
            y = oledragdropEvent.y;
        }
        
        public virtual void OLECompleteDrag(ref int effect) {
            _DSpreadEvents_OLECompleteDragEvent olecompletedragEvent = new _DSpreadEvents_OLECompleteDragEvent(effect);
            this.parent.RaiseOnOLECompleteDrag(this.parent, olecompletedragEvent);
            effect = olecompletedragEvent.effect;
        }
        
        public virtual void EditChange(int col, int row) {
            _DSpreadEvents_EditChangeEvent editchangeEvent = new _DSpreadEvents_EditChangeEvent(col, row);
            this.parent.RaiseOnEditChange(this.parent, editchangeEvent);
        }
        
        public virtual void TextTipFetch(int col, int row, ref FPSpreadADO.TextTipFetchMultilineConstants multiLine, ref int tipWidth, ref string tipText, ref bool showTip) {
            _DSpreadEvents_TextTipFetchEvent texttipfetchEvent = new _DSpreadEvents_TextTipFetchEvent(col, row, multiLine, tipWidth, tipText, showTip);
            this.parent.RaiseOnTextTipFetch(this.parent, texttipfetchEvent);
            multiLine = texttipfetchEvent.multiLine;
            tipWidth = texttipfetchEvent.tipWidth;
            tipText = texttipfetchEvent.tipText;
            showTip = texttipfetchEvent.showTip;
        }
        
        public virtual void ComboSelChange(int col, int row) {
            _DSpreadEvents_ComboSelChangeEvent comboselchangeEvent = new _DSpreadEvents_ComboSelChangeEvent(col, row);
            this.parent.RaiseOnComboSelChange(this.parent, comboselchangeEvent);
        }
        
        public virtual void ComboDropDown(int col, int row) {
            _DSpreadEvents_ComboDropDownEvent combodropdownEvent = new _DSpreadEvents_ComboDropDownEvent(col, row);
            this.parent.RaiseOnComboDropDown(this.parent, combodropdownEvent);
        }
        
        public virtual void ComboCloseUp(int col, int row, short selChange) {
            _DSpreadEvents_ComboCloseUpEvent combocloseupEvent = new _DSpreadEvents_ComboCloseUpEvent(col, row, selChange);
            this.parent.RaiseOnComboCloseUp(this.parent, combocloseupEvent);
        }
        
        public virtual void PrintMsgBox(string text, int printID, bool openMsgBox, ref bool processed) {
            _DSpreadEvents_PrintMsgBoxEvent printmsgboxEvent = new _DSpreadEvents_PrintMsgBoxEvent(text, printID, openMsgBox, processed);
            this.parent.RaiseOnPrintMsgBox(this.parent, printmsgboxEvent);
            processed = printmsgboxEvent.processed;
        }
        
        public virtual void VirtualClearData(int row, int rowsBeingCleared) {
            _DSpreadEvents_VirtualClearDataEvent virtualcleardataEvent = new _DSpreadEvents_VirtualClearDataEvent(row, rowsBeingCleared);
            this.parent.RaiseOnVirtualClearData(this.parent, virtualcleardataEvent);
        }
        
        public virtual void UserFormulaEntered(int col, int row) {
            _DSpreadEvents_UserFormulaEnteredEvent userformulaenteredEvent = new _DSpreadEvents_UserFormulaEnteredEvent(col, row);
            this.parent.RaiseOnUserFormulaEntered(this.parent, userformulaenteredEvent);
        }
        
        public virtual void TopLeftChange(int oldLeft, int oldTop, int newLeft, int newTop) {
            _DSpreadEvents_TopLeftChangeEvent topleftchangeEvent = new _DSpreadEvents_TopLeftChangeEvent(oldLeft, oldTop, newLeft, newTop);
            this.parent.RaiseOnTopLeftChange(this.parent, topleftchangeEvent);
        }
        
        public virtual void SelChange(int blockCol, int blockRow, int blockCol2, int blockRow2, int curCol, int curRow) {
            _DSpreadEvents_SelChangeEvent selchangeEvent = new _DSpreadEvents_SelChangeEvent(blockCol, blockRow, blockCol2, blockRow2, curCol, curRow);
            this.parent.RaiseOnSelChange(this.parent, selchangeEvent);
        }
        
        public virtual void RowHeightChange(int row1, int row2) {
            _DSpreadEvents_RowHeightChangeEvent rowheightchangeEvent = new _DSpreadEvents_RowHeightChangeEvent(row1, row2);
            this.parent.RaiseOnRowHeightChange(this.parent, rowheightchangeEvent);
        }
        
        public virtual void RightClick(short clickType, int col, int row, int mouseX, int mouseY) {
            _DSpreadEvents_RightClickEvent rightclickEvent = new _DSpreadEvents_RightClickEvent(clickType, col, row, mouseX, mouseY);
            this.parent.RaiseOnRightClick(this.parent, rightclickEvent);
        }
        
        public virtual void QueryData(int row, int rowsNeeded, ref int rowsLoaded, short direction, ref bool atTop, ref bool atBottom) {
            _DSpreadEvents_QueryDataEvent querydataEvent = new _DSpreadEvents_QueryDataEvent(row, rowsNeeded, rowsLoaded, direction, atTop, atBottom);
            this.parent.RaiseOnQueryData(this.parent, querydataEvent);
            rowsLoaded = querydataEvent.rowsLoaded;
            atTop = querydataEvent.atTop;
            atBottom = querydataEvent.atBottom;
        }
        
        public virtual void QueryAdvance(bool advanceNext, ref bool cancel) {
            _DSpreadEvents_QueryAdvanceEvent queryadvanceEvent = new _DSpreadEvents_QueryAdvanceEvent(advanceNext, cancel);
            this.parent.RaiseOnQueryAdvance(this.parent, queryadvanceEvent);
            cancel = queryadvanceEvent.cancel;
        }
        
        public virtual void PrintAbort(ref bool abort) {
            _DSpreadEvents_PrintAbortEvent printabortEvent = new _DSpreadEvents_PrintAbortEvent(abort);
            this.parent.RaiseOnPrintAbort(this.parent, printabortEvent);
            abort = printabortEvent.abort;
        }
        
        public virtual void LeaveRow(int row, bool rowWasLast, bool rowChanged, bool allCellsHaveData, int newRow, int newRowIsLast, ref bool cancel) {
            _DSpreadEvents_LeaveRowEvent leaverowEvent = new _DSpreadEvents_LeaveRowEvent(row, rowWasLast, rowChanged, allCellsHaveData, newRow, newRowIsLast, cancel);
            this.parent.RaiseOnLeaveRow(this.parent, leaverowEvent);
            cancel = leaverowEvent.cancel;
        }
        
        public virtual void LeaveCell(int col, int row, int newCol, int newRow, ref bool cancel) {
            _DSpreadEvents_LeaveCellEvent leavecellEvent = new _DSpreadEvents_LeaveCellEvent(col, row, newCol, newRow, cancel);
            this.parent.RaiseOnLeaveCell(this.parent, leavecellEvent);
            cancel = leavecellEvent.cancel;
        }
        
        public virtual void EnterRow(int row, int rowIsLast) {
            _DSpreadEvents_EnterRowEvent enterrowEvent = new _DSpreadEvents_EnterRowEvent(row, rowIsLast);
            this.parent.RaiseOnEnterRow(this.parent, enterrowEvent);
        }
        
        public virtual void EditMode(int col, int row, short mode, bool changeMade) {
            _DSpreadEvents_EditModeEvent editmodeEvent = new _DSpreadEvents_EditModeEvent(col, row, mode, changeMade);
            this.parent.RaiseOnEditModeEvent(this.parent, editmodeEvent);
        }
        
        public virtual void EditError(int col, int row, short editError) {
            _DSpreadEvents_EditErrorEvent editerrorEvent = new _DSpreadEvents_EditErrorEvent(col, row, editError);
            this.parent.RaiseOnEditError(this.parent, editerrorEvent);
        }
        
        public virtual void DrawItem(int col, int row, int hDC, int left, int top, int right, int bottom, int style) {
            _DSpreadEvents_DrawItemEvent drawitemEvent = new _DSpreadEvents_DrawItemEvent(col, row, hDC, left, top, right, bottom, style);
            this.parent.RaiseOnDrawItem(this.parent, drawitemEvent);
        }
        
        public virtual void DragDropBlock(int col, int row, int col2, int row2, int newCol, int newRow, int newCol2, int newRow2, bool overwrite, ref short action, ref bool dataOnly, ref bool cancel) {
            _DSpreadEvents_DragDropBlockEvent dragdropblockEvent = new _DSpreadEvents_DragDropBlockEvent(col, row, col2, row2, newCol, newRow, newCol2, newRow2, overwrite, action, dataOnly, cancel);
            this.parent.RaiseOnDragDropBlock(this.parent, dragdropblockEvent);
            action = dragdropblockEvent.action;
            dataOnly = dragdropblockEvent.dataOnly;
            cancel = dragdropblockEvent.cancel;
        }
        
        public virtual void DblClick(int col, int row) {
            _DSpreadEvents_DblClickEvent dblclickEvent = new _DSpreadEvents_DblClickEvent(col, row);
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void DataFill(int col, int row, short dataType, short fGetData, ref short cancel) {
            _DSpreadEvents_DataFillEvent datafillEvent = new _DSpreadEvents_DataFillEvent(col, row, dataType, fGetData, cancel);
            this.parent.RaiseOnDataFill(this.parent, datafillEvent);
            cancel = datafillEvent.cancel;
        }
        
        public virtual void DataColConfig(int col, string dataField, short dataType) {
            _DSpreadEvents_DataColConfigEvent datacolconfigEvent = new _DSpreadEvents_DataColConfigEvent(col, dataField, dataType);
            this.parent.RaiseOnDataColConfig(this.parent, datacolconfigEvent);
        }
        
        public virtual void CustomFunction(string functionName, short parameterCnt, int col, int row, ref FPSpreadADO.ValueStatusConstants status) {
            _DSpreadEvents_CustomFunctionEvent customfunctionEvent = new _DSpreadEvents_CustomFunctionEvent(functionName, parameterCnt, col, row, status);
            this.parent.RaiseOnCustomFunction(this.parent, customfunctionEvent);
            status = customfunctionEvent.status;
        }
        
        public virtual void ColWidthChange(int col1, int col2) {
            _DSpreadEvents_ColWidthChangeEvent colwidthchangeEvent = new _DSpreadEvents_ColWidthChangeEvent(col1, col2);
            this.parent.RaiseOnColWidthChange(this.parent, colwidthchangeEvent);
        }
        
        public virtual void Click(int col, int row) {
            _DSpreadEvents_ClickEvent clickEvent = new _DSpreadEvents_ClickEvent(col, row);
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void Change(int col, int row) {
            _DSpreadEvents_ChangeEvent changeEvent = new _DSpreadEvents_ChangeEvent(col, row);
            this.parent.RaiseOnChange(this.parent, changeEvent);
        }
        
        public virtual void ButtonClicked(int col, int row, short buttonDown) {
            _DSpreadEvents_ButtonClickedEvent buttonclickedEvent = new _DSpreadEvents_ButtonClickedEvent(col, row, buttonDown);
            this.parent.RaiseOnButtonClicked(this.parent, buttonclickedEvent);
        }
        
        public virtual void BlockSelected(int blockCol, int blockRow, int blockCol2, int blockRow2) {
            _DSpreadEvents_BlockSelectedEvent blockselectedEvent = new _DSpreadEvents_BlockSelectedEvent(blockCol, blockRow, blockCol2, blockRow2);
            this.parent.RaiseOnBlockSelected(this.parent, blockselectedEvent);
        }
        
        public virtual void Advance(bool advanceNext) {
            _DSpreadEvents_AdvanceEvent advanceEvent = new _DSpreadEvents_AdvanceEvent(advanceNext);
            this.parent.RaiseOnAdvance(this.parent, advanceEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{71146846-020d-4d16-80fd-6ace384b66df}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("PageChange")]
    public class AxfpSpreadPreview : System.Windows.Forms.AxHost {
        
        private FPSpreadADO._DSpreadPreview ocx;
        
        private AxfpSpreadPreviewEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxfpSpreadPreview() : 
                base("71146846-020d-4d16-80fd-6ace384b66df") {
            this.SetAboutBoxDelegate(new AboutBoxDelegate(AboutBox));
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1)]
        public virtual bool AllowUserZoom {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowUserZoom", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowUserZoom;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowUserZoom", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowUserZoom = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(2)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color GrayAreaColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.GrayAreaColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GrayAreaColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(3)]
        public virtual int GrayAreaMarginH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GrayAreaMarginH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GrayAreaMarginH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(4)]
        public virtual FPSpreadADO.PVGrayAreaMarginTypeConstants GrayAreaMarginType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GrayAreaMarginType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GrayAreaMarginType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(5)]
        public virtual int GrayAreaMarginV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GrayAreaMarginV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GrayAreaMarginV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GrayAreaMarginV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(6)]
        public virtual int hWndSpread {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWndSpread", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.hWndSpread;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWndSpread", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.hWndSpread = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(7)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color PageBorderColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.PageBorderColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageBorderColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageBorderColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(8)]
        public virtual short PageBorderWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageBorderWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageBorderWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageBorderWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageBorderWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(9)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color PageShadowColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageShadowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((System.UInt32)(this.ocx.PageShadowColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageShadowColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageShadowColor = ((System.UInt32)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(10)]
        public virtual short PageShadowWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageShadowWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageShadowWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageShadowWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageShadowWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(11)]
        public virtual short PageViewPercentage {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageViewPercentage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageViewPercentage;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageViewPercentage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageViewPercentage = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(12)]
        public virtual FPSpreadADO.PVPageViewTypeConstants PageViewType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageViewType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageViewType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageViewType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageViewType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(13)]
        public virtual FPSpreadADO.PVScrollBarConstants ScrollBarH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(14)]
        public virtual FPSpreadADO.PVScrollBarConstants ScrollBarV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBarV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBarV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBarV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(15)]
        public virtual int ScrollIncH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollIncH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollIncH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollIncH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollIncH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(16)]
        public virtual int ScrollIncV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollIncV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollIncV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollIncV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollIncV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(17)]
        public virtual short PageMultiCntH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageMultiCntH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageMultiCntH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageMultiCntH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageMultiCntH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(18)]
        public virtual short PageMultiCntV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageMultiCntV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageMultiCntV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageMultiCntV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageMultiCntV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(19)]
        public virtual int PageGutterH {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageGutterH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageGutterH;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageGutterH", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageGutterH = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(20)]
        public virtual int PageGutterV {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageGutterV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageGutterV;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageGutterV", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageGutterV = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(21)]
        public virtual FPSpreadADO.PVZoomStateConstants ZoomState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ZoomState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ZoomState;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ZoomState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ZoomState = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(22)]
        public virtual int PageCurrent {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageCurrent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageCurrent;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageCurrent", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageCurrent = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(23)]
        public virtual short PagesPerScreen {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PagesPerScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PagesPerScreen;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PagesPerScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PagesPerScreen = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(24)]
        public virtual short PagePercentageActual {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PagePercentageActual", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PagePercentageActual;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PagePercentageActual", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PagePercentageActual = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(50)]
        public virtual FPSpreadADO.MousePointerConstants MousePointer {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MousePointer;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MousePointer = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(51)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image MouseIcon {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MouseIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.MouseIcon);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MouseIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MouseIcon = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(52)]
        public virtual FPSpreadADO.OLEDropModeConstants OLEDropMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OLEDropMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OLEDropMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(54)]
        public virtual bool ScriptEnhanced {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptEnhanced", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScriptEnhanced;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScriptEnhanced", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScriptEnhanced = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-514)]
        public override bool Enabled {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return this.ocx.Enabled;
                }
                else {
                    return base.Enabled;
                }
            }
            set {
                base.Enabled = value;
                if ((this.ocx != null)) {
                    this.ocx.Enabled = value;
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-504)]
        public virtual FPSpreadADO.BorderStyleConstants BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        public event _DSpreadPreviewEvents_MouseUpEventHandler MouseUpEvent;
        
        public event _DSpreadPreviewEvents_MouseMoveEventHandler MouseMoveEvent;
        
        public event _DSpreadPreviewEvents_MouseDownEventHandler MouseDownEvent;
        
        public event _DSpreadPreviewEvents_KeyUpEventHandler KeyUpEvent;
        
        public event _DSpreadPreviewEvents_KeyPressEventHandler KeyPressEvent;
        
        public event _DSpreadPreviewEvents_KeyDownEventHandler KeyDownEvent;
        
        public event System.EventHandler DblClick;
        
        public event System.EventHandler ClickEvent;
        
        public event _DSpreadPreviewEvents_ScriptOLEStartDragEventHandler ScriptOLEStartDrag;
        
        public event _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEventHandler ScriptOLEGiveFeedback;
        
        public event _DSpreadPreviewEvents_ScriptOLEDragOverEventHandler ScriptOLEDragOver;
        
        public event _DSpreadPreviewEvents_ScriptOLEDragDropEventHandler ScriptOLEDragDrop;
        
        public event _DSpreadPreviewEvents_ScriptOLECompleteDragEventHandler ScriptOLECompleteDrag;
        
        public event _DSpreadPreviewEvents_OLEStartDragEventHandler OLEStartDrag;
        
        public event _DSpreadPreviewEvents_OLESetDataEventHandler OLESetData;
        
        public event _DSpreadPreviewEvents_OLEGiveFeedbackEventHandler OLEGiveFeedback;
        
        public event _DSpreadPreviewEvents_OLEDragOverEventHandler OLEDragOver;
        
        public event _DSpreadPreviewEvents_OLEDragDropEventHandler OLEDragDrop;
        
        public event _DSpreadPreviewEvents_OLECompleteDragEventHandler OLECompleteDrag;
        
        public event System.EventHandler Zoom;
        
        public event _DSpreadPreviewEvents_PageChangeEventHandler PageChange;
        
        public virtual void AboutBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AboutBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AboutBox();
        }
        
        public virtual void OLEDrag() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDrag", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.OLEDrag();
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxfpSpreadPreviewEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(FPSpreadADO._DSpreadPreviewEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((FPSpreadADO._DSpreadPreview)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, _DSpreadPreviewEvents_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, _DSpreadPreviewEvents_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, _DSpreadPreviewEvents_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, _DSpreadPreviewEvents_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, _DSpreadPreviewEvents_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, _DSpreadPreviewEvents_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, System.EventArgs e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnClickEvent(object sender, System.EventArgs e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEStartDrag(object sender, _DSpreadPreviewEvents_ScriptOLEStartDragEvent e) {
            if ((this.ScriptOLEStartDrag != null)) {
                this.ScriptOLEStartDrag(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEGiveFeedback(object sender, _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent e) {
            if ((this.ScriptOLEGiveFeedback != null)) {
                this.ScriptOLEGiveFeedback(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEDragOver(object sender, _DSpreadPreviewEvents_ScriptOLEDragOverEvent e) {
            if ((this.ScriptOLEDragOver != null)) {
                this.ScriptOLEDragOver(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLEDragDrop(object sender, _DSpreadPreviewEvents_ScriptOLEDragDropEvent e) {
            if ((this.ScriptOLEDragDrop != null)) {
                this.ScriptOLEDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnScriptOLECompleteDrag(object sender, _DSpreadPreviewEvents_ScriptOLECompleteDragEvent e) {
            if ((this.ScriptOLECompleteDrag != null)) {
                this.ScriptOLECompleteDrag(sender, e);
            }
        }
        
        internal void RaiseOnOLEStartDrag(object sender, _DSpreadPreviewEvents_OLEStartDragEvent e) {
            if ((this.OLEStartDrag != null)) {
                this.OLEStartDrag(sender, e);
            }
        }
        
        internal void RaiseOnOLESetData(object sender, _DSpreadPreviewEvents_OLESetDataEvent e) {
            if ((this.OLESetData != null)) {
                this.OLESetData(sender, e);
            }
        }
        
        internal void RaiseOnOLEGiveFeedback(object sender, _DSpreadPreviewEvents_OLEGiveFeedbackEvent e) {
            if ((this.OLEGiveFeedback != null)) {
                this.OLEGiveFeedback(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragOver(object sender, _DSpreadPreviewEvents_OLEDragOverEvent e) {
            if ((this.OLEDragOver != null)) {
                this.OLEDragOver(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragDrop(object sender, _DSpreadPreviewEvents_OLEDragDropEvent e) {
            if ((this.OLEDragDrop != null)) {
                this.OLEDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnOLECompleteDrag(object sender, _DSpreadPreviewEvents_OLECompleteDragEvent e) {
            if ((this.OLECompleteDrag != null)) {
                this.OLECompleteDrag(sender, e);
            }
        }
        
        internal void RaiseOnZoom(object sender, System.EventArgs e) {
            if ((this.Zoom != null)) {
                this.Zoom(sender, e);
            }
        }
        
        internal void RaiseOnPageChange(object sender, _DSpreadPreviewEvents_PageChangeEvent e) {
            if ((this.PageChange != null)) {
                this.PageChange(sender, e);
            }
        }
    }
    
    public delegate void _DSpreadPreviewEvents_MouseUpEventHandler(object sender, _DSpreadPreviewEvents_MouseUpEvent e);
    
    public class _DSpreadPreviewEvents_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadPreviewEvents_MouseUpEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_MouseMoveEventHandler(object sender, _DSpreadPreviewEvents_MouseMoveEvent e);
    
    public class _DSpreadPreviewEvents_MouseMoveEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadPreviewEvents_MouseMoveEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_MouseDownEventHandler(object sender, _DSpreadPreviewEvents_MouseDownEvent e);
    
    public class _DSpreadPreviewEvents_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DSpreadPreviewEvents_MouseDownEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_KeyUpEventHandler(object sender, _DSpreadPreviewEvents_KeyUpEvent e);
    
    public class _DSpreadPreviewEvents_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DSpreadPreviewEvents_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_KeyPressEventHandler(object sender, _DSpreadPreviewEvents_KeyPressEvent e);
    
    public class _DSpreadPreviewEvents_KeyPressEvent {
        
        public short keyAscii;
        
        public _DSpreadPreviewEvents_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_KeyDownEventHandler(object sender, _DSpreadPreviewEvents_KeyDownEvent e);
    
    public class _DSpreadPreviewEvents_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DSpreadPreviewEvents_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_ScriptOLEStartDragEventHandler(object sender, _DSpreadPreviewEvents_ScriptOLEStartDragEvent e);
    
    public class _DSpreadPreviewEvents_ScriptOLEStartDragEvent {
        
        public object data;
        
        public object allowedEffects;
        
        public _DSpreadPreviewEvents_ScriptOLEStartDragEvent(object data, object allowedEffects) {
            this.data = data;
            this.allowedEffects = allowedEffects;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEventHandler(object sender, _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent e);
    
    public class _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent {
        
        public object effect;
        
        public object defaultCursors;
        
        public _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent(object effect, object defaultCursors) {
            this.effect = effect;
            this.defaultCursors = defaultCursors;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_ScriptOLEDragOverEventHandler(object sender, _DSpreadPreviewEvents_ScriptOLEDragOverEvent e);
    
    public class _DSpreadPreviewEvents_ScriptOLEDragOverEvent {
        
        public object data;
        
        public object effect;
        
        public object button;
        
        public object shift;
        
        public object x;
        
        public object y;
        
        public object state;
        
        public _DSpreadPreviewEvents_ScriptOLEDragOverEvent(object data, object effect, object button, object shift, object x, object y, object state) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_ScriptOLEDragDropEventHandler(object sender, _DSpreadPreviewEvents_ScriptOLEDragDropEvent e);
    
    public class _DSpreadPreviewEvents_ScriptOLEDragDropEvent {
        
        public object data;
        
        public object effect;
        
        public object button;
        
        public object shift;
        
        public object x;
        
        public object y;
        
        public _DSpreadPreviewEvents_ScriptOLEDragDropEvent(object data, object effect, object button, object shift, object x, object y) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_ScriptOLECompleteDragEventHandler(object sender, _DSpreadPreviewEvents_ScriptOLECompleteDragEvent e);
    
    public class _DSpreadPreviewEvents_ScriptOLECompleteDragEvent {
        
        public object effect;
        
        public _DSpreadPreviewEvents_ScriptOLECompleteDragEvent(object effect) {
            this.effect = effect;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLEStartDragEventHandler(object sender, _DSpreadPreviewEvents_OLEStartDragEvent e);
    
    public class _DSpreadPreviewEvents_OLEStartDragEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int allowedEffects;
        
        public _DSpreadPreviewEvents_OLEStartDragEvent(FPSpreadADO.fpDataObject data, int allowedEffects) {
            this.data = data;
            this.allowedEffects = allowedEffects;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLESetDataEventHandler(object sender, _DSpreadPreviewEvents_OLESetDataEvent e);
    
    public class _DSpreadPreviewEvents_OLESetDataEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public short dataFormat;
        
        public _DSpreadPreviewEvents_OLESetDataEvent(FPSpreadADO.fpDataObject data, short dataFormat) {
            this.data = data;
            this.dataFormat = dataFormat;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLEGiveFeedbackEventHandler(object sender, _DSpreadPreviewEvents_OLEGiveFeedbackEvent e);
    
    public class _DSpreadPreviewEvents_OLEGiveFeedbackEvent {
        
        public int effect;
        
        public bool defaultCursors;
        
        public _DSpreadPreviewEvents_OLEGiveFeedbackEvent(int effect, bool defaultCursors) {
            this.effect = effect;
            this.defaultCursors = defaultCursors;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLEDragOverEventHandler(object sender, _DSpreadPreviewEvents_OLEDragOverEvent e);
    
    public class _DSpreadPreviewEvents_OLEDragOverEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public System.Single x;
        
        public System.Single y;
        
        public short state;
        
        public _DSpreadPreviewEvents_OLEDragOverEvent(FPSpreadADO.fpDataObject data, int effect, short button, short shift, System.Single x, System.Single y, short state) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLEDragDropEventHandler(object sender, _DSpreadPreviewEvents_OLEDragDropEvent e);
    
    public class _DSpreadPreviewEvents_OLEDragDropEvent {
        
        public FPSpreadADO.fpDataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public System.Single x;
        
        public System.Single y;
        
        public _DSpreadPreviewEvents_OLEDragDropEvent(FPSpreadADO.fpDataObject data, int effect, short button, short shift, System.Single x, System.Single y) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_OLECompleteDragEventHandler(object sender, _DSpreadPreviewEvents_OLECompleteDragEvent e);
    
    public class _DSpreadPreviewEvents_OLECompleteDragEvent {
        
        public int effect;
        
        public _DSpreadPreviewEvents_OLECompleteDragEvent(int effect) {
            this.effect = effect;
        }
    }
    
    public delegate void _DSpreadPreviewEvents_PageChangeEventHandler(object sender, _DSpreadPreviewEvents_PageChangeEvent e);
    
    public class _DSpreadPreviewEvents_PageChangeEvent {
        
        public int page;
        
        public _DSpreadPreviewEvents_PageChangeEvent(int page) {
            this.page = page;
        }
    }
    
    public class AxfpSpreadPreviewEventMulticaster : FPSpreadADO._DSpreadPreviewEvents {
        
        private AxfpSpreadPreview parent;
        
        public AxfpSpreadPreviewEventMulticaster(AxfpSpreadPreview parent) {
            this.parent = parent;
        }
        
        public virtual void MouseUp(short button, short shift, int x, int y) {
            _DSpreadPreviewEvents_MouseUpEvent mouseupEvent = new _DSpreadPreviewEvents_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
        }
        
        public virtual void MouseMove(short button, short shift, int x, int y) {
            _DSpreadPreviewEvents_MouseMoveEvent mousemoveEvent = new _DSpreadPreviewEvents_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
        }
        
        public virtual void MouseDown(short button, short shift, int x, int y) {
            _DSpreadPreviewEvents_MouseDownEvent mousedownEvent = new _DSpreadPreviewEvents_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
        }
        
        public virtual void KeyUp(ref short keyCode, short shift) {
            _DSpreadPreviewEvents_KeyUpEvent keyupEvent = new _DSpreadPreviewEvents_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
            keyCode = keyupEvent.keyCode;
        }
        
        public virtual void KeyPress(ref short keyAscii) {
            _DSpreadPreviewEvents_KeyPressEvent keypressEvent = new _DSpreadPreviewEvents_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
            keyAscii = keypressEvent.keyAscii;
        }
        
        public virtual void KeyDown(ref short keyCode, short shift) {
            _DSpreadPreviewEvents_KeyDownEvent keydownEvent = new _DSpreadPreviewEvents_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
            keyCode = keydownEvent.keyCode;
        }
        
        public virtual void DblClick() {
            System.EventArgs dblclickEvent = new System.EventArgs();
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void Click() {
            System.EventArgs clickEvent = new System.EventArgs();
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void ScriptOLEStartDrag(ref object data, ref object allowedEffects) {
            _DSpreadPreviewEvents_ScriptOLEStartDragEvent scriptolestartdragEvent = new _DSpreadPreviewEvents_ScriptOLEStartDragEvent(data, allowedEffects);
            this.parent.RaiseOnScriptOLEStartDrag(this.parent, scriptolestartdragEvent);
            data = scriptolestartdragEvent.data;
            allowedEffects = scriptolestartdragEvent.allowedEffects;
        }
        
        public virtual void ScriptOLEGiveFeedback(ref object effect, ref object defaultCursors) {
            _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent scriptolegivefeedbackEvent = new _DSpreadPreviewEvents_ScriptOLEGiveFeedbackEvent(effect, defaultCursors);
            this.parent.RaiseOnScriptOLEGiveFeedback(this.parent, scriptolegivefeedbackEvent);
            effect = scriptolegivefeedbackEvent.effect;
            defaultCursors = scriptolegivefeedbackEvent.defaultCursors;
        }
        
        public virtual void ScriptOLEDragOver(ref object data, ref object effect, ref object button, ref object shift, ref object x, ref object y, ref object state) {
            _DSpreadPreviewEvents_ScriptOLEDragOverEvent scriptoledragoverEvent = new _DSpreadPreviewEvents_ScriptOLEDragOverEvent(data, effect, button, shift, x, y, state);
            this.parent.RaiseOnScriptOLEDragOver(this.parent, scriptoledragoverEvent);
            data = scriptoledragoverEvent.data;
            effect = scriptoledragoverEvent.effect;
            button = scriptoledragoverEvent.button;
            shift = scriptoledragoverEvent.shift;
            x = scriptoledragoverEvent.x;
            y = scriptoledragoverEvent.y;
            state = scriptoledragoverEvent.state;
        }
        
        public virtual void ScriptOLEDragDrop(ref object data, ref object effect, ref object button, ref object shift, ref object x, ref object y) {
            _DSpreadPreviewEvents_ScriptOLEDragDropEvent scriptoledragdropEvent = new _DSpreadPreviewEvents_ScriptOLEDragDropEvent(data, effect, button, shift, x, y);
            this.parent.RaiseOnScriptOLEDragDrop(this.parent, scriptoledragdropEvent);
            data = scriptoledragdropEvent.data;
            effect = scriptoledragdropEvent.effect;
            button = scriptoledragdropEvent.button;
            shift = scriptoledragdropEvent.shift;
            x = scriptoledragdropEvent.x;
            y = scriptoledragdropEvent.y;
        }
        
        public virtual void ScriptOLECompleteDrag(ref object effect) {
            _DSpreadPreviewEvents_ScriptOLECompleteDragEvent scriptolecompletedragEvent = new _DSpreadPreviewEvents_ScriptOLECompleteDragEvent(effect);
            this.parent.RaiseOnScriptOLECompleteDrag(this.parent, scriptolecompletedragEvent);
            effect = scriptolecompletedragEvent.effect;
        }
        
        public virtual void OLEStartDrag(ref FPSpreadADO.fpDataObject data, ref int allowedEffects) {
            _DSpreadPreviewEvents_OLEStartDragEvent olestartdragEvent = new _DSpreadPreviewEvents_OLEStartDragEvent(data, allowedEffects);
            this.parent.RaiseOnOLEStartDrag(this.parent, olestartdragEvent);
            data = olestartdragEvent.data;
            allowedEffects = olestartdragEvent.allowedEffects;
        }
        
        public virtual void OLESetData(ref FPSpreadADO.fpDataObject data, ref short dataFormat) {
            _DSpreadPreviewEvents_OLESetDataEvent olesetdataEvent = new _DSpreadPreviewEvents_OLESetDataEvent(data, dataFormat);
            this.parent.RaiseOnOLESetData(this.parent, olesetdataEvent);
            data = olesetdataEvent.data;
            dataFormat = olesetdataEvent.dataFormat;
        }
        
        public virtual void OLEGiveFeedback(ref int effect, ref bool defaultCursors) {
            _DSpreadPreviewEvents_OLEGiveFeedbackEvent olegivefeedbackEvent = new _DSpreadPreviewEvents_OLEGiveFeedbackEvent(effect, defaultCursors);
            this.parent.RaiseOnOLEGiveFeedback(this.parent, olegivefeedbackEvent);
            effect = olegivefeedbackEvent.effect;
            defaultCursors = olegivefeedbackEvent.defaultCursors;
        }
        
        public virtual void OLEDragOver(ref FPSpreadADO.fpDataObject data, ref int effect, ref short button, ref short shift, ref System.Single x, ref System.Single y, ref short state) {
            _DSpreadPreviewEvents_OLEDragOverEvent oledragoverEvent = new _DSpreadPreviewEvents_OLEDragOverEvent(data, effect, button, shift, x, y, state);
            this.parent.RaiseOnOLEDragOver(this.parent, oledragoverEvent);
            data = oledragoverEvent.data;
            effect = oledragoverEvent.effect;
            button = oledragoverEvent.button;
            shift = oledragoverEvent.shift;
            x = oledragoverEvent.x;
            y = oledragoverEvent.y;
            state = oledragoverEvent.state;
        }
        
        public virtual void OLEDragDrop(ref FPSpreadADO.fpDataObject data, ref int effect, ref short button, ref short shift, ref System.Single x, ref System.Single y) {
            _DSpreadPreviewEvents_OLEDragDropEvent oledragdropEvent = new _DSpreadPreviewEvents_OLEDragDropEvent(data, effect, button, shift, x, y);
            this.parent.RaiseOnOLEDragDrop(this.parent, oledragdropEvent);
            data = oledragdropEvent.data;
            effect = oledragdropEvent.effect;
            button = oledragdropEvent.button;
            shift = oledragdropEvent.shift;
            x = oledragdropEvent.x;
            y = oledragdropEvent.y;
        }
        
        public virtual void OLECompleteDrag(ref int effect) {
            _DSpreadPreviewEvents_OLECompleteDragEvent olecompletedragEvent = new _DSpreadPreviewEvents_OLECompleteDragEvent(effect);
            this.parent.RaiseOnOLECompleteDrag(this.parent, olecompletedragEvent);
            effect = olecompletedragEvent.effect;
        }
        
        public virtual void Zoom() {
            System.EventArgs zoomEvent = new System.EventArgs();
            this.parent.RaiseOnZoom(this.parent, zoomEvent);
        }
        
        public virtual void PageChange(int page) {
            _DSpreadPreviewEvents_PageChangeEvent pagechangeEvent = new _DSpreadPreviewEvents_PageChangeEvent(page);
            this.parent.RaiseOnPageChange(this.parent, pagechangeEvent);
        }
    }
}
